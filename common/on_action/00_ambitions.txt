ambition_imprison_action_start = {
	effect = {
		random_rival = {
			limit = {
				prisoner = no
				employer = root.employer
				is_ruler = no
			}
			save_scope_as = imprison_ambition_target
		}
	}
}

ambition_imprison_action_finish = {
	effect = {
	}
}

ambition_become_physician_monarchy_finish = {
	effect = {
	}
}

ambition_become_steward_monarchy_finish = {
	effect = {
	}
}

ambition_become_philosopher_monarchy_finish = {
	effect = {
	}
}

ambition_become_high_priest_monarchy_finish = {
	effect = {
	}
}

ambition_become_master_of_the_guard_monarchy_finish = {
	effect = {
	}
}

ambition_become_marshal_monarchy_finish = {
	effect = {
	}
}

ambition_become_royal_tutor_monarchy_finish = {
	effect = {
	}
}

ambition_become_foreign_minister_monarchy_finish = {
	effect = {
	}
}

ambition_become_general_finish = {
	effect = {
	}
}

ambition_become_married_finish = {
	effect = {
	}
}

ambition_become_researcher_finish = {
	effect = {
	}
}

ambition_conquer_province_start = {
	effect = {
	}
}

ambition_conquer_province_finish = {
	effect = {
	}
}

ambition_become_governor_followon_finish = {
	effect = {
	}
}

ambition_become_governor_finish = {
	effect = {
	}
}

ambition_become_governor_specific_start = {
	effect = {
	}
}

ambition_become_governor_specific_finish = {
	effect = {
	}
}

ambition_have_a_son_finish = {
	effect = {
	}
}

ambition_gender_equality_finish = {
	effect = {
	}
}

ambition_release_prisoner_start = {
	effect = {
		if = {
			limit = {
				num_of_friends >= 1
				any_friend = {
					employer = root.employer
					prisoner = yes
				}
			}
			random_friend = {
				limit = {
					employer = root.employer
					prisoner = yes
				}
				save_scope_as = prisoner_ambition_target
			}
		}
		else = {
			employer = {
				random_character = {
					limit = {
						NOT = {
							this = root
						}
						has_same_family = root
						prisoner = yes
					}
					save_scope_as = prisoner_ambition_target
				}
			}
		}
	}
}

ambition_release_prisoner_finish = {
	effect = {
		if = {
			limit = {
				scope:prisoner_ambition_target = {
					has_same_family = root
				}
			}
			family = {
				add_prestige = 5
			}
		}
	}
}

ambition_be_released_from_prison_finish = {
	effect = {
	}
}

ambition_execute_rival_start = {
	effect = {
	}
}

ambition_execute_rival_finish = {
	effect = {
	}
}


ambition_grow_up = {
	effect = {
		custom_tooltip = ambition_grow_up_tooltip
		hidden_effect = {
			random_list = {
				3 = {
					trigger = {
						martial < child_stat_max
					}
					add_martial = 1
				}
				3 = {
					trigger = {
						charisma < child_stat_max 
					}
					add_charisma = 1
				}
				3 = {
					trigger = {
						zeal < child_stat_max 
					}
					add_zeal = 1
				}
				3 = {
					trigger = {
						finesse < child_stat_max 
					}
					add_finesse = 1
				}
				
				94 = {
				}
			}
		}
	}
}

ambition_become_great_warrior_monthly = {
	effect = {
		custom_tooltip = ambition_become_great_warrior_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						martial < adolescent_stat_max
					}
					add_martial = 1
				}
				1 = {
					trigger = {
						martial < adolescent_stat_max
					}
					add_martial = 2
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								charisma >= 1
							}
							add_charisma = -1
						}
						1 = {
							trigger = {
								finesse >= 1
							}
							add_finesse = -1
						}
						1 = {
							trigger = {
								zeal >= 1
							}
							add_zeal = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_great_warrior_finish = {
	effect = {
		custom_tooltip = ambition_become_great_warrior_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = original_thinker
								has_trait = tactically_inflexible
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = original_thinker
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = original_thinker
								has_trait = tactically_inflexible
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = tactically_inflexible
					}
					1 = {
						trigger = {
							NOT = {
								has_trait = confident
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = confident
					}
					1 = {
						trigger = {
							NOT = {
								has_trait = tactician
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = tactician
					}
					1 = {
						trigger = {
							NOT = {
								has_trait = disciplined
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = disciplined
					}
					1 = {
						trigger = {
							NOT = {
								has_trait = steadfast
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = steadfast
					}
					1 = {
						trigger = {
							NOT = {
								has_trait = aggressive
							}
							number_of_military_traits < max_number_of_military_traits_svalue
						}
						add_trait = aggressive
					}
				}
			}
		}
		democratic_growing_up_ambition_effect = yes
	}
}

ambition_become_despot_monthly = {
	effect = {
		custom_tooltip = ambition_become_despot_monthly_tooltip
		hidden_effect = {
			if = {
				limit = { 
					is_alive = yes
				}
				random_list = {
					2 = {
						trigger = {
							martial < adolescent_stat_max
						}
						add_martial = 1
						add_corruption = 5
					}
					1 = {
						trigger = {
							martial < adolescent_stat_max
							finesse < adolescent_stat_max
						}
						add_martial = 1
						add_finesse = 1
						add_corruption = 10
					}
					1 = {
						random_list = {
							1 = {
								trigger = {
									charisma >= 1
								}
								add_charisma = -1
							}
							1 = {
								trigger = {
									zeal >= 1
								}
								add_zeal = -1
							}
						}
					}
					96 = {}
				}
			}
		}
	}
}

ambition_become_despot_finish = {
	effect = {
		custom_tooltip = ambition_become_despot_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = abrasive
								has_trait = good_natured
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = abrasive
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = crafty
								has_trait = guileless
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = crafty
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = cruel
								has_trait = merciful
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = cruel
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = righteous
								has_trait = corrupt
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = corrupt
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = generous
								has_trait = selfish
								has_trait = miserly
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = selfish
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = honest
								has_trait = deceitful
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = deceitful
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = self_controlled
								has_trait = gluttonous
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = gluttonous
					}
				}
			}
		}
		oligarchic_growing_up_ambition_effect = yes
	}
}

ambition_become_bureaucrat_monthly = {
	effect = {
		custom_tooltip = ambition_become_bureaucrat_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						finesse < adolescent_stat_max
					}
					add_finesse = 1
				}
				1 = {
					trigger = {
						finesse < adolescent_stat_max
					}
					add_finesse = 2
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								charisma >= 1
							}
							add_charisma = -1
						}
						1 = {
							trigger = {
								zeal >= 1
							}
							add_zeal = -1
						}
						1 = {
							trigger = {
								martial >= 1
							}
							add_martial = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_bureaucrat_finish = {
	effect = {
		custom_tooltip = ambition_become_bureaucrat_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = prominent
								has_trait = unnoticeable
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = prominent
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = benefactor
								has_trait = harsh
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = benefactor
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = benefactor
								has_trait = harsh
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = harsh
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = arbitrary
								has_trait = just
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = just
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = proud
								has_trait = humble
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = proud
					}
				}
			}
		}
		traditionalist_growing_up_ambition_effect = yes
	}
}

ambition_become_rich_monthly = {
	effect = {
		custom_tooltip = ambition_become_rich_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						finesse < adolescent_stat_max
					}
					add_finesse = 1
					add_corruption = 5
				}
				1 = {
					trigger = {
						finesse < adolescent_stat_max
					}
					add_finesse = 2
					add_corruption = 10
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								charisma >= 1
							}
							add_charisma = -1
						}
						1 = {
							trigger = {
								zeal >= 1
							}
							add_zeal = -1
						}
						1 = {
							trigger = {
								martial >= 1
							}
							add_martial = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_rich_finish = {
	effect = {
		custom_tooltip = ambition_become_rich_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = selfish
								has_trait = generous
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = selfish
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = honest
								has_trait = deceitful
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = deceitful
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = crafty
								has_trait = guileless
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = crafty
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = miserly
								has_trait = generous
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = miserly
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = uncaring
								has_trait = kindly
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = uncaring
					}
				}
			}
		}
		oligarchic_growing_up_ambition_effect = yes
	}
}

ambition_become_politician_monthly = {
	effect = {
		custom_tooltip = ambition_become_politician_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						charisma < adolescent_stat_max
					}
					add_charisma = 1
				}
				1 = {
					trigger = {
						charisma < adolescent_stat_max
					}
					add_charisma = 2
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								martial >= 1
							}
							add_martial = -1
						}
						1 = {
							trigger = {
								zeal >= 1
							}
							add_zeal = -1
						}
						1 = {
							trigger = {
								finesse >= 1
							}
							add_finesse = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_politician_finish = {
	effect = {
		custom_tooltip = ambition_become_politician_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = silver_tongued
								has_trait = blunt
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = silver_tongued
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = founder
								has_trait = incapable
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = founder
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = assertive
								has_trait = submissive
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = assertive
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = cautious
								has_trait = reckless
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = cautious
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = prominent
								has_trait = unnoticeable
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = prominent
					}
				}
			}
		}
		oligarchic_growing_up_ambition_effect = yes
	}
}

ambition_become_demagogue_monthly = {
	effect = {
		custom_tooltip = ambition_become_demagogue_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						charisma < adolescent_stat_max
					}
					add_charisma = 1
					add_loyalty = demagogue_in_training_l
				}
				1 = {
					trigger = {
						charisma < adolescent_stat_max
					}
					add_charisma = 2
					add_loyalty = demagogue_in_training_l
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								martial >= 1
							}
							add_martial = -1
						}
						1 = {
							trigger = {
								zeal >= 1
							}
							add_zeal = -1
						}
						1 = {
							trigger = {
								finesse >= 1
							}
							add_finesse = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_demagogue_finish = {
	effect = {
		custom_tooltip = ambition_become_demagogue_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
				}
				if = {
					limit = {
						employer = {
							is_republic = yes
						}
					}
					character_democratic_party_conviction_effect = {
						VALUE = 20
					}
				}
				add_character_modifier = {
					name = populist_demagogue_oh_no
					duration = -1
				}
			}
		}
		democratic_growing_up_ambition_effect = yes
	}
}

ambition_become_holy_monthly = {
	effect = {
		custom_tooltip = ambition_become_holy_monthly_tooltip
		hidden_effect = {
			random_list = {
				2 = {
					trigger = {
						zeal < adolescent_stat_max
					}
					add_zeal = 1
				}
				1 = {
					trigger = {
						zeal < adolescent_stat_max
					}
					add_zeal = 2
				}
				1 = {
					random_list = {
						1 = {
							trigger = {
								martial >= 1
							}
							add_martial = -1
						}
						1 = {
							trigger = {
								charisma >= 1
							}
							add_charisma = -1
						}
						1 = {
							trigger = {
								finesse >= 1
							}
							add_finesse = -1
						}
					}
				}
				96 = {}
			}
		}
	}
}

ambition_become_holy_finish = {
	effect = {
		custom_tooltip = ambition_become_holy_finish_tooltip
		hidden_effect = {
			if = {
				limit = {
					is_alive = yes
					is_adult = yes
					number_of_traits < 6
				}
				random_list = {
					1 = {
						trigger = {
							NOR = {
								has_trait = zealous
								has_trait = tolerant
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = zealous
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = devout
								has_trait = lapsed
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = devout
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = pious
								has_trait = sceptical
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = pious
					}
					1 = {
						trigger = {
							NOR = {
								has_trait = vengeful
								has_trait = forgiving
							}
							number_of_personality_traits < max_number_of_traits_svalue
						}
						add_trait = forgiving
					}
				}
			}
		}
		traditionalist_growing_up_ambition_effect = yes
	}
}

ambition_become_dictator_finish = {
	effect = {
		add_popularity = popularity_medium
		employer = {
			add_stability = 10
		}
	}
}

scheme_assassinate_start = {
	effect = {
		if = {
			limit = {
				NOT = {
					has_variable = ongoing_scheme_target
				}
			}
			random_rival = {
				limit = {
					employer = root.employer
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
				}
				save_scope_as = ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 770
			}
			scope:ongoing_scheme_target = {
				add_to_variable_list = {
					name = targeted_by
					target = root
				}
			}
		}
	}
}

scheme_assassinate_finish = {
	effect = {
		custom_tooltip = "assassinate_outcome"
		set_variable = {
			name = recently_attempted_assassination
			days = 990
		}
		hidden_effect = {
			if = {
				limit = {
					is_ruler = no
				}
				set_variable = {
					name = roll
					value = { integer_range = { min = 1 max = 100 } }
				}
				if = { 
					limit = {
						has_variable = roll
						var:roll <= root.assassinate_chance_scheme
					}
					if = {
						limit = {
							scope:ongoing_scheme_target = {
								OR = {
									is_governor = yes
									is_general = yes
									is_admiral = yes
									has_any_office = yes
									has_tech_office = yes
								}
							}
						}
						save_scope_as = murderer
						employer = {
							trigger_event = {
								id = scheme.9
							}
						}
					}
					scope:ongoing_scheme_target = {
						death = {
							death_reason = death_murder
							killer = root
						}
					}
					if = {
						limit = {
							has_variable = number_of_murders
						}
						change_variable = {
							name = number_of_murders
							add = 1
						}
					}
					else = {
						set_variable = {
							name = number_of_murders
							value = 1
						}
					}
				}
				else = {
					random_list = {
						5 = {
							trigger = {
								employer = {
									NOT = {
										has_variable = red_handed
									}
								}
							}
							save_scope_as = failed_murderer
							employer = {
								set_variable = {
									name = red_handed
									days = 1400
								}
								trigger_event = {
									id = scheme.10
								}
							}
						}
						95 = {}
					}
				}
				remove_scheme_variables_effect = yes
			}
			else = {
				save_scope_as = assassinator
				if = {
					limit = {
						has_variable = ongoing_scheme_target
					}
					var:ongoing_scheme_target = {
						save_scope_as = assassinatee
					}
				}
				set_variable = {
					name = roll
					value = { integer_range = { min = 1 max = 100 } }
				}
				if = { 
					limit = {
						has_variable = roll
						var:roll <= root.assassinate_chance_scheme
					}
					employer = {
						trigger_event = {
							id = scheme.14
						}
					}
				}
				else = {
					employer = {
						trigger_event = {
							id = scheme.15
						}
					}
				}
			}
		}
	}
}

scheme_provoke_rival_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					is_adult = yes
					NOR = {
						this = root
						is_rival = root
						is_friend = root
					}
					OR = {
						is_ruler = no
						AND = {
							is_ruler = yes
							root.power_base >= 20
						}
					}
					can_get_rivals = yes
					trigger_if = {
						limit = {
							employer = {
								is_republic = yes
							}
						}
						NOT = {
							is_same_party_as = root
						}
					}
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
				}
				weight = {
					modifier = {
						factor = 4
						power_base >= root.power_base
					}
					modifier = {
						factor = 4
						wealth >= root.wealth
					}
					modifier = {
						factor = 0.1
						exists = spouse
						spouse = root
					}
					modifier = {
						factor = 0.1
						has_same_family = root
					}
					modifier = {
						factor = 6
						is_head_of_family = yes
						root = {
							is_head_of_family = yes
						}
					}
					modifier = {
						factor = 2
						is_party_leader = yes
					}
					modifier = {
						factor = 2
						has_any_office = yes
					}
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		scope:ongoing_scheme_target = {
			add_to_variable_list = {
				name = targeted_by
				target = root
			}
		}
	} 
}

scheme_provoke_rival_finish = {
	effect = {
		custom_tooltip = "sends_rival_request"
		save_scope_as = targeter
		scope:ongoing_scheme_target = {
			trigger_event = {
				on_action = rival_request
			}
		}
		remove_scheme_variables_effect = yes
	}
}

scheme_make_friends_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					is_adult = yes
					NOR = {
						this = root
						is_rival = root
						is_friend = root
					}
					OR = {
						is_ruler = no
						AND = {
							is_ruler = yes
							root.power_base >= 20
						}
					}
					can_get_friends = yes
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
				}
				weight = {
					modifier = {
						factor = 2
						power_base >= root.power_base
					}
					modifier = {
						factor = 2
						wealth >= root.wealth
					}
					modifier = {
						factor = 0.1
						has_same_family = root
					}
					modifier = {
						factor = 0.25
						employer = {
							is_republic = yes	
						}
						NOT = {
							is_same_party_as = root
						}
					}
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		scope:ongoing_scheme_target = {
			add_to_variable_list = {
				name = targeted_by
				target = root
			}
		}
	} 
}

scheme_make_friends_finish = {
	effect = {
		custom_tooltip = "sends_friend_request"
		save_scope_as = targeter
		scope:ongoing_scheme_target = {
			trigger_event = {
				on_action = friend_request
			}
		}
		remove_scheme_variables_effect = yes
	}
}

scheme_hold_games_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		if = {
			limit = {
				NOT = {
					exists = scope:games_province
				}
			}
			employer = {
				random_owned_province = {
					weight = {
						modifier = {
							factor = 100
							root = {
								is_governor = yes
							}
							exists = state.governor_or_ruler
							state.governor_or_ruler = root
						}
						modifier = {
							factor = 100
							controller = root.employer
						}
						modifier = {
							factor = 0.01
							has_province_modifier = games_being_held_scheme
						}
					}
					save_scope_as = games_province
				}
			}
		}
		if = {
			limit = { exists = scope:games_province }
			scope:games_province = {
				if = {
					limit = {
						NOT = {
							has_province_modifier = games_being_held_scheme
						}
					}
					add_province_modifier = {
						name = games_being_held_scheme
						duration = 365
					}
				}
			}
		}
	}
}

scheme_hold_games_finish = {
	effect = {
		custom_tooltip = "games_will_cease"
		remove_scheme_variables_effect = yes
	}
}

scheme_invest_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 770
		}
	}
}

scheme_invest_finish = {
	effect = {
		custom_tooltip = "investment_efforts_ended"
		remove_scheme_variables_effect = yes
		if = {
			limit = {
				is_ruler = yes
				employer = {
					is_ai = yes
				}
			}
			set_variable = {
				name = invested_recently
				days = 730
			}
		}
	}
}

scheme_steal_start = {
	effect = {
		random_rival = {
			limit = {
				employer = root.employer
				wealth >= root.wealth
				wealth >= 400
				OR = {
					NOT = {
						has_variable_list = targeted_by
					}
					AND = {
						has_variable_list = targeted_by
						variable_list_size = {
							name = targeted_by
							value <= 6  
						}
					}
				}
				OR = {
					is_ruler = no
					AND = {
						is_ruler = yes
						root = {
							power_base >= 15
						}
					}
				}
			}
			weight = {
				modifier = {
					factor = 0.25
					is_ruler = yes
				}
			}
			save_scope_as = ongoing_scheme_target
		}
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 770
		}
		scope:ongoing_scheme_target = {
			add_to_variable_list = {
				name = targeted_by
				target = root
			}
		}
	}
}

scheme_steal_finish = {
	effect = {
		custom_tooltip = "steal_finish_effect_tt"
		hidden_effect = {
			set_variable = {
				name = recent_theft
				days = 730
			}
			set_variable = {
				name = roll
				value = { integer_range = { min = 1 max = 100 } }
			}
			save_scope_as = thief
			if = { 
				limit = {
					exists = var:roll
					var:roll <= root.assassinate_chance_scheme
				}
				scope:ongoing_scheme_target = {
					trigger_event = {
						id = scheme.1
					}
				}
			}
			else = {
				scope:ongoing_scheme_target = {
					trigger_event = {
						id = scheme.2
					}
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

### Purchase Power Base

scheme_purchase_power_base_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
	}
}

scheme_purchase_power_base_finish = {
	effect = {
		custom_tooltip = "scheme_purchase_power_base_effect_tt"
		hidden_effect = {
			add_loyal_veterans = 8
			set_variable = {
				name = bought_power_base
				days = 730
			}
			remove_scheme_variables_effect = yes
		}
	}
}

#Expand Family Estates

scheme_expand_family_estates_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		if = {
			limit = {
				family = {
					has_variable = family_estate_location
				}	
			}
			family = {
				var:family_estate_location = {
					save_scope_as = family_estate
				}
			}
		}
		else = {
			random_holdings = {
				weight = {
					modifier = {
						factor = total_population
					}
					modifier = {
						factor = 2
						culture = scope:ongoing_scheme_target.culture
					}
				}
				save_scope_as = family_estate
			}
			family = {
				set_variable = {
					name = family_estate_location
					value = scope:family_estate
					days = -1
				}
			}
		}
		add_character_modifier = {
			name = scheme_expand_family_estates_modifier
			duration = 365
		}
		scope:family_estate = {
			add_province_modifier = {
				name = family_estates_being_expanded_modifier
				duration = 365
			}
		}
	}
}

scheme_expand_family_estates_finish = {
	effect = {
		custom_tooltip = "expand_family_estates_tt"
		hidden_effect = {
			set_variable = {
				name = expanded_family_estates
				days = 730
			}
			scope:family_estate = {
				if = {
					limit = { has_province_modifier = family_estates_being_expanded_modifier }
					remove_province_modifier = family_estates_being_expanded_modifier
				}
				add_province_modifier = {
					name = family_estate_modifier
					duration = -1
					mode = add
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}


## Disloyalty self

scheme_disloyalty_self_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		add_loyalty = scheme_disloyalty_self
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
	}
}

scheme_disloyalty_self_finish = {
	effect = {
		custom_tooltip = "scheme_disloyalty_self_effect_tt"
		hidden_effect = {
			set_variable = {
				name = disloyalty_self_cooldown
				days = 1825
			}
			remove_scheme_variables_effect = yes
		}
		if = {
			limit = { has_loyalty = scheme_disloyalty_self }
			remove_loyalty = scheme_disloyalty_self
		}
	}
}

## Disloyalty Other

scheme_disloyalty_other_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					power_base >= root.power_base
					wealth < root.wealth
					is_ruler = no
					NOT = {
						this = root
					}
					NOT = {
						is_rival = root
					}
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
			scope:ongoing_scheme_target = {
				add_to_variable_list = {
					name = targeted_by
					target = root
				}
			}
		}
	}
}

scheme_disloyalty_other_finish = {
	effect = {
		custom_tooltip = "scheme_disloyalty_other_effect_tt"
		scope:ongoing_scheme_target = {
			add_loyalty = inspired_disloyalty_other_l
		}
		hidden_effect = {
			set_variable = {
				name = disloyalty_other_cooldown
				days = 1825
			}
			remove_scheme_variables_effect = yes
		}
	}
}

## Disloyalty Other

scheme_escape_prison_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
		}
	}
}

scheme_escape_prison_finish = {
	effect = {
		custom_tooltip = "scheme_escape_prison_effect_tt"
		hidden_effect = {
			scope:ongoing_scheme_target = {
				set_variable = {
					name = roll
					value = { integer_range = { min = 1 max = 100 } }
					days = 1
				}
				if = {
					limit = {
						has_variable = roll
						var:roll <= root.escape_prison_chance
					}
					employer = {
						trigger_event = {
							id = scheme.12
						}
					}
				}
				else = {
					if = {
						limit = {
							health > 10
						}
						add_health = -10
					}
					else = {
						death = {
							death_reason = death_escaping
						}
					}
				}
			}
		}
		hidden_effect = {
			remove_scheme_variables_effect = yes
		}
	}
}

### SEEK TREATMENT

scheme_seek_treatment_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					OR = {
						has_office = office_physician
						has_office = office_republic_physician
						has_office = office_apothecary
					}
					is_alive = yes
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
			scope:ongoing_scheme_target = {
				add_gold = 100
			}
			set_treatment_variable_effect = yes
		}
	}
}

scheme_seek_treatment_finish = {
	effect = {
		custom_tooltip = "seek_treatment_effect_tt"
		hidden_effect = {
			if = {
				limit = {
					has_variable = seeking_treatment
				}
				trigger_event = {
					on_action = treatment_pulse
				}
			}
		}
	}
}

#####STEAL HOLDING

scheme_steal_holding_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					NOT = {
						this = root
					}
					employer = root.employer
					num_holdings_owned > 2
					NOT = {
						is_friend = root
					}
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
					OR = {
						is_ruler = no
						AND = {
							is_ruler = yes
							root = {
								power_base >= 15
							}
						}
					}
				}
				weight = {
					modifier = {
						factor = 0.25
						is_ruler = yes
					}
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 770
			}
			scope:ongoing_scheme_target = {
				add_to_variable_list = {
					name = targeted_by
					target = root
				}
			}
		}
	}
}

scheme_steal_holding_finish = {
	effect = {
		custom_tooltip = "steal_holding_effect_tt"
		hidden_effect = {
			set_variable = {
				name = recent_holding_theft
				days = 730
			}
			set_variable = {
				name = roll
				value = { integer_range = { min = 1 max = 100 } }
			}
			save_scope_as = thief
			if = { 
				limit = {
					exists = var:roll
					var:roll <= root.assassinate_chance_scheme
					scope:ongoing_scheme_target = {
						num_holdings_owned > 0
					}
				}
				scope:ongoing_scheme_target = {
					trigger_event = {
						id = scheme.4
					}
				}
			}
			else = {
				scope:ongoing_scheme_target = {
					trigger_event = {
						id = scheme.5
					}
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

### Seek Patronage

scheme_seek_patron_start = {
	effect = {
		employer = {
			random_character = {
				limit = {
					is_adult = yes
					NOT = {
						this = root
					}
					employer = root.employer
					NOR = {
						is_rival = root
						has_variable = patronage_cooldown
					}
					prominence >= root.prominence
					OR = {
						NOT = {
							has_variable_list = targeted_by
						}
						AND = {
							has_variable_list = targeted_by
							variable_list_size = {
								name = targeted_by
								value <= 6  
							}
						}
					}
					OR = {
						is_ruler = no
						AND = {
							is_ruler = yes
							root = {
								power_base >= 15
							}
						}
					}
				}
				weight = {
					modifier = {
						factor = 0.25
						is_ruler = yes
					}
				}
				save_scope_as = ongoing_scheme_target
			}
		}
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		scope:ongoing_scheme_target = {
			add_to_variable_list = {
				name = targeted_by
				target = root
			}
		}
	}
}

scheme_seek_patron_finish = {
	effect = {
		custom_tooltip = "seek_patron_effect_tt"
		hidden_effect = {
			save_scope_as = patronage_requester
			scope:ongoing_scheme_target = {
				set_variable = {
					name = patronage_cooldown
					days = 3650
				}
				trigger_event = {
					id = scheme.6
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

### BUY HOLDING

scheme_buy_holding_start = {
	effect = {
		employer = {
			random_owned_province = {
				limit = {
					controller = root.employer
					AND = {
						NOT = {
							this = root.employer.capital_scope
						}
						OR = {
							NOT = {
								exists = holding_owner
							}
							AND = {
								exists = holding_owner
								holding_owner = {
									is_alive = no
								}
							}
						}
					}
				}
				weight = {
					modifier = {
						factor = 10000
						any_neighbor_province = {
							trigger_if = {
								limit = {
									exists = holding_owner
								}
								holding_owner = root
							}
							trigger_else = {
								always = no
							}
						}
					}
				}
				save_scope_as = buy_holding_target
			}
		}
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 770
			}
		}
	}
}

scheme_buy_holding_finish = {
	effect = {
		custom_tooltip = "buy_holding_effect_tt"
		set_variable = {
			name = bought_holding_recently
			days = 730
		}
		hidden_effect = {
			add_holding = scope:buy_holding_target
			add_gold = -10
			remove_scheme_variables_effect = yes
		}
	}
}

### Gambling

scheme_gamble_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
		}
	}
}

scheme_gamble_finish = {
	effect = {
		custom_tooltip = "gambling_effect_tt"
		hidden_effect = {
			set_variable = {
				name = roll
				value = { integer_range = { min = 1 max = 100 } }
			}
			save_scope_as = gambler
			if = { 
				limit = {
					exists = var:roll
					var:roll <= root.gamble_chance_scheme
				}
				add_gold = 150
			}
			else = {
				random_list = {
					30 = {
						add_gold = {
							value = 0
							subtract = wealth
							divide = 8
						}
						add_character_modifier = {
							name = gambling_loss
							duration = 365
						}
					}
					30 = {
						add_gold = {
							value = 0
							subtract = wealth
							divide = 4
						}
						add_character_modifier = {
							name = bad_gambling_loss
							duration = 365
						}
					}
					40 = {
						
					}
				}
			}
			random_list = {
				10 = {
					add_character_modifier = {
						name = secret_gambler
						duration = -1
					}
				}
				90 = {}				
			}
			remove_scheme_variables_effect = yes
		}
	}
}

scheme_pitfighting_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
		}
	}
}

scheme_pitfighting_finish = {
	effect = {
		custom_tooltip = "pitfighting_effect_tt"
		hidden_effect = {
			set_variable = {
				name = roll
				value = { integer_range = { min = 1 max = 100 } }
			}
			save_scope_as = gambler
			if = { 
				limit = {
					exists = var:roll
					var:roll <= root.pitfighting_chance_scheme
				}
				add_gold = 100
				add_character_modifier = {
					name = pit_victory
					duration = 365
				}
			}
			else = {
				random_list = {
					90 = {}
					5 = {
						if = {
							limit = {
								health <= 10
							}
							death = {
								death_reason = death_pit_fighting
							}
						}
						else = {
							add_health = -10
							add_character_modifier = {
								name = pit_defeat
								duration = 365
							}
						}
					}
					5 = {
						if = {
							limit = {
								health <= 20
							}
							death = {
								death_reason = death_pit_fighting
							}
						}
						else = {
							add_health = -20
							add_character_modifier = {
								name = pit_defeat
								duration = 365
							}
						}
						
					}
				}
			}
			if = {
				limit = {
					is_alive = yes
				}
				random_list = {
					10 = {
						add_character_modifier = {
							name = secret_pit_fighter
							duration = -1
						}
					}
					90 = {}				
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

### Buy Troop Loyalty

scheme_buy_troop_loyalty_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
		}
	}
}

scheme_buy_troop_loyalty_finish = {
	effect = {
		custom_tooltip = "buy_loyalty_troops_effect_tt"
		hidden_effect = {
			while = {
				count = 2
				limit = {
					root = {
						wealth >= 800
					}
					any_character_unit = {
						any_sub_unit = {
							has_personal_loyalty = no
						}
					}
				}
				random_character_unit = {
					limit = {
						any_sub_unit = {
							has_personal_loyalty = no
						}
					}
					random_sub_unit = {
						limit = {
							has_personal_loyalty = no
						}
						set_personal_loyalty = root 
					}
				}
				root = {
					add_gold = -40
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

### Demand Office

scheme_demand_office_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 770
			}
		}
		set_variable = {
			name = demanded_an_office
			days = 3650
		}
	}
}

scheme_demand_office_finish = {
	effect = {
		custom_tooltip = "demand_office_effect_tt"
		trigger_event = {
			id = scheme.7
		}
		remove_scheme_variables_effect = yes
	}
}

scheme_abort = {
	effect = {
		remove_scheme_variables_effect = yes
		if = {
			limit = {
				exists = scope:province_target
				scope:province_target = {
					has_province_modifier = being_extorted
				}
			}
			scope:province_target = {
				remove_province_modifier = being_extorted
			}
		}
		if = {
			limit = { has_character_modifier = encroaching_on_public_land_modifier }
			remove_character_modifier = encroaching_on_public_land_modifier
		}
		if = {
			limit = { has_character_modifier = scheme_expand_family_estates_modifier }
			remove_character_modifier = scheme_expand_family_estates_modifier
		}
		if = {
			limit = { has_loyalty = scheme_disloyalty_self }
			remove_loyalty = scheme_disloyalty_self
		}
	}
}

scheme_influence_abort = {
	effect = {
		remove_scheme_variables_effect = yes
		if = {
			limit = {
				exists = employer
				employer = {
					has_country_modifier = influence_mod
				}
			}
			employer = {
				remove_country_modifier = influence_mod
			}
		}
		if = {
			limit = {
				exists = scope:province_target
				scope:province_target = {
					has_province_modifier = being_extorted
				}
			}
			scope:province_target = {
				remove_province_modifier = being_extorted
			}
		}
		if = {
			limit = { has_character_modifier = encroaching_on_public_land_modifier }
			remove_character_modifier = encroaching_on_public_land_modifier
		}
		if = {
			limit = { has_character_modifier = scheme_expand_family_estates_modifier }
			remove_character_modifier = scheme_expand_family_estates_modifier
		}
	}
}

### GOVERNOR AMBITIONS

scheme_governor_extort_start = {
	effect = {
		employer = {
			random_owned_province = {
				limit = {
					governor = root
				}
				save_scope_as = province_target
				add_province_modifier = {
					name = being_extorted
					duration = 365
				}
			}
		}
		save_scope_as = ongoing_scheme_target
		if = {
			limit = {
				exists = scope:ongoing_scheme_target
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
		}
	}
}

scheme_governor_extort_finish = {
	effect = {
		custom_tooltip = "governor_extort_effect_tt"
		hidden_effect = {
			remove_scheme_variables_effect = yes
		}
	}
}

### RULER AMBITiONS

scheme_influence_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
		}
		employer = {
			add_country_modifier = {
				name = influence_mod
				duration = 7300
			}
		}
	}
}

scheme_influence_finish = {
	effect = {
		#custom_tooltip = "influence_effect_tt"
		remove_scheme_variables_effect = yes
		if = {
			limit = {
				exists = employer
				employer = {
					has_country_modifier = influence_mod
				}
			}
			employer = {
				remove_country_modifier = influence_mod
			}
		}
	}
}

scheme_influence_monthly = {
	random_events = {
		200 = 0
		1 = influence.2
		1 = influence.3
		1 = influence.4
	}
}

scheme_ruler_legitimacy_start = {
	effect = {
		if = {
			limit = {
				NOT = {
					has_variable = ongoing_scheme_target
				}
			}
			save_scope_as = ongoing_scheme_target
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 770
			}
		}
	}
}

scheme_ruler_legitimacy_finish = {
	effect = {
		employer = {
			add_legitimacy = 5
		}
		if = {
			limit = {
				#has_culture_group = hellenic
				is_male = yes
				NOT = {
					has_bloodline_trigger = yes
				}
				number_of_traits <= 7
			}
			random = {
				chance = 2
				custom_tooltip = gain_random_diadochi_bloodline_trait
				hidden_effect = {
					#trigger_event = {
					#	id = scheme.11
					#}
				}
			}
		}
		remove_scheme_variables_effect = yes
	}
}

scheme_invest_in_agriculture_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		add_character_modifier = {
			name = "encroaching_on_public_land_modifier"
			duration = 365
		}
		set_variable = {
			name = expanded_latifundia
			days = 1825
		}
		random_holdings = {
			limit = {
				has_food_trade_good_trigger = yes
				has_city_status = no
				has_construction = no
				NOT = {
					has_province_modifier = founding_city_in_progress
				}
				NOT = {
					has_province_modifier = urban_development_in_progress
				}
			}
			save_scope_as = latifundia_holding
		}
	}
}

scheme_invest_in_agriculture_finish = {
	effect = {
		custom_tooltip = invest_in_agriculture_effect_tt
		hidden_effect = {
			#scope:latifundia_holding = {
			#	add_building_level = basic_settlement_infratructure_building
			#}
			remove_scheme_variables_effect = yes
		}
	}
}

scheme_invest_in_mining_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		add_character_modifier = {
			name = "encroaching_on_public_land_modifier"
			duration = 365
		}
		set_variable = {
			name = expanded_mines
			days = 1825
		}
		random_holdings = {
			limit = {
				has_minable_trade_good_trigger = yes
				has_city_status = no
				has_construction = no
				NOT = {
					has_province_modifier = founding_city_in_progress
				}
				NOT = {
					has_province_modifier = urban_development_in_progress
				}
			}
			save_scope_as = mining_holding
		}
	}
}

scheme_invest_in_mining_finish = {
	effect = {
		custom_tooltip = invest_in_mining_effect_tt
		hidden_effect = {
			#scope:mining_holding = {
				#add_building_level = slave_mine_building
			#}
			remove_scheme_variables_effect = yes
		}
	}
}

scheme_hold_religious_festival_start = {
	effect = {
		save_scope_as = ongoing_scheme_target
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
	}
}

scheme_hold_religious_festival_finish = {
	effect = { 
		save_scope_as = this_guy
		employer = {
			add_country_modifier = {
				name = grand_religious_festival
				duration = 730 
			}
			trigger_event = {
				id = scheme.17
			}
		}
		hidden_effect = {
			remove_scheme_variables_effect = yes
		}
	}
}


scheme_court_ruler_start = {
	effect = {
		employer.current_ruler = {
			save_scope_as = ongoing_scheme_target
			set_variable = {
				name = being_courted #Only one family at a time
				days = 365
			}
		}
		set_variable = {
			name = ongoing_scheme_target
			value = scope:ongoing_scheme_target
			days = 400
		}
		add_character_modifier = {
			name = "courting_ruler"
			duration = 365
		}
		scope:ongoing_scheme_target = {
			add_to_variable_list = {
				name = targeted_by
				target = root
			}
		}
		
	}
}

scheme_court_ruler_finish = {
	effect = {
		custom_tooltip = offer_marriage_effect_tt
		hidden_effect = {
			save_scope_as = courting_hof
			scope:ongoing_scheme_target = {
				trigger_event = { id = scheme.18 }
			}
			remove_scheme_variables_effect = yes
		}
	}
}


scheme_seek_a_spouse_start = {
	effect = {
		if = {
			limit = {
				NOT = {
					has_variable = seeking_spouse_ci
				}
			}
			employer = {
				random_character = {
					limit = {
						is_minor_character = no
						NOT = {
							this = root
						}
						is_head_of_family = yes
						family = {
							NOT = { this = root.family }
						}
					}
					save_scope_as = ongoing_scheme_target
				}
			}
			set_variable = {
				name = ongoing_scheme_target
				value = scope:ongoing_scheme_target
				days = 400
			}
			scope:ongoing_scheme_target = {
				add_to_variable_list = {
					name = targeted_by
					target = root
				}
			}
		}
		else = {
			var:ongoing_scheme_target = {
				save_scope_as = ongoing_scheme_target
			}
			scope:ongoing_scheme_target = {
				add_to_variable_list = {
					name = targeted_by
					target = root
				}
			}
		}
		add_character_modifier = {
			name = "seeking_a_spouse"
			duration = 365
		}
	}
}

scheme_seek_a_spouse_finish = {
	effect = {
		custom_tooltip = seek_spouse_effect_tt
		hidden_effect = {
			if = { #If character picked this on their own, no event.
				limit = {
					NOT = { has_variable = seeking_spouse_ci }
					trigger_if = {
						limit = { is_ruler = yes }
						employer = { is_ai = yes }
					}
				}
				random_list = {
					50 = {
						save_scope_as = spouse_seeker
						if = {
							limit = {
								is_male = yes
							}
							employer = {
								create_character = {
									age = seek_spouse_age_window
									female = yes
									culture = scope:ongoing_scheme_target.culture
									religion = scope:ongoing_scheme_target.religion
									family = scope:ongoing_scheme_target.family
									save_scope_as = new_wife
								}
							}
						}
						else = {
							employer = {
								create_character = {
									age = seek_spouse_age_window
									culture = scope:ongoing_scheme_target.culture
									religion = scope:ongoing_scheme_target.religion
									family = scope:ongoing_scheme_target.family
									save_scope_as = new_wife
								}
							}
						}
						if = {	
							limit = {
								scope:new_wife = {
									is_married = yes
								}
							}
							scope:new_wife = {
								divorce_character = spouse
							}
						}
						if = {	
							limit = {
								is_married = yes
							}
							divorce_character = spouse
						}
						if = {
							limit = {
								is_alive = yes
								is_adult = yes
								prisoner = no
								is_married = no
								scope:new_wife = {
									is_alive = yes
									is_adult = yes
									prisoner = no
									is_married = no
								}
							}							
							marry_character = scope:new_wife
						}
					}
					50 = {
						trigger_event = { id = scheme.20 } #Refusal, Character is sad.
					}
				}
			}
			else_if = { #This is our ruler, we are not AI
				limit = {
					is_ruler = yes
				}
				random_list = {
					50 = { #Positive Outcome
						trigger = {
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty > 30
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty > 70
							}
						}
						modifier = {
							add = -20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								family = {
									is_scorned = yes
								}
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								family = {
									is_grateful = yes
								}
							}
						}
						modifier = {
							add = 20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = submissive
							}
						}
						save_scope_as = suitor
						trigger_event = { id = scheme.21 }
					}
					50 = {	#Outright Refusal
						trigger = {
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty <= 40
							}
						}
						modifier = {
							add = 20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = arrogant
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = foolish
							}
						}
						save_scope_as = spurned_suitor
						trigger_event = { id = scheme.22 }
					}
				}
			}
			else = { #Not our ruler, but we picked the scheme ourselves.
				random_list = {
					50 = {
						trigger = {
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty > 50
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty > 70
							}
						}
						modifier = {
							add = -20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								family = {
									is_scorned = yes
								}
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								family = {
									is_grateful = yes
								}
							}
						}
						modifier = {
							add = 20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = submissive
							}
						}
						save_scope_as = suitor
						employer.current_ruler = {
							trigger_event = { id = scheme.21 }
						}
					}
					50 = {
						trigger = {
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								loyalty <= 50
							}
						}
						modifier = {
							add = 20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = arrogant
							}
						}
						modifier = {
							add = 10
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								has_trait = foolish
							}
						}
						modifier = {
							add = 20
							exists = scope:ongoing_scheme_target
							scope:ongoing_scheme_target = {
								family = {
									is_scorned = yes
								}
							}
						}
						save_scope_as = spurned_suitor
						employer.current_ruler = {
							trigger_event = { id = scheme.23 }
						}
					}
				}
			}
			remove_scheme_variables_effect = yes
		}
	}
}

