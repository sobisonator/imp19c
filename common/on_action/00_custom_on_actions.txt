#NOTE: The Following need to be removed from all other on_actions
#disloyal_powerful_characters_pulse
#nickname_from_battle
#custom_on_action_imprison
#custom_on_action_execute
#custom_on_action_sacrifice
#claims_pulse
#plot_outcome_rep_37
#plot_outcome_mon_15
#plot_outcome_mon_18
#plot_outcome_mon_27
#plot_events_early
#plot_events_intermediary
#plot_events_final
#pretenders_battling
#plot_events_fallback
#olympic_country_pulse
#yearly_gambling_pulse
#yearly_disaster_pulse
#befriend_pulse
#befriend_resolution
#befriend_end
#befriend_fail
#yearly_subject_pulse
#commander_loyalty_demand_picker
#assassinate_setup
#assassinate_step_two
#assassinate_preparations_being_made
#assassinate_result
#assassinate_fallback
#yearly_general_unit_purchase_pulse
#yearly_crisis_start_pulse
#trial_step
#trial_end
#ip_mon_42_plot_early
#ip_mon_42_plot_late
#ip_mon_42_plot_fallback
#ip_mon_54_plot_early
#ip_mon_54_plot_late
#ip_mon_54_plot_late
#ip_mon_54_plot_fallback
#ip_mon_64_events
#brothers_events
#brothers_events_fallback
#friend_request
#rival_request
#ip_rep_66_development_on_action
#ip_rep_66_close_on_action
#generic_1_pulse
#generic_infra_temple_pulse
#generic_infra_colonia_pulse
#generic_infra_governor_residence_pulse
#generic_infra_monument_pulse
#prospecting_pulse
#yearly_bad_advisor_pulse
#yearly_good_advisor_pulse
#great_work_yearly_pulse
#great_work_five_yearly_pulse
#no_great_work_pulse
#great_work_ai_construction_yearly_pulse
#great_work_misc_yearly_pulse
#espionage_character_pulse
#


#I NEED TO CHECK THESE AND SEE IF THEY SHOULD STILL BE IN:
#yearly_debt_recovery_pulse
#prominent_actors_setup - This is used for important scripted modifiers in vanilla, should keep this.

# IMP19C - This file cannot have any vanilla stuff in it.

on_republic_reign_ending = {
	trigger = {
		is_republic = yes
	}
	effect = {
		every_party = {
			pick_random_agenda = yes
		}
	}
}

on_republic_ruler_change = {
	trigger = {
		is_republic = yes
		exists = current_ruler.character_party
	}
	effect = {
		switch = {
			trigger = has_co_ruler_government
			no = {
				every_party = {
					limit = {
						NOT = { this = root.current_ruler.character_party }
					}
					ROOT = {
						add_party_approval = {
							party = PREV
							value = party_disapproval_medium_svalue
						}
					}
				}
			}
			yes = {
				every_party = {
					limit = {
						NOT = { this = root.current_ruler.character_party }
					}
					ROOT = {
						add_party_approval = { #For the losing party + co rulers party.
							party = PREV
							value = party_disapproval_small_svalue
						}
					}
				}
			}
		}
	}
}

yearly_debt_recovery_pulse = {
	trigger = {
		has_character_modifier = debt_payoff_toggle
	}
	effect = {
		if = {
			limit = {
				wealth < 0
			}
			add_gold = 60
		}
		else = {
			remove_character_modifier = debt_payoff_toggle
			employer = {
				release_prisoner = {
					target = root
				}
			}
			add_loyalty = debt_paid_off
			add_character_modifier = {
				name = debt_paid_off
				duration = 730
			}
		}
	}
}

main_event_pulse_country = {
	trigger = {
		num_of_cities >= 1
		NOR = {
			tag = REB
			tag = BAR
			has_variable = ongoing_mission_pulse_flag
		}
	}
	events = {
	}
	random_events = {
		500 = 0
	}
}

prominent_actors_setup = {
	trigger = {
		NOR = {
			tag = REB
			tag = MER
			tag = PIR
		}
		has_land = yes
		any_character = {
			count < 5
			has_variable = prominent_actor
		}
	}
	
	effect = {
		while = {
			count = 5
			limit = {
				has_land = yes
				any_character = {
					count < 5
					has_variable = prominent_actor
				}
			}
			random_character = {
				limit = {
					NOR = {
						has_character_modifier = foreign_citizen
						has_variable = prominent_actor
					}
					is_ruler = no
					is_adult = yes
				}
				weight = {
					modifier = {
						factor = 100
						prominence >= 60
					}
					modifier = {
						factor = 1.5
						has_any_office = yes
					}
					modifier = {
						factor = 1.5
						has_any_office = yes
					}
					modifier = {
						factor = 1.5
						age >= 50
					}
					modifier = {
						factor = 0
						employer = {
							gender_equality = no
						}
						is_female = yes
					}
				}
				set_variable = {
					name = prominent_actor
					value = 1
				}
			}
		}
	}
}

on_reign_ending_successor = { #scope:former_ruler = the successor, because onactions..., root = country,
	effect = { 
		scope:former_ruler = {
			if = {
				limit = {
					has_character_modifier = foreign_citizen
				}
				remove_character_modifier = foreign_citizen
			}
		}
		if = {
			limit = {
				tag = CHI
				government = imperial_monarchy
			}
			scope:former_ruler = {
				save_scope_as = chinese_emperor
			}
			root = { trigger_event = namechange.1 }
			scope:chinese_emperor = {
				random_list = {
					10 = { set_variable = { name = number_for_era_name value = 1 } }
					10 = { set_variable = { name = number_for_era_name value = 2 } }
					10 = { set_variable = { name = number_for_era_name value = 3 } }
					10 = { set_variable = { name = number_for_era_name value = 4 } }
					10 = { set_variable = { name = number_for_era_name value = 5 } }
					10 = { set_variable = { name = number_for_era_name value = 6 } }
					10 = { set_variable = { name = number_for_era_name value = 7 } }
					10 = { set_variable = { name = number_for_era_name value = 8 } }
					10 = { set_variable = { name = number_for_era_name value = 9 } }
					10 = { set_variable = { name = number_for_era_name value = 10 } }
				}
#				father = {
#					limit = {
#						is_previous_ruler = yes
#						is_alive = no
#					}
#					save_scope_as = previous_emperor
#				}
				father = {
					limit = {
						is_previous_ruler = no
						is_alive = no
					}
					save_scope_as = posthumous_emperor
				}
				mother = {
					limit = {
						is_alive = no
						is_previous_ruler = no
						NOT = { is_spouse_of = previous_emperor }
					}
					save_scope_as = posthumous_empress
				}
				mother = {
					limit = {
						is_alive = yes
					}
					save_scope_as = dowager_empress
				}
			}
			char:224 = {
				save_scope_as = previous_emperor
			}
		}
		#else_if = {
		#	limit = {
		#		tag = PAP
		#		government = catholic_papacy
		#	}
		#	scope:former_ruler = {
		#		save_scope_as = roman_pope
		#	}
		#	#root = { create_family = "POPE_FAMILY" }
		#	root = { trigger_event = namechange.3 }
		#}
	}
}