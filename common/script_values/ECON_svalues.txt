# Functional

## General

### Governorship level

governorship_total_provinces = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = 1
		}
	}
}

## Industrialisation

### Governorship level

governorship_average_industrialisation = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = civilization_value
		}
	}
	divide = governorship_total_provinces
}

## Population

### National level

national_population_real = {
	value = country_population
	multiply = 0.004
}

### Governorship level

governorship_population = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			add = total_population
		}
	}
}

governorship_upper_strata = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_upper_strata >= 1
			}
			add = num_of_upper_strata
		}
	}
}

governorship_middle_strata = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_middle_strata >= 1
			}
			add = num_of_middle_strata
		}
	}
}

governorship_lower_strata = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_lower_strata >= 1
			}
			add = num_of_lower_strata
		}
	}
}

governorship_proletariat = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_proletariat >= 1
			}
			add = num_of_proletariat
		}
	}
}

governorship_indentured = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_indentured >= 1
			}
			add = num_of_indentured
		}
	}
}

governorship_slaves = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_slaves >= 1
			}
			add = num_of_slaves
		}
	}
}

governorship_tribesmen = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			limit = {
				num_of_tribesmen >= 1
			}
			add = num_of_tribesmen
		}
	}
}

governorship_the_state = { # Used for state subsidies as a proportion of quarterly spends on imports
	value = governorship_population
}

### Province level

inverse_industrialisation = { # Inverse of industrialisation as a fraction (e.g. if ind is 85%, this will be 0.15)
	value = 100
	subtract = civilization_value
	divide = 100
}

industrialisation_as_modifier = {
	value = civilization_value
	divide = 100
}

#### Filled slots
	# Mechanics for determining how many slots are filled

# Currency

### Country level

CURRENCY_inflation_value = {
	value = 2
}

num_of_governorships = {
	value = 0
	every_governorships = {
		add = 1
	}
}

num_of_tradezones = {
	# Scope: country
	if = {
		limit = {
			has_variable = country_num_of_TZs
		}
		value = var:country_num_of_TZs
	}
}

# Building tooltip svalues

num_of_URB_commerce_district_svalue = {
	# Scope: Province
	value = num_of_URB_commerce_district
}

URB_commerce_district_income_province = {
	# Scope: Province
	value = num_of_URB_commerce_district
	multiply = governorship.var:trade_center.var:WEALTH_services_value_TZ
}

num_of_INF_hospital_svalue = {
	# Scope: Province
	value = num_of_INF_hospital
}

num_of_INF_railway_upgrade_svalue = {
	# Scope: Province
	value = num_of_INF_railway_upgrade
}

num_of_EDU_university_svalue = {
	# Scope: Province
	value = num_of_EDU_university
}

num_of_EDU_school_svalue = {
	# Scope: Province
	value = num_of_EDU_school
}

num_of_INF_depot_svalue = {
	# Scope: Province
	value = num_of_INF_depot
}

num_of_IND_industrial_estate_svalue = {
	# Scope: Province
	value = num_of_IND_industrial_estate
}

num_of_IND_resource_gathering_operation_svalue = {
	# Scope: Province
	value = num_of_IND_resource_gathering_operation
}

num_of_URB_administration_district_svalue = {
	# Scope: Province
	value = num_of_URB_administration_district
	
}

RGO_industrialisation_growth_bonus = {
	value = num_of_IND_resource_gathering_operation
	multiply = 0.001
}

RGO_slaves_output_bonus = {
	value = 8
	multiply = num_of_IND_resource_gathering_operation
	divide = 10
}

RGO_indentured_output_bonus = {
	value = 8
	multiply = num_of_IND_resource_gathering_operation
	divide = 10
}

RGO_lower_strata_output_bonus = {
	value = 7
	multiply = num_of_IND_resource_gathering_operation
	divide = 10
}

RGO_proletariat_output_bonus = {
	value = 5
	multiply = num_of_IND_resource_gathering_operation
	divide = 10
}

RGO_tribesmen_output_bonus = {
	value = 2
	multiply = num_of_IND_resource_gathering_operation
	divide = 10
}

RGO_base_resources_bonus = {
	value = 1
	multiply = num_of_IND_resource_gathering_operation
}

IND_industrial_estate_industrialisation_growth_bonus = {
	value = num_of_IND_industrial_estate
	multiply = 0.004
}

INF_hospital_percent_pop_growth_bonus_province = {
	value = num_of_INF_hospital
	multiply = INF_hospital_percent_pop_growth_bonus
}

INF_hospital_percent_pop_growth_bonus = {
	value = 0.05
}

num_of_INF_canal_svalue = {
	value = num_of_INF_canal
}

INF_canal_industrialisation_bonus_province = {
	value = num_of_INF_canal
	multiply = INF_canal_industrialisation_bonus
}

INF_canal_industrialisation_bonus = {
	value = 0.0201
}

INF_railway_upgrade_industrialisation_bonus_province = {
	value = num_of_INF_railway_upgrade
	multiply = INF_railway_upgrade_industrialisation_bonus
}

INF_railway_upgrade_industrialisation_bonus = {
	value = 0.0201
}

INF_railway_upgrade_army_movement_bonus_province = {
	value = num_of_INF_railway_upgrade
	multiply = INF_railway_upgrade_army_movement_bonus
}

INF_railway_upgrade_army_movement_bonus = {
	value = 0.1
}