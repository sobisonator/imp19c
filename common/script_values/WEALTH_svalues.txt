# Localised wealth

# 0.01 unit of wealth = enough to sustain 1 pop (4,000 people) at subsistence level for 1 quarter-year.
# These are matched in scale to Amenities. 0.01 amenities is the base amount consumed by 1 pop

WEALTH_upper_strata_mod = {
	value = 22.8
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_middle_strata_mod = {
	value = 8.8
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_lower_strata_mod = {
	value = 1.6
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_proletariat_mod = {
	value = 1.2
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_slaves_mod = {
	value = 0.1
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_indentured_mod = {
	value = 0.6
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

WEALTH_tribesmen_mod = {
	value = 0.6
	if = {
		limit = {
			exists = owner
			owner ?= {
				has_variable = GDP_modifier
			}
		}
		multiply = owner.var:GDP_modifier
	}
}

### Governorship level

# Values for game start
#  These values are saved into the variables on game startup, allowing for wealth to be dynamically generated
#  They are never used after game start

WEALTH_starting_upper_strata = {
	value = governorship_upper_strata
	multiply = WEALTH_upper_strata_mod
}

WEALTH_starting_middle_strata = {
	value = governorship_middle_strata
	multiply = WEALTH_middle_strata_mod
}

WEALTH_starting_lower_strata = {
	value = governorship_lower_strata
	multiply = WEALTH_lower_strata_mod
}

WEALTH_starting_proletariat = {
	value = governorship_proletariat
	multiply = WEALTH_proletariat_mod
}

WEALTH_starting_slaves = {
	value = governorship_slaves
	multiply = WEALTH_slaves_mod
}

WEALTH_starting_indentured = {
	value = governorship_indentured
	multiply = WEALTH_indentured_mod
}

WEALTH_starting_tribesmen = {
	value = governorship_tribesmen
	multiply = WEALTH_tribesmen_mod
}

# Values for province transfer from uncolonised

WEALTH_starting_upper_strata_province = {
	value = num_of_upper_strata
	multiply = WEALTH_upper_strata_mod
}

WEALTH_starting_middle_strata_province = {
	value = num_of_middle_strata
	multiply = WEALTH_middle_strata_mod
}

WEALTH_starting_lower_strata_province = {
	value = num_of_lower_strata
	multiply = WEALTH_lower_strata_mod
}

WEALTH_starting_proletariat_province = {
	value = {
		every_pops_in_province = {
			limit = {
				pop_type = proletariat
			}
			add = 1
		}
	}
	multiply = WEALTH_proletariat_mod
}

WEALTH_starting_tribesmen_province = {
	value = num_of_tribesmen
	multiply = WEALTH_tribesmen_mod
}

WEALTH_starting_slaves_province = {
	value = num_of_slaves
	multiply = WEALTH_slaves_mod
}

WEALTH_starting_indentured_province = {
	value = {
		every_pops_in_province = {
			limit = {
				pop_type = indentured
			}
			add = 1
		}
	}
	multiply = WEALTH_indentured_mod
}


# Variables to svalues 

WEALTH_governorship_upper_strata = { # Amount of wealth owned by the local upper strata. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		value = var:upper_strata_wealth
	}
	min = 0.001
}

WEALTH_governorship_middle_strata = { # Amount of wealth owned by the local middle strata. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = middle_strata_wealth
		}
		value = var:middle_strata_wealth
	}
	min = 0.001
}

WEALTH_governorship_lower_strata = { # Amount of wealth owned by the local upper strata. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = lower_strata_wealth
		}
		value = var:lower_strata_wealth
	}
	min = 0.001
}

WEALTH_governorship_proletariat = { # Amount of wealth owned by the local proletariat. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = proletariat_wealth
		}
		value = var:proletariat_wealth
	}
	min = 0.001
}

WEALTH_governorship_slaves = { # Amount of wealth owned by the local slaves. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = slaves_wealth
		}
		value = var:slaves_wealth
	}
	min = 0.001
}

WEALTH_governorship_indentured = { # Amount of wealth owned by the local upper strata. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = indentured_wealth
		}
		value = var:indentured_wealth
	}
	min = 0.001
}

WEALTH_governorship_tribesmen = { # Amount of wealth owned by the local tribesmen. Pulls from the variable.
	value = 0
	if = {
		limit = {
			has_variable = tribesmen_wealth
		}
		value = var:tribesmen_wealth
	}
	min = 0.001
}

# Wealth from assets

## PROVINCE LEVEL
# Broken down by building - this is the easiest way

WEALTH_fortress_assets = {
	value = num_of_fortress_building
	multiply = 30
}

WEALTH_arsenal_assets = {
	value = num_of_arsenal_building
	multiply = 30
}

WEALTH_housing_district_assets = {
	value = num_of_URB_residential_district
	multiply = 25
}

WEALTH_cultural_district_assets = {
	value = num_of_URB_cultural_district
	multiply = 35
}

WEALTH_commerce_district_assets = {
	value = num_of_URB_commerce_district
	multiply = 25
}

WEALTH_administration_district_assets = {
	value = num_of_URB_administration_district
	multiply = 25
}

WEALTH_sewer_infrastructure_assets = {
	value = num_of_INF_sewer_infrastructure
	multiply = 25
}

WEALTH_hopsital_assets = {
	value = num_of_INF_hospital
	multiply = 25
}

WEALTH_industrial_estate_assets = {
	value = num_of_IND_industrial_estate
	multiply = 25
}

WEALTH_rgo_assets = {
	value = num_of_IND_resource_gathering_operation
	multiply = 25
}

WEALTH_university_assets = {
	value = num_of_EDU_university
	multiply = 25
}

WEALTH_school_assets = {
	value = num_of_EDU_school
	multiply = 25
}

WEALTH_school_assets = {
	value = num_of_EDU_school
	multiply = 25
}

WEALTH_railway_assets = {
	value = num_of_INF_railway_upgrade
	multiply = 25
}

WEALTH_port_assets = {
	value = num_of_port_building
	multiply = 25
}

WEALTH_total_nonpublic_assets = { # Excludes military buildings and infrastructure, except for rail
	value = num_of_used_building_slots
	subtract = num_of_fortress_building
	subtract = num_of_arsenal_building
	# TODO - errors
	# subtract = WEALTH_total_infrastructure_assets
	multiply = 25
}

## GOVERNORSHIP LEVEL

WEALTH_total_governorship_assets = {
	value = 0
	every_governorship_state = {
		every_state_province = {
			# TODO - errors
			# add = WEALTH_total_assets
			add = 1
		}
	}
}

# Caps for wealth in assets owned by pops / the state. Only upper and middle strata can own assets

WEALTH_assets_owned_upper_strata = { # The presumption is that all assets are owned by upper strata. Reforms take that away and give it to middle strata or the state.
	value = 0
}

WEALTH_assets_owned_middle_strata = {
	value = 0
}

WEALTH_assets_owned_state = {
	value = 0
}

# For funky calculations

WEALTH_governorship_total = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			has_variable = upper_strata_wealth
		}
		value = var:upper_strata_wealth
		add = var:middle_strata_wealth
		add = var:lower_strata_wealth
		add = var:proletariat_wealth
		add = var:slaves_wealth
		add = var:indentured_wealth
		add = var:tribesmen_wealth
	}
	else = {
		value = 1
	}
}

WEALTH_governorship_per_capita = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		value = WEALTH_governorship_total
		divide = governorship_population
	}
	min = 0.001 # To avoid div/0
}

WEALTH_governorship_upper_strata_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_upper_strata > 0
		}
		value = WEALTH_governorship_upper_strata
		divide = governorship_upper_strata
	}
}

WEALTH_governorship_middle_strata_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_middle_strata > 0
		}
		value = WEALTH_governorship_middle_strata
		divide = governorship_middle_strata
	}
}

WEALTH_governorship_lower_strata_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_lower_strata > 0
		}
		value = WEALTH_governorship_lower_strata
		divide = governorship_lower_strata
	}
}

WEALTH_governorship_proletariat_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_proletariat > 0
		}
		value = WEALTH_governorship_proletariat
		divide = governorship_proletariat
	}
}

WEALTH_governorship_slaves_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_slaves > 0
		}
		value = WEALTH_governorship_slaves
		divide = governorship_slaves
	}
}

WEALTH_governorship_indentured_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_indentured > 0
			governorship_indentured > 0
		}
		value = WEALTH_governorship_indentured
		divide = governorship_indentured
	}
}

WEALTH_governorship_tribesmen_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
			WEALTH_governorship_tribesmen > 0
		}
		value = WEALTH_governorship_tribesmen
		divide = governorship_tribesmen
	}
}

# NATION-LEVEL VALUES

WEALTH_total_private_moveable_wealth = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		every_governorships = {
			add = WEALTH_governorship_total
		}
	}
}

WEALTH_total_private_moveable_wealth_scaled = {
	value = WEALTH_total_private_moveable_wealth
	divide = 100
}

WEALTH_national_per_capita = {
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		value = WEALTH_total_private_moveable_wealth
		divide = country_population
	}
}

WEALTH_national_upper_strata = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		every_governorships = {
			add = var:upper_strata_wealth
		}
	}
}

WEALTH_national_middle_strata = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		every_governorships = {
			add = var:middle_strata_wealth
		}
	}
}

WEALTH_national_lower_strata = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		every_governorships = {
			add = var:lower_strata_wealth
		}
	}
}

WEALTH_national_total = {
	value = WEALTH_total_private_moveable_wealth
}

WEALTH_governorship_percentage_of_national = {
	value = WEALTH_governorship_total
	divide = owner.var:WEALTH_total_private_moveable_wealth
}

WEALTH_import_price_all_tradegoods = {
	# Scope: Country
	value = var:country_unit_price_grain
	add = var:country_unit_price_fish
	add = var:country_unit_price_livestock
	add = var:country_unit_price_vegetables
	add = var:country_unit_price_temperate_fruit
	add = var:country_unit_price_processed_foods
	add = var:country_unit_price_clothing
	add = var:country_unit_price_furniture
	add = var:country_unit_price_pharmaceuticals
	add = var:country_unit_price_coal
	add = var:country_unit_price_alcohol
	add = var:country_unit_price_gems
	add = var:country_unit_price_opium
	add = var:country_unit_price_tobacco
	add = var:country_unit_price_coffee
	add = var:country_unit_price_tea
	add = var:country_unit_price_spices
	add = var:country_unit_price_sugar
	add = var:country_unit_price_luxury_clothing
	add = var:country_unit_price_luxury_furniture
	add = var:country_unit_price_glass
	add = var:country_unit_price_motors
	add = var:country_unit_price_fur
	add = var:country_unit_price_industrial_fibres
	add = var:country_unit_price_textile_fibres
	add = var:country_unit_price_wool
	add = var:country_unit_price_silk
	add = var:country_unit_price_wood
	add = var:country_unit_price_stone
	add = var:country_unit_price_sulphur
	add = var:country_unit_price_tin
	add = var:country_unit_price_copper
	add = var:country_unit_price_iron
	add = var:country_unit_price_gold
	add = var:country_unit_price_silver
	add = var:country_unit_price_dye
	add = var:country_unit_price_lead
	add = var:country_unit_price_oil
	add = var:country_unit_price_hardwood
	add = var:country_unit_price_rubber
	add = var:country_unit_price_salt
	add = var:country_unit_price_electronics
	add = var:country_unit_price_construction_materials
	add = var:country_unit_price_steel
	add = var:country_unit_price_bronze
	add = var:country_unit_price_machine_parts
	add = var:country_unit_price_chemicals
	add = var:country_unit_price_naval_supplies
	add = var:country_unit_price_steel_ships
	add = var:country_unit_price_wooden_ships
	add = var:country_unit_price_petrochemicals
	add = var:country_unit_price_early_munitions
	add = var:country_unit_price_late_munitions
	add = var:country_unit_price_early_artillery
	add = var:country_unit_price_late_artillery
}


### WAGES - PORT INTO NEW FILE

WAGE_wealth_value_manufacturing = {
	# Scope: Governorship
	# Function: Turns the value of the wage in currency into its value in wealth
	value = var:WAGE_manufacturing
	multiply = CURRENCY_wealth_value_1_unit_scaled_by_reserve_ratio
}


### OWNERSHIP OF NEW WEALTH GENERATED


# Scope: Governorship
# Function: These svalues set the weightings for newly generated wealth to go into the pockets of different pop types

## PRODUCTION
WEALTH_new_ownership_production_share_upper_strata = {
	value = 1
}

WEALTH_new_ownership_production_share_middle_strata = {
	value = 0.1
}

WEALTH_new_ownership_production_share_lower_strata = {
	value = 0.01
}

WEALTH_new_ownership_production_share_proletariat = {
	value = 0
}

WEALTH_new_ownership_production_share_tribesmen = {
	value = 0.1
}

WEALTH_new_ownership_production_share_slaves = {
	value = 0
}

WEALTH_new_ownership_production_share_indentured = {
	value = 0
}

WEALTH_sum_of_new_ownership_production_shares = {
	value = WEALTH_new_ownership_production_share_upper_strata
	add = WEALTH_new_ownership_production_share_middle_strata
	add = WEALTH_new_ownership_production_share_lower_strata
	add = WEALTH_new_ownership_production_share_proletariat
	add = WEALTH_new_ownership_production_share_tribesmen
	add = WEALTH_new_ownership_production_share_slaves
	add = WEALTH_new_ownership_production_share_indentured
}

## SERVICES

WEALTH_new_ownership_services_share_upper_strata = {
	value = 1
}

WEALTH_new_ownership_services_share_middle_strata = {
	value = 0.1
}

WEALTH_new_ownership_services_share_lower_strata = {
	value = 0
}

WEALTH_new_ownership_services_share_proletariat = {
	value = 0
}

WEALTH_new_ownership_services_share_tribesmen = {
	value = 0
}

WEALTH_new_ownership_services_share_slaves = {
	value = 0
}

WEALTH_new_ownership_services_share_indentured = {
	value = 0
}

WEALTH_sum_of_new_ownership_services_shares = {
	value = WEALTH_new_ownership_services_share_upper_strata
	add = WEALTH_new_ownership_services_share_middle_strata
	add = WEALTH_new_ownership_services_share_lower_strata
	add = WEALTH_new_ownership_services_share_proletariat
	add = WEALTH_new_ownership_services_share_tribesmen
	add = WEALTH_new_ownership_services_share_slaves
	add = WEALTH_new_ownership_services_share_indentured
}

### DURABILITY OF TRADEGOODS
# Scope: Governorship
# Function: Determine the durability of a tradegood and therefore the decay of its wealth value over time after production, representing how quickly something needs to be traded away or consumed to create value

# Measured in percentage of stock left after one quarter

WEALTH_grain_durability = {
	value = 0.8
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_fish_durability = {
	value = 0.5
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_livestock_durability = {
	value = 0.9
}
WEALTH_vegetables_durability = {
	value = 0.7
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_temperate_fruit_durability = {
	value = 0.6
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_processed_foods_durability = {
	value = 0.9
}
WEALTH_clothing_durability = {
	value = 0.95
}
WEALTH_furniture_durability = {
	value = 0.95
}
WEALTH_pharmaceuticals_durability = {
	value = 0.5
}
WEALTH_coal_durability = {
	value = 1
}
WEALTH_alcohol_durability = {
	value = 0.95
}
WEALTH_gems_durability = {
	value = 1
}
WEALTH_opium_durability = {
	value = 0.9
}
WEALTH_tobacco_durability = {
	value = 0.8
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_coffee_durability = {
	value = 0.8
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_tea_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_spices_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_sugar_durability = {
	value = 0.95
}
WEALTH_luxury_clothing_durability = {
	value = 0.95
}
WEALTH_luxury_furniture_durability = {
	value = 0.95
}
WEALTH_glass_durability = {
	value = 1
}
WEALTH_motors_durability = {
	value = 1
}
WEALTH_fur_durability = {
	value = 0.95
}
WEALTH_industrial_fibres_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_textile_fibres_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_wool_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_silk_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_wood_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_stone_durability = {
	value = 1
}
WEALTH_sulphur_durability = {
	value = 0.95
}
WEALTH_tin_durability = {
	value = 0.95
}
WEALTH_copper_durability = {
	value = 0.9
}
WEALTH_iron_durability = {
	value = 0.9
}
WEALTH_gold_durability = {
	value = 1
}
WEALTH_silver_durability = {
	value = 1
}
WEALTH_dye_durability = {
	value = 0.8
}
WEALTH_lead_durability = {
	value = 1
}
WEALTH_oil_durability = {
	value = 1
}
WEALTH_hardwood_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.15
	}
}
WEALTH_rubber_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_salt_durability = {
	value = 0.95
}
WEALTH_electronics_durability = {
	value = 1
}
WEALTH_construction_materials_durability = {
	value = 0.95
}
WEALTH_steel_durability = {
	value = 0.95
}
WEALTH_bronze_durability = {
	value = 0.95
}
WEALTH_machine_parts_durability = {
	value = 0.95
}
WEALTH_chemicals_durability = {
	value = 0.8
}
WEALTH_naval_supplies_durability = {
	value = 0.9
	if = {
		limit = {
			random_governorship_state.region = { region_is_tropical = yes }
		}
		subtract = 0.25
	}
}
WEALTH_steel_ships_durability = {
	value = 0.95
}
WEALTH_wooden_ships_durability = {
	value = 0.95
}
WEALTH_petrochemicals_durability = {
	value = 0.95
}
WEALTH_early_munitions_durability = {
	value = 0.9
}
WEALTH_late_munitions_durability = {
	value = 0.95
}
WEALTH_early_artillery_durability = {
	value = 0.9
}
WEALTH_late_artillery_durability = {
	value = 0.95
}

WEALTH_total_new_generated_governorship = {
	if = {
		limit = {
			has_variable = WEALTH_new_generated_production_governorship
		}
		value = var:WEALTH_new_generated_production_governorship
		add = var:WEALTH_new_generated_services_governorship
	}
	else = {
		value = 0
	}
}

## Tracking values for wealth change

WEALTH_percentage_change_governorship = {
	# Scope: Governorship
	# Function: Shows the % change in wealth in the governorship from the amount in the previous quarter
	value = WEALTH_governorship_total
	divide = WEALTH_total_last_quarter_governorship
	subtract = 1
}

WEALTH_total_last_quarter_governorship = {
	# Scope: Governorship
	# Function: Subtracts all wealth added this quarter from the current wealth value, thereby getting the wealth value last quarter
	# Adds the wealth lost as negative values
	value = WEALTH_governorship_total
	subtract = var:WEALTH_new_generated_production_governorship
	subtract = var:WEALTH_new_generated_services_governorship
	subtract = var:final_quarterly_trade_income_due_resource_extraction
	subtract = var:final_quarterly_trade_income_due_manufacturing
	subtract = var:final_quarterly_trade_expenses_due_resource_extraction
	subtract = var:final_quarterly_trade_expenses_due_manufacturing
	subtract = var:trade_income_due_shipping
	subtract = var:trade_expenses_due_shipping
	subtract = var:WEALTH_empire_pool_owed_governorship
	add = WEALTH_cost_of_living_upper_strata
	add = WEALTH_cost_of_living_middle_strata
	add = WEALTH_cost_of_living_lower_strata
	add = WEALTH_cost_of_living_proletariat
}

WEALTH_empire_pool_owed_governorship_positive = {
	value = 0
	if = {
		limit = {
			var:WEALTH_empire_pool_owed_governorship > 0
		}
		value = var:WEALTH_empire_pool_owed_governorship
	}
}

WEALTH_empire_pool_owed_governorship_negative = {
	value = 0
	if = {
		limit = {
			var:WEALTH_empire_pool_owed_governorship < 0
		}
		value = var:WEALTH_empire_pool_owed_governorship
	}
}

# Cost of living expenses
# These values are subtracted from governorship pop wealth pools every quarter

# Tribesmen live on subsistence and do not lose wealth based on cost of living
# Expenses for slaves are paid through trade by the owner class
# Likewise for indentured pops

WEALTH_cost_of_living_modifier = {
	# Scope: Country
	value = var:WEALTH_cost_of_living
	multiply = -0.0002
}

WEALTH_cost_of_living_upper_strata = {
	value = owner.WEALTH_cost_of_living_modifier
	multiply = var:governorship_upper_strata 
}

WEALTH_cost_of_living_middle_strata = {
	value = owner.WEALTH_cost_of_living_modifier
	multiply = var:governorship_middle_strata
}

WEALTH_cost_of_living_lower_strata = {
	value = owner.WEALTH_cost_of_living_modifier
	multiply = var:governorship_lower_strata
}

WEALTH_cost_of_living_proletariat = {
	value = owner.WEALTH_cost_of_living_modifier
	multiply = var:governorship_proletariat
}

### Property ownership

WEALTH_governorship_property_ownership_weight_upper_strata = {
	value = var:governorship_upper_strata
	multiply = 10 # Arbitrary. TODO: Add a modifier based on laws, etc.
}
WEALTH_governorship_property_ownership_weight_middle_strata = {
	value = var:governorship_middle_strata
	multiply = 2 # Arbitrary. TODO: Add a modifier based on laws, etc.
}
WEALTH_governorship_property_ownership_weight_lower_strata = {
	value = var:governorship_upper_strata
	multiply = 1 # Arbitrary. TODO: Add a modifier based on laws, etc.
}

WEALTH_governorship_property_ownership_weights_total = {
	value = WEALTH_governorship_property_ownership_weight_upper_strata
	add = WEALTH_governorship_property_ownership_weight_middle_strata
	add = WEALTH_governorship_property_ownership_weight_lower_strata
}

WEALTH_governorship_property_ownership_share_upper_strata = {
	value = WEALTH_governorship_property_ownership_weight_upper_strata
	divide = WEALTH_governorship_property_ownership_weights_total
}
WEALTH_governorship_property_ownership_share_middle_strata = {
	value = WEALTH_governorship_property_ownership_weight_middle_strata
	divide = WEALTH_governorship_property_ownership_weights_total
}
WEALTH_governorship_property_ownership_share_lower_strata = {
	value = WEALTH_governorship_property_ownership_weight_lower_strata
	divide = WEALTH_governorship_property_ownership_weights_total
}

# Total incomes and expenses

WEALTH_income_total_upper_strata = {
	value = var:this_income_from_resource_extraction_upper_strata
	add = var:this_income_from_manufacturing_upper_strata
	add = var:this_income_from_shipping_upper_strata
	add = var:WEALTH_new_generated_services_upper_strata
	add = var:WEALTH_new_generated_production_upper_strata
	add = WEALTH_empire_pool_owed_governorship_positive
}

WEALTH_expenses_total_upper_strata = {
	value = var:this_expenses_from_resource_extraction_upper_strata
	add = var:this_expenses_from_manufacturing_upper_strata
	add = var:this_expenses_from_shipping_upper_strata
	add = WEALTH_empire_pool_owed_governorship_negative
	add = WEALTH_cost_of_living_upper_strata
	add = JOBS_wages_expense_upper_strata
	add = WEALTH_cost_of_living_upper_strata
	add = INCOME_governorship_excise_duty_essentials_upper_strata
	add = INCOME_governorship_property_tax_upper_strata
	add = INCOME_governorship_income_tax_upper_strata
	add = INCOME_governorship_tariffs_upper_strata
}

WEALTH_income_total_middle_strata = {
	value = var:this_income_from_resource_extraction_middle_strata
	add = var:this_income_from_manufacturing_middle_strata
	add = var:this_income_from_shipping_middle_strata
	add = var:WEALTH_new_generated_services_middle_strata
	add = var:WEALTH_new_generated_production_middle_strata
	add = JOBS_wages_due_middle_strata
}

WEALTH_expenses_total_middle_strata = {
	value = var:this_expenses_from_resource_extraction_middle_strata
	add = var:this_expenses_from_manufacturing_middle_strata
	add = var:this_expenses_from_shipping_middle_strata
	add = WEALTH_cost_of_living_middle_strata
	add = INCOME_governorship_excise_duty_essentials_middle_strata
	add = INCOME_governorship_property_tax_middle_strata
	add = INCOME_governorship_income_tax_middle_strata
	add = INCOME_governorship_tariffs_middle_strata
}

WEALTH_income_total_lower_strata = {
	value = var:this_income_from_resource_extraction_lower_strata
	add = var:this_income_from_manufacturing_lower_strata
	add = var:this_income_from_shipping_lower_strata
	add = var:WEALTH_new_generated_services_lower_strata
	add = var:WEALTH_new_generated_production_lower_strata
}

WEALTH_expenses_total_lower_strata = {
	value = var:this_expenses_from_resource_extraction_lower_strata
	add = var:this_expenses_from_manufacturing_lower_strata
	add = var:this_expenses_from_shipping_lower_strata
	add = WEALTH_cost_of_living_lower_strata
	add = INCOME_governorship_excise_duty_essentials_lower_strata
	add = INCOME_governorship_property_tax_lower_strata
	add = INCOME_governorship_income_tax_lower_strata
	add = INCOME_governorship_tariffs_lower_strata
}

WEALTH_income_total_proletariat = {
	value = var:this_income_from_resource_extraction_proletariat
	add = var:this_income_from_manufacturing_proletariat
	add = var:this_income_from_shipping_proletariat
	add = var:WEALTH_new_generated_services_proletariat
	add = var:WEALTH_new_generated_production_proletariat
	add = JOBS_wages_due_proletariat
}

WEALTH_expenses_total_proletariat = {
	value = var:this_expenses_from_resource_extraction_proletariat
	add = var:this_expenses_from_manufacturing_proletariat
	add = var:this_expenses_from_shipping_proletariat
	add = WEALTH_cost_of_living_proletariat
	add = INCOME_governorship_excise_duty_essentials_proletariat
	#add = INCOME_governorship_property_tax_proletariat
	add = INCOME_governorship_income_tax_proletariat
	add = INCOME_governorship_tariffs_proletariat
}

WEALTH_income_total_indentured = {
	value = var:this_income_from_resource_extraction_indentured
	add = var:this_income_from_manufacturing_indentured
	add = var:this_income_from_shipping_indentured
	add = var:WEALTH_new_generated_services_indentured
	add = var:WEALTH_new_generated_production_indentured
	#add = JOBS_wages_due_indentured
}

WEALTH_expenses_total_indentured = {
	value = var:this_expenses_from_resource_extraction_indentured
	add = var:this_expenses_from_manufacturing_indentured
	add = var:this_expenses_from_shipping_indentured
	#add = WEALTH_cost_of_living_indentured
	#add = INCOME_governorship_excise_duty_essentials_indentured
	#add = INCOME_governorship_property_tax_indentured
	#add = INCOME_governorship_income_tax_indentured
	#add = INCOME_governorship_tariffs_indentured
}

WEALTH_income_total_tribesmen = {
	value = var:this_income_from_resource_extraction_tribesmen
	add = var:this_income_from_manufacturing_tribesmen
	add = var:this_income_from_shipping_tribesmen
	add = var:WEALTH_new_generated_services_tribesmen
	add = var:WEALTH_new_generated_production_tribesmen
	add = JOBS_wages_due_tribesmen
}

WEALTH_expenses_total_tribesmen = {
	value = var:this_expenses_from_resource_extraction_tribesmen
	add = var:this_expenses_from_manufacturing_tribesmen
	add = var:this_expenses_from_shipping_tribesmen
	#add = WEALTH_cost_of_living_tribesmen
	#add = INCOME_governorship_excise_duty_essentials_tribesmen
	#add = INCOME_governorship_property_tax_tribesmen
	#add = INCOME_governorship_income_tax_tribesmen
	add = INCOME_governorship_tariffs_tribesmen
}

WEALTH_income_total_slaves = {
	value = var:this_income_from_resource_extraction_slaves
	add = var:this_income_from_manufacturing_slaves
	add = var:this_income_from_shipping_slaves
	add = var:WEALTH_new_generated_services_slaves
	add = var:WEALTH_new_generated_production_slaves
	#add = JOBS_wages_due_slaves
}

WEALTH_expenses_total_slaves = {
	value = var:this_expenses_from_resource_extraction_slaves
	add = var:this_expenses_from_manufacturing_slaves
	add = var:this_expenses_from_shipping_slaves
	#add = WEALTH_cost_of_living_slaves
	#add = INCOME_governorship_excise_duty_essentials_slaves
	#add = INCOME_governorship_property_tax_slaves
	#add = INCOME_governorship_income_tax_slaves
	#add = INCOME_governorship_tariffs_slaves
}