## Education scripts

EDU_startup_effect = {
	# Scope: Random country
	# Function: Set up the education values needed at game start for all countries
	every_country = {
		EDU_setup_education_numbers_all_governorships = yes
		EDU_set_t2_national_bonus_from_universities = yes
		EDU_set_starting_education_numbers_all_governorships = yes
		EDU_set_available_for_trade = { tier = t2 }
	}
	every_country = {
		EDU_set_education_available_from_trade = { tier = t2 }
		EDU_set_t2_research_bonus = yes
	}
}

EDU_update_effect = {
	# Scope: Country
	# Function: Update the education values during the yearly education tick
	EDU_update_education_numbers_all_governorships = yes
	EDU_set_t2_national_bonus_from_universities = yes
	EDU_set_available_for_trade = yes
	EDU_set_t2_research_bonus = yes
}

EDU_setup_education_numbers_all_countries = {
	every_country = {
		EDU_setup_education_numbers_all_governorships = yes
	}
}

EDU_setup_education_numbers_all_governorships = {
	# Scope: Country
	every_governorships = {
		EDU_setup_education_numbers_governorship = yes
	}
}

EDU_setup_education_numbers_governorship = {
	# Scope: Governorship
	# Function: Create variables to store the number of pops educated to the given $tier$
	set_variable = {
		name = EDU_t1_educated_governorship
		value = 0
	}
	set_variable = {
		name = EDU_t2_educated_governorship
		value = 0
	}
}

EDU_set_starting_education_numbers_all_governorships = {
	every_governorships = {
		EDU_set_education_cap_percent_filled_governorship = {
			tier = t1
			percentage = 0.9
		}
		EDU_set_education_cap_percent_filled_governorship = {
			tier = t2
			percentage = 0.9
		}
	}
}

EDU_set_education_cap_percent_filled_governorship = {
	# Scope: Governorship
	# Function: Set the education numbers for $tier$ to 90% of the cap at the start of the game
	set_variable = {
		name = EDU_$tier$_educated_governorship
		value = {
			value = EDU_available_slots_$tier$_governorship
			multiply = $percentage$
		}
	}
}

EDU_update_education_numbers_governorship = {
	# Scope: Governorship
	# Function: Update the number of pops educated to the given $tier$
	# The number of educated pops approaches the maximum at a rate inversely proportionate to how close the current number is to reaching the maximum, to a minimum of 5% of the maximum or 1 pop, whichever is higher.
	# Called: Once a year
	change_variable = {
		name = EDU_$tier$_educated_governorship
		add = EDU_change_rate_$tier$
	}
}

EDU_update_education_numbers_all_governorships = {
	every_governorships = {
		EDU_update_education_numbers_governorship = {
			tier = t1
		}
		EDU_update_education_numbers_governorship = {
			tier = t2
		}
	}
}

EDU_update_education_numbers_all_countries = {
	every_country = {
		EDU_update_education_numbers_all_governorships = yes
	}
}

# Education bonuses from national and global sources

EDU_set_t2_national_bonus_from_universities = {
	# Scope: Country
	# Function: Add a bonus to available tier 2 education slots based on the number of universities across the nation
	# Called: Yearly, when education values are updated
	set_variable = {
		name = EDU_national_t2_bonus_from_universities
		value = {
			value = 0
			every_governorships = {
				limit = {
					any_governorship_state = {
						any_state_province = {
							has_building = EDU_university
						}
					}
				}
				every_governorship_state = {
					every_state_province = {
						add = num_of_EDU_university
					}
				}
			}
			multiply = EDU_university_national_bonus
		}
	}
}

## Education bonus from trade

EDU_set_available_for_trade = {
	# Scope: Country
	# Function: Set how much this country will offer to its trade partners in terms of $tier$-educated pops
	set_variable = {
		name = EDU_available_for_trade_$tier$
		value = {
			value = 0
			every_governorships = {
				add = var:EDU_$tier$_educated_governorship
			}	
			multiply = 0.06 # TODO: This could be modified by emigration laws etc.
		}
	}
}

EDU_set_education_available_from_trade = {
	# Scope: Country
	# Function: Add a bonus to education numbers of both t1 and t2 in all governorships from trade agreements, simulating foreign professionals lending their services
	# This adds a base value to the number of educated pops available to work, not to the cap.
	# TODO: This also needs to add a way of distributing the wealth that these pops generate back to the trade partners. 
	save_scope_as = root_country
	set_variable = {
		name = EDU_available_from_trade_$tier$
		value = {
			value = 0
			every_in_list = {
				variable = list_of_trade_partners_all_categories

				add = var:EDU_available_for_trade_$tier$
			}
			# Add federation partners
			# TODO: Make this dependent on federal migration law
			if = {
				limit = {
					has_variable = member_of_federation
				}
				var:member_of_federation = {
					every_in_list = {
						variable = list_of_members
						limit = {
							NOT = {
								already_trade_partners = {
									category = all_categories
									country_A = THIS
									country_B = scope:root_country
								}
							}
						}
						add = var:EDU_available_for_trade_$tier$
					}
				}
			}
		}
	}
}

### Research point effects

EDU_set_t2_research_bonus = {
	# Scope: Country
	every_owned_province = {
		limit = {
			has_province_modifier = EDU_t2_education_research_bonus
		}
		remove_province_modifier = EDU_t2_education_research_bonus
	}
	every_owned_province = {
		limit = {
			OR = {
				has_building = EDU_university
				is_capital = yes
			}
		}
		FUNC_add_province_modifier_stack = { # Add a bonus from all universities
			MOD = EDU_t2_education_research_bonus
			NUM = EDU_province_research_bonus_from_universities
			DUR = -1
		}
	}
	capital_scope = { # Add a bonus from percentage t2 educated population
		FUNC_add_province_modifier_stack = {
			MOD = EDU_t2_education_research_bonus
			NUM = owner.EDU_country_total_educated_t2
			DUR = -1
		}
	}
}

EDU_update_national_education_piechart = {
	# Scope: Country
	# TODO: Turn this into a generic FUNC_ scripted effect

	set_variable = {
		name = t2_educated_pops_country
		value = {
			value = 0
			every_governorships = {
				add = EDU_t2_educated_governorship
			}
		}
	}

	set_variable = {
		name = t1_educated_pops_country
		value = {
			value = 0
			every_governorships = {
				add = var:EDU_t1_educated_governorship
			}
		}
	}

	set_variable = {
		name = uneducated_pops_country
		value = {
			value = 0
			every_governorships = {
				add = EDU_uneducated_governorship
			}
		}
	}

	set_variable = {
		name = t2_educated_pops_country_percentage
		value = {
			value = var:t2_educated_pops_country
			divide = {
				value = var:t2_educated_pops_country
				add = var:t1_educated_pops_country
				add = var:uneducated_pops_country
			}
		}
	}
	set_variable = {
		name = t1_educated_pops_country_percentage
		value = {
			value = var:t1_educated_pops_country
			divide = {
				value = var:t2_educated_pops_country
				add = var:t1_educated_pops_country
				add = var:uneducated_pops_country
			}
		}
	}
	set_variable = {
		name = uneducated_pops_country_percentage
		value = {
			value = var:uneducated_pops_country
			divide = {
				value = var:t2_educated_pops_country
				add = var:t1_educated_pops_country
				add = var:uneducated_pops_country
			}
		}
	}

	# TODO: Make this generic
	if = {
		limit = {
			NOT = { has_variable = education_piechart_setup }
		}
		clear_variable_list = education_piechart_list
		save_scope_as = country_scope
		FUNC_add_to_piechart_list_province = {
			piechart_name = education
			slice_size_value = scope:country_scope.var:t2_educated_pops_country_percentage
			derived_colour_culture_group = culture_group:irish_group
			slice_tooltip = flag:t2_educated_country_tt
		}
		FUNC_add_to_piechart_list_province = {
			piechart_name = education
			slice_size_value = scope:country_scope.var:t1_educated_pops_country_percentage
			derived_colour_culture_group = culture_group:italian
			slice_tooltip = flag:t1_educated_country_tt
		}
		FUNC_add_to_piechart_list_province = {
			piechart_name = education
			slice_size_value = scope:country_scope.var:uneducated_pops_country_percentage
			derived_colour_culture_group = culture_group:british_group
			slice_tooltip = flag:uneducated_country_tt
		}
	}

	else = {
		FUNC_update_piechart_list_province = {
			piechart_name = education
			slice_size_value = var:t2_educated_pops_country_percentage
			derived_colour_culture_group = culture_group:irish_group
			slice_tooltip = flag:t2_educated_country_tt
		}
		FUNC_update_piechart_list_province = {
			piechart_name = education
			slice_size_value = var:t1_educated_pops_country_percentage
			derived_colour_culture_group = culture_group:italian
			slice_tooltip = flag:t1_educated_country_tt
		}
		FUNC_update_piechart_list_province = {
			piechart_name = education
			slice_size_value = var:uneducated_pops_country_percentage
			derived_colour_culture_group = culture_group:british_group
			slice_tooltip = flag:uneducated_country_tt
		}
	}
	
}

FUNC_update_piechart_list_province = {
	random_in_list = {
		variable = $piechart_name$_piechart
		limit = {
			NOT = {
				has_variable = piechart_details_updated
			}
		}
		set_variable = {
			name = $piechart_name$_piechart_slice_size
			value = $slice_size_value$
		}
		set_variable = {
			name = derived_colour
			value = $derived_colour_culture_group$
		}
		set_variable = {
			name = slice_tooltip
			value = $slice_tooltip$
		}

		set_variable = {
			name = piechart_details_updated
			days = 1
		}
	}
}

FUNC_add_to_piechart_list_province = {
	random_province = {
		limit = {
			NOT = {
				has_variable = is_in_$piechart_name$_piechart
			}
		}
		save_scope_as = piechart_item
		set_variable = is_in_$piechart_name$_piechart

		set_variable = {
			name = $piechart_name$_piechart_slice_size
			value = $slice_size_value$
		}
		set_variable = {
			name = derived_colour
			value = $derived_colour_culture_group$
		}
		set_variable = {
			name = slice_tooltip
			value = $slice_tooltip$
		}
	}
	add_to_variable_list = {
		name = $piechart_name$_piechart_list
		target = scope:piechart_item
	}
}