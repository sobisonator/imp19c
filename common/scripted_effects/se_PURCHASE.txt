
#*************************************************
#*            The Purchase Order Plan            *
#*************************************************


#1. Wealth from pops in the governorship should all be pooled up to determine the "Purchasing Power" of the governorship for that quarter.
#	- This would be "WEALTH_governorship_total"

#2. Then sort demand by how important the trade good is.

#3. The purchase order will then be made to nearby trade zones that have an available stockpile for the goods that are in demand.

#4. Once the order is sent the movement cost between the trade zones can be factored in along with the price of the good. This will give the final price of the order.

#5. After the order is made the goods will be "moved" into the stockpile of the governorship that ordered them.

PURHCASE_make_shopping_list = {
	# Create a list of items that will need to be bought to satisfy demand this quarter
	# Scope = governorship

	# Iterate manually through all the stockpiles
	# Grain stockpile
	PURCHASE_check_shopping = {
		demand = DEMAND_grain
		stockpile = grain_stockpile
	}
	# Mediterranean fruit stockpile
	PURCHASE_check_shopping = {
		demand = DEMAND_mediterranean_fruit
		stockpile = mediterranean_fruit_stockpile
	}
	# Glass stockpile
	PURCHASE_check_shopping = {
		demand = DEMAND_glass
		stockpile = glass_stockpile
	}
}

PURCHASE_check_shopping = {
	if = {
		limit = {
			$demand$ > var:$stockpile$
		}
		purchase_order = {
			for_stockpile = var:$stockpile$
		}
	}
}

PURHCASE_order = {
	# Every governorship does this for every deficit every quarter
	# $for_stockpile$ = the stockpile sent from the shopping list scripted effect when the PO is created
}


PURCHASE_reset_quarterly_var = {
	#Reset puchase variable every quarter for every country for every governorship
	if = {
		limit = {
			NOT = { has_variable = purchase_power }
		}
		set_variable = {
			name = purchase_power
			value = 0
		}
	}
	else = {
		remove_variable = purchase_power
		set_variable = {
			name = purchase_power
			value = 0
		}
	}
	change_variable = {
		name = purchase_power
		add = WEALTH_governorship_total
	}
}

PURCHASE_find_cheapest_stockpile = { # Find the best value stockpile based on transport costs
	#idk how to do this...
}

# Sale actions

SELL_declare_all_available = {
	# Scope: Governorship
	# This effect gets the governorship to declare to the tradezone (TZ) what resources it has available to sell
	# Once all governorships have done this, the TZ will have a stockpile of available goods to sell in order to meet POs
	# Then the governorships will all get a cut of revenue from these sales
	if = { # Grain
		limit = {
			var:grain_stockpile > 0
		}
		SELL_declare_available = {
			goods_stockpile = grain_stockpile
			amount_for_sale = grain_for_sale # svalue
			goods_sold = grain_sold
		}
	}
	if = {
		limit = {
			var:fruit_stockpile > 0
		}
		SELL_declare_available = {
			goods_stockpile = mediterranean_fruit_stockpile
			amount_for_sale = mediterranean_fruit_for_sale # svalue
			goods_sold = mediterranean_fruit_sold
		}
	}
	if = {
		limit = {
			var:glass_stockpile > 0
		}
		SELL_declare_available = {
			goods_stockpile = glass_stockpile
			amount_for_sale = glass_for_sale # svalue
			goods_sold = glass_sold
		}
	}
}

SELL_declare_available = {
	# Scope: Governorship
	set_variable = { # Within the governorship scope, track how much was sold so you can then calculate how much of a cut to get
	# See SELL_calculate_cut to see how the cut of revenue gets calculated
		name = $goods_sold$
		value = $amount_for_sale$
	}
	random_trade_center = { # Scope to the tradezone
		# Add to the tradezone's stockpile
		change_variable = { # TODO: set stockpile variables in the TZ scope at game start when TZs are created
			name = $goods_stockpile$ # The trade center variable will have the same name as the governorship one, for ease of transfer
			value = $amount_for_sale$ # This amount is derived from the governorship's stockpile multiplied by an svalue
		}
	}
}
	# A governorship declares how much is available for its tradezone.
	# The proportion that governorship's available stock makes up of the tradezone total is the...
	#... share of gross profit that goes back to the governorship when that stockpile is bought from

SELL_calculate_revenue_cut_percentage = { # Calculates how much money the governorship should get for contributing goods to the tradezone's for-sale stockpile
	# This calculates the percentage BEFORE sales are made, and AFTER all the SELL_declare_available actions have been completed
	# Should only be called if the governorship has actually sold any of the given tradegood. How to limit this to that scenario?
	# Scope: governorship
	random_trade_center = { # Scope to the tradezone
		save_scope_as = tradezone
	}
	set_variable = { # Get the total of the goods in the tradezone
		name = $stockpile_cut_percentage$ # This argument gets a name like "grain_stockpile_cut_percentage"
		value = $amount_of_goods_sold$ # It starts off just containing the value of the whole stockpile
	}
	change_variable = { # Now divide the amount contributed by the total in the TZ stockpile, getting a percentage.
		# e.g. if the governorship contributed 150 units and the TZ stockpile has 1000 units, you get 0.15 (15%)
		name = $stockpile_cut_percentage$
		divide = scope:tradezone.var:$tradezone_stockpile$ # Gets the stockpile from the tradezone e.g. "grain_stockpile"
	}
	# Now the stockpile cut percentage variable for this month can be used to divvy out the total
	# Another scripted effect, SELL_get_cut_of_revenue, will multiply the TZ total revenue by the local stockpile cut percentage var for every good sent to market
	# So if total TZ revenue were £5,000, we'd multiply that by 0.15 and get this governorship's cut, £750.
}

SELL_get_cut_of_revenue = {
	# WIP
	# Scope: governorship
	random_trade_center = { # Scope to the tradezone
		save_scope_as = tradezone
	}
	set_variable = { # Get the total revenue from the tradezone
		name = $local_cut_of_revenue$ # This needs to be passed a name in the format "grain_actual_revenue_cut"
		value = scope:tradezone.var:$tradezone_revenue_var$ # This needs a variable name like "TZ_revenue_total_grain"
	}
	change_variable = {
		name = $local_cut_of_revenue$
		multiply = $stockpile_cut_percentage$ # This argument gets a name like "grain_stockpile_cut_percentage"
	}
}

SELL_deduct_sold_goods = {
	# TBC
	# Effect to actually decrease a governorship's stockpile when goods are sold from the TZ scope!
	# This will probably need two scenarios in case a governorship is selling to itself (i.e. customers for a good within the same governorship)
}