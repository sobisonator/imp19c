# is_target_in_variable_list can be used to look up a list by a value it contains
#is_target_in_variable_list = {
#	name = targeted_by
#	target = root
#}

# Scope:	Country, then scopes to a province most likely the capital province of the federation leader

federation_create = {
	# First of all, scope to a province which will hold the federation data and serve as a "federation capital":
	$federation_province$ = {
		# Scope is now the federation capital province scope
		save_scope_as = federation_scope

        add_to_global_variable_list = { # So that it can be iterated through
            name = list_of_federations
            target = THIS
        }

		# Question - how to store a plaintext name? Variables can only store numbers, bools, flags and scopes
		# Answer - Variables can store objects
		# Could we convert an ASCII string to a decimal value? Pretty ridiculous.
		# Could we have a few pre-set ones that correspond to numbers, that combo with something about the founders?
		# Like if variable = 1, localisation = "Alliance of... " and then it grabs the culture name like "...[CULTURE] nations"
		set_variable = is_federation_scope # Tags this province as the holding scope for a federation's values. If another federation is created by another tag with a capital here in the future, it will use another random available province that doesn't have this flag
		set_variable = {
			name = federation_name
			value = flag:$federation_name$ # Contains a loc value
		}
		set_variable = {
			name = host_tag
			value = $host_tag$ # Grabbed from owner scope, as the federation is created in the owner's capital
		}
		every_in_list = {
			list = $list_of_members$
			add_to_list = list_of_members # Transfer the list of members locally
		}
		every_in_list = {
			list = $customs_union_regions$
			add_to_list = customs_union_regions
		}
		every_in_list = {
			list = $list_of_members$
			set_variable = {
				name = member_of_federation
				value = scope:federation_scope
			}
		}
		every_in_list = {
            list = $list_of_members$
            save_scope_as = member
            scope:federation_scope = {
                add_to_variable_list = {
                    name = list_of_members
                    target = scope:member
                }
            }
        }
         # Define the laws

        ### SPECIAL LAWS - laws that require special votes to change, if available.
        # MEMBERSHIP
        set_variable = {
        	name = membership_culture_law
        	value = $membership_culture_law$
        	# 0 = Any cultures may be members
        	# 1 = Only same culture group as host
        	# 2 = Only same culture as host
        }
        set_variable = {
        	name = membership_religion_law
        	value = $membership_religion_law$
        	# 0 = Any religions may be members
        	# 1 = Only same religion group as host
        	# 2 = Only same religion as host
        }
        set_variable = {
        	name = membership_application_law
        	value = $membership_application_law$
        	# 0 = Approved by host
        	# 1 = Approved by majority weighted vote of members
        	# 2 = Approved by unanimous vote of members
        	# 3 = Approved by special electors (if active)
        }

        # LEADERSHIP
        set_variable = {
        	name = leader_power_law
        	value = $leader_power_law$
        	# 0 = Symbolic. Host has no official power
        	# 1 = Legislative. Host has extra legislative votes equal to 1/3 the number of members in the federation
        	# 3 = Veto. The host can veto any proposed law changes
        	# 4 = Absolute. Host can pass laws unilaterally
        }

        set_variable = {
        	name = leader_selection_law
        	value = $leader_selection_law$
        	# 0 = Permanent.
        	# 1 = Elected every 5 years. Elected by the states of the federation
        	# 2 = Elected upon the leader's ruler changing. Elected by the states of the federation
        }

        # LEGISLATIVE PROCEDURE
        set_variable = {
        	name = small_state_votes_law
        	value = $small_state_votes_law$
        	# 0 = Independent. Small countries get 1 vote just like any other member
        	# 1 = Combined. All countries of 2 or fewer provinces in a region are combined into 1 vote
        }

        set_variable = {
        	name = federal_diet_law
        	value = $federal_diet_law$
        	# 0 = Commission. Only the host can propose laws.
        	# 1 = Plenary assembly. Any member state may propose a law change once every 4 years.
        }

        # DIPLOMACY
        set_variable = {
        	name = federal_defensive_pact_law
        	value = $federal_defensive_pact_law$
        	# 0 = No defensive pact.
        	# 1 = Defensive pact.
        }

        # ECONOMY
        set_variable = {
        	name = customs_union_law
        	value = $customs_union_law$
        	# 0 = No customs union.
        	# 1 = Designated governorships (get from list). Actually applies to regions, but only calculated for member states
        	# 2 = All member state territory.
        }
        if = {
        	limit = { var:customs_union_law = 1 }
        	every_in_list = {
        		list = customs_union_regions
        		every_region_province = {
        			limit = {
	        			AND = {
	        				trigger_if = {
	        					limit = { 
                                    owner = {
                                        has_variable = member_of_federation 
                                    }
                                }
		        				owner = {
			        				var:member_of_federation = scope:federation_scope
		        				}
	        				}
	        				trigger_else = {
	        					always = no
	        				}
	        				governorship = {
	        					NOT = { has_variable = federation_customs_union }
	        				}
	        			}
        			}
        			governorship = {
        				set_variable = {
							name = federation_customs_union
							value = scope:federation_scope
						}
        			}
        		}
        	}
        }
	}
}

# Why not just the this trigger?
# variable_list_size
get_variable_list_size  = {
    set_variable = {
        name = variable_list_size_int
        value = 0
    }
    every_in_list = {
        variable = $list$
        PREV = {
            change_variable = {
                name = variable_list_size_int
                add = 1
            }
        }
    }
}