namespace = debug_trade

debug_trade.1 = { # Trade setup
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		MOVEMENT_get_TZ_distances = yes
		every_country = {
			every_governorships = {
				TRADE_setup_internal_trade_cuts = yes
			}
		}
	}

	option = {
		name = "TEST"
	}
}

debug_trade.2 = { # Quarterly internal trade simulation
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		debug_log = "Starting debug_trade.2"
		TRADE_update_all_global_base_prices = yes
		#debug_log= "Finished TRADE_update_all_global_base_prices, starting TRADE_update_all_TZ_local_prices"
		TRADE_update_all_TZ_local_prices = yes
		#debug_log = "Finished TRADE_update_all_TZ_local_prices, starting TRADE_reset_internal_pools"
		TRADE_reset_internal_pools = yes
		#debug_log = "Finished TRADE_reset_internal_pools, starting TRADE_reset_quarterly_trade_scope_values"
		TRADE_reset_quarterly_trade_scope_values = yes
		#debug_log = "Finished TRADE_reset_quarterly_trade_scope_values, starting TRADE_reset_all_internal_trade_stockpiles"
		TRADE_reset_all_internal_trade_stockpiles = yes
		#debug_log = "Finished TRADE_reset_all_internal_trade_stockpiles, starting TRADE_reset_all_internal_trade_revenue_totals"
		TRADE_reset_all_internal_trade_revenue_totals = yes
		#debug_log = "Finished TRADE_reset_all_internal_trade_revenue_totals, starting governorship iterations"
		TRADE_reset_internal_amounts_sold = yes
		every_country = {
			every_governorships = {
				#debug_log = "Governorship trade stage 1"
				TRADE_reset_quarterly_governorship_values = yes
				#debug_log = "Governorship trade stage 2"
				TRADE_set_internal_trade_scope = yes
				#debug_log = "Governorship trade stage 3"
				SELL_declare_all_internal_available = yes
				#debug_log = "Governorship trade stage 4"
				PURCHASE_make_internal_shopping_list = yes
				#debug_log = "Governorship trade stage 5"
				SELL_calculate_all_internal_revenue_cut_percentages = yes
				#debug_log = "Governorship trade stage 6"
				SELL_get_all_internal_cuts_of_revenue = yes
				#debug_log = "Governorship trade stage 7"
				TRADE_set_spender_shares = yes
				#debug_log = "Governorship trade stage 8"
				TRADE_set_income_shares = yes
				#debug_log = "Governorship trade stage 9"
				PURCHASE_split_all_costs = yes
				#debug_log = "Governorship trade stage 10"
				SELL_split_all_income = yes
				#debug_log = "Governorship trade complete"
			}
		}
		debug_log = "Finished debug_trade.2"
	}

	option = {
		name = "TEST"
	}
}

debug_trade.3 = { # Test creating a list of tradegoods
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		TRADE_test_tradegoods_list = yes
	}
	
}

debug_trade.4 = { # Test creating a list of tradegoods
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		TRADE_setup_list_of_tradegoods = yes
	}
	
}

debug_trade.5 = { # Test creating a list of tradegoods where each province has a varaible tradegood
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		TRADE_setup_list_of_tradegoods_2 = yes
	}
	
}

debug_trade.6 = { # Quarterly internal trade simulation using tradegoods list format 2
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		TRADE_update_all_global_base_prices = yes
		TRADE_update_all_TZ_local_prices = yes
		TRADE_reset_internal_pools = yes
		TRADE_reset_quarterly_trade_scope_values = yes
		TRADE_reset_all_internal_trade_stockpiles = yes
		TRADE_reset_all_internal_trade_revenue_totals = yes
		every_country = {
			every_governorships = {
				TRADE_reset_quarterly_governorship_values = yes
				TRADE_set_internal_trade_scope = yes
				SELL_declare_all_internal_available = yes
				PURCHASE_make_internal_shopping_list = yes
				SELL_calculate_all_internal_revenue_cut_percentages = yes
				SELL_get_all_internal_cuts_of_revenue = yes
			}
		}
	}

	option = {
		name = "TEST"
	}
}
