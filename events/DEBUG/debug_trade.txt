namespace = debug_trade

debug_trade.1 = { # Trade setup
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		#MOVEMENT_get_TZ_distances = yes # Commented out for now - needs fixing, svalues are improperly named.
		TRADE_reset_all_tradegoods_TZ_internal_rankings = yes
		TRADE_prepare_quarterly_values = yes
		TRADE_save_connection_time_values = yes
		every_country = {
			every_governorships = {
				TRADE_reset_purchase_order_tender_completions = yes
				TRADE_set_internal_trade_scope = yes # Repeats an effect run by oa_economy_setup, needs to be run quarterly after that
				TRADE_update_governorship_TZs = yes
				TRADE_setup_internal_trade_cuts = yes
				TRADE_reset_quarterly_governorship_values = yes # Not actually obsolete - this deals with governorship scope, while TRADE_reset_quarterly_values deals with global level
			}
			TRADE_setup_tax_rates = yes
		}
	}

	option = {
		name = "TEST"
	}
}

debug_trade.2 = { # Quarterly internal trade simulation
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		debug_log = "Starting debug_trade.2"
		TRADE_update_all_global_base_prices = yes # Moved to external trade. NOTE: At game start, there will need to be a special effect that just calculates the starting base price by calculating the external available amounts withouts selling them, before the first ever quarterly internal trade effect
		#debug_log= "Finished TRADE_update_all_global_base_prices, starting TRADE_update_all_TZ_local_prices"
		TRADE_update_all_TZ_local_prices = yes
		#debug_log = "Finished TRADE_update_all_TZ_local_prices, starting TRADE_reset_internal_pools"
		TRADE_reset_internal_pools = yes
		#debug_log = "Finished TRADE_reset_internal_pools, starting TRADE_reset_quarterly_trade_scope_values"
		# TRADE_reset_quarterly_trade_scope_values = yes
		#debug_log = "Finished TRADE_reset_quarterly_trade_scope_values, starting TRADE_reset_all_internal_trade_stockpiles"
		# TRADE_reset_all_internal_trade_stockpiles = yes # OBSOLETE - merged into TRADE_reset_internal_pools
		#debug_log = "Finished TRADE_reset_all_internal_trade_stockpiles, starting TRADE_reset_all_internal_trade_revenue_totals"
		# TRADE_reset_all_internal_trade_revenue_totals = yes # OBSOLETE - merged into TRADE_reset_internal_pools
		#debug_log = "Finished TRADE_reset_all_internal_trade_revenue_totals, starting governorship iterations"
		# TRADE_reset_internal_amounts_sold = yes
		every_internal_trade_viable_country = {
			every_governorships = { # Sell offers
				limit = {
					NOT = { has_variable = federation_customs_union }
				}
				#debug_log = "Governorship trade stage 1"
				# TRADE_reset_quarterly_governorship_values = yes # Moved into debug_trade.1
				#debug_log = "Governorship trade stage 2"
				# TRADE_set_internal_trade_scope = yes # Moved into debug_trade.1 so that it can be used in the pre-trade effects
				#debug_log = "Governorship trade stage 3"
				SELL_declare_all_internal_available = yes
				# Save the total amount available as a var
			}
			every_governorships = { # Purchase orders
				limit = {
					NOT = { has_variable = federation_customs_union }
				}
				#debug_log = "Governorship trade stage 4"
				PURCHASE_make_internal_shopping_list = yes

			}
			every_governorships = { # Invoices
				limit = {
					NOT = { has_variable = federation_customs_union }
				}
				#debug_log = "Governorship trade stage 5"
				SELL_calculate_all_internal_revenue_cut_percentages = yes
				#debug_log = "Governorship trade stage 6"
				SELL_get_all_internal_cuts_of_revenue = yes
				#debug_log = "Governorship trade stage 7"
				TRADE_set_spender_shares = yes
				#debug_log = "Governorship trade stage 8"
				TRADE_set_income_shares = yes
				#debug_log = "Governorship trade stage 9"
				PURCHASE_split_all_costs = yes
				#debug_log = "Governorship trade stage 10"
				SELL_split_all_income = yes
				#debug_log = "Governorship trade complete"
			}
		}
		every_federation_country = {
			every_governorships = { # Sell offers
				limit = {
					has_variable = federation_customs_union
				}
				#debug_log = "Governorship trade stage 1"
				# TRADE_reset_quarterly_governorship_values = yes # Moved into debug_trade.1
				#debug_log = "Governorship trade stage 2"
				# TRADE_set_internal_trade_scope = yes # Moved into debug_trade.1 so that it can be used in the pre-trade effects
				#debug_log = "Governorship trade stage 3"
				SELL_declare_all_internal_available = yes
				# Save the total amount available as a var
			}
		}
		every_federation_country = {
			every_governorships = { # Purchase orders
				limit = {
					has_variable = federation_customs_union
				}
				#debug_log = "Governorship trade stage 4"
				PURCHASE_make_internal_shopping_list = yes
			}
			every_governorships = { # Invoices
				limit = {
					has_variable = federation_customs_union
				}
				#debug_log = "Governorship trade stage 5"
				SELL_calculate_all_internal_revenue_cut_percentages = yes
				#debug_log = "Governorship trade stage 6"
				SELL_get_all_internal_cuts_of_revenue = yes
				#debug_log = "Governorship trade stage 7"
				TRADE_set_spender_shares = yes
				#debug_log = "Governorship trade stage 8"
				TRADE_set_income_shares = yes
				#debug_log = "Governorship trade stage 9"
				PURCHASE_split_all_costs = yes
				#debug_log = "Governorship trade stage 10"
				SELL_split_all_income = yes
				#debug_log = "Governorship trade complete"
			}
		}
		debug_log = "Finished debug_trade.2"
	}

	option = {
		name = "TEST"
	}
}

#debug_trade.3 = { # Declare external available & update trade prices
#	type = country_event
#	title = "TEST"
#	desc = "TEST"
#	picture = aqueducts

	# Outline:
	# . Reset quarterly governorship values - consider merging with internal trade
	# . Reset quaterly tradezone values
	# . Every governorship declares external available
	# . Update trade prices per TZ, based on the amount available there ot of the global total # The price set at the beginning of this quarter's external trade phase is the starting price for next quarter's internal trade phase
	# Then the external trade effects follow that.
		# External shopping list (including purchase orders)
		# External revenue and spend cuts

#	immediate = {
#		TRADE_reset_TZ_pools = yes
#		TRADE_update_all_global_base_prices = yes # Debug only - should be reworked to follow declaration of supply and demand
#		every_country = {
#			every_governorships = {
#				SELL_declare_all_external_available = yes
#			}
#		}
#		TRADE_set_preferred_routes = yes # Get the order of preferred vendor trade centers for every tradegood in every trade center, now that stock has been declared
		# We don't update price until the end of the trade phase, to add some volatility and to be able to account for both imports and local supply when calculating the supply curve
		# Finish all sell declarations and start to shop
#		every_country = {
			# This needs to be ORDERED in some way
			# The first countries to go will get access to the cheapest deals. Some kind of trade power value by which to order them?
#			every_governorships = {
#				PURCHASE_make_external_shopping_list = yes
#			}
#		}
#		debug_log = "Finished debug_trade.3"
#	}
#
#	option = {
#		name = "TEST"
#	}
	
#}

debug_trade.3 = {
	type = country_event
	title = "TEST"
	desc = "TEST"
	picture = aqueducts

	immediate = {
		every_in_list = {
			variable = governorships_in_atlantic_seaboard_tradezone
			add_treasury = 100
		}
	}

	option = {
		name = "TEST"
	}
}