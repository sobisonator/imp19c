namespace = AI_notification_event

AI_notification_event.1 = {
    # Test event
    type = minor_country_event
    title = ai_notification_event.1.t
    desc = ai_notification_event.1.desc
    # picture = throneroom # TODO: Fix picture - not working ATM for some reason
    left_portrait = scope:diplomatic_play.var:play_instigator.current_ruler
    right_portrait = scope:diplomatic_play.var:play_target_country.current_ruler

    goto_location = scope:diplomatic_play.var:play_instigator.capital_scope

    interface_lock = no

    option = {
        name = ignore # Should be timeout default
    }
    option = {
        name = support
    }
    option = {
        name = condemn
    }
}

AI_notification_event.2 = {
    # Observer stops rival power's expedition
    type = minor_country_event
    title = ai_notification_event.2.t
    desc = ai_notification_event.2.desc
    left_portrait = scope:diplomatic_play.var:play_instigator.current_ruler
    right_portrait = scope:catcher.current_ruler

    goto_location = scope:diplomatic_play.var:play_instigator.capital_scope

    interface_lock = no

    option = {
        name = "notification_ignore" # Should be timeout default
    }
    option = {
        name = "notification_support"
    }
    option = {
        name = "notification_condemn"
    }
}

AI_notification_event.3 = {
    # Diplomatic play results in annexation of a territory
    type = minor_country_event
    title = ai_notification_event.3.t
    desc = ai_notification_event.3.desc
    left_portrait = scope:diplomatic_play.var:play_instigator.current_ruler
    right_portrait = scope:diplomatic_play.var:play_target_country.current_ruler

    goto_location = scope:diplomatic_play.var:play_target_area

    interface_lock = no

    option = {
        name = "notification_ignore" # Should be timeout default
    }
    option = {
        name = "notification_support"
    }
    option = {
        name = "notification_condemn"
    }
}