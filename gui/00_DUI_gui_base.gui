@SideBarButtonSize = 36
@SideBarButtonSizeEnlarged = 44


template button_tiled_texture
{
	texture = "gfx/interface/base_parts/button_color_400fs.dds"
	#color = { 1 1 1 1 }
}
template Black_FontColor
{
	fontcolor = { 0.81 0.81 0.81 1 }
}
template White_FontColor
{
	fontcolor = { 0.81 0.81 0.81 1 }
}
template Real_BlackColor
{
	fontcolor = { 0.0 0.0 0.0 1 }
}
template Button_FontColor
{
	fontcolor = { 0.81 0.81 0.81 1 }
}

template Sub_Header_FontColor
{
	fontcolor = { 0.81 0.81 0.81 1 }
}
template Teal_FontColor
{
	fontcolor = { 0.81 0.81 0.81 1 }
}
template BaseFontM
{
	using = FontSizeM
	font = BaseFont
	fontcolor = { 0.81 0.81 0.81 1 }
}

template BaseFontL
{
	using = FontSizeL
	font = BaseFont
	fontcolor = { 0.81 0.81 0.81 1 }
}

template MarbleButtonFont
{
	fontsize = 18
	font = BaseFont
	fontcolor = { 0.81 0.81 0.81 1 }
}

types Base_GUI_Types
{
	type cpt_button = margin_widget {
		block "Size" { size = { 100 150 } }

		allow_outside = yes

		vbox = {
			position = {  0 }
			widgetanchor = hcenter
			#parentanchor = right

			block "stats"
			{
				visible = no
			}

			icon = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = fixed
				texture = "gfx/bgs/color_stats_right.dds"
				size = { 45 0 }

				background = {
					name = "HighlightShadow"
					texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = corneredtiled
					spriteborder = { 8 8 }
					margin = { 4 4 }
					alpha = 0.5
					size = { 100% 100% }
					color = { 1 1 0 1 }
				}

				vbox = {
					position = { -13 -3 }
					#parentanchor = hcenter
					visible = "[Character.IsValid]"

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 17
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetMartial]"
						tooltip = "[Character.GetMartialToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 17
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetFinesse]"
						tooltip = "[Character.GetFinesseToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 17
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetCharisma]"
						tooltip = "[Character.GetCharismaToolTip]"
					}

					textbox = {
						#parentanchor = hcenter
						using = BaseFontS
						block "fontsize" {
							fontsize = 17
						}
						using = Black_FontColor
						autoresize = yes
						text = "[Character.GetZeal]"
						tooltip = "[Character.GetZealToolTip]"
					}
				}
			}
		}

		widget = {
			size = { 100% 100% }
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin_left = 4
				margin_bottom = 4
				alpha = 0.5
				size = { 100% 100% }

				block "Drop_shadow"
				{
					# If this is not a button/unclickable, set this visible to no.
					visible = yes
				}
			}
		}

		background = {
			name = "HighlightShadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin = { 5 5 }
			alpha = 0.5
			size = { 100% 100% }
			color = { 1 1 0 1 }
			block "HighlightShadow"
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = no
			}
		}

		icon = {
			name= "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
			size = { 100% 100% }
		}

		icon = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			size = { 100% 100% }
			framesize = { 200 200 }
		}

		block "Context" {} #this is inherited, you don't need to use the blockoverride

		margin_widget = {
			size = { 100% 100% }
			block "Margin" { margin = { 3 3 } }
			visible = "[Character.IsValid]"

			portrait_button = {
				using = pt_button
				parentanchor = top
				position = { 0 0 }
				using = tooltip_es_portrait
				pop_out = no
				block "Background" {
					 background_texture = "[GetCharacterBackgroundIcon( Character.Self, Character.GetLocation.GetTerrain )]"
				}
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }

			}

			margin_widget = {
			    size = { 100% 100% }
			    scissor = yes
			    margin_top = -2

			    textbox = {
			        text = "[Character.Custom('character_bg')]"
					size = { 100% 100% }
			    }
				icon = {
					size = { 100% 100% }
					texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]"
				}
			}

			portrait_button = {
			    using = pt_button
			    parentanchor = top
			    using = tooltip_es_portrait
			    pop_out = no
			    block "Background" {
			        background_texture = "gfx/interface/transparent.dds"
			    }
			    block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
			    block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }
			}
		}
		margin_widget = {
			size = { 100% 100% }
			visible = "[Not( Character.IsValid )]" 
			#margin = { 3 3 }
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled

				#modify_texture = {
				#	name = "Alpha"
				#	texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				#	blend_mode = alphamultiply
				#	spriteType = Corneredtiled
				#	spriteborder = { 60 60 }
				#}
			}
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = flat_background_white
					spriteType = Corneredtiled
					alpha = 0.7

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
				}
				icon = {
					name = "beige_not_clickable_portrait"
					size = { 80% 50% }
					using = beige_background
					parentanchor = center
					maximumsize = { 50 50 }
					
					modify_texture = {
							texture = "gfx/interface/base_parts/idea_mark.dds"
							blend_mode = alphamultiply
					} 
				}
			}		
		}
		icon = { #family color
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 45% 32% }
			position = { -2 2 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( And( Character.IsValid, Not( Character.GetFamily.IsMinor )), Not( Character.IsHeadOfFamily ) )]"
			alpha = 0.8
			parentanchor = top|right
			datacontext = "[Character]"
			tooltip = "MEMBER_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_stripe_top_corner.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradient.dds"
					blend_mode = alphamultiply
				}
			}
		}

		icon = { #head of family
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 95% 32% }
			position = { 0 3 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( Character.IsValid, Character.IsHeadOfFamily )]"
			alpha = 0.83
			parentanchor = top|hcenter
			datacontext = "[Character]"
			tooltip = "HEAD_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_family_stripe.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradientfamilythicker.dds"
					blend_mode = alphamultiply
				}
			}
		}

		widget = {
			name = "party_icon_widget"
			size = { 39% 26% }
			parentanchor = bottom|left
			position = { 0 -5 }
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon_background"
				size = { 100% 100% }
				position = { 3 -3 }
				tooltip = "CHARACTER_FACTION"
				texture = "gfx/interface/base_parts/left_stripe_bottom_corner.dds"
				alpha = 0.8
				visible = "[Character.ShowParty]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "player_overlay_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|hcenter
			icon = {
				size = { 100% 100% }
				name = "player_overlay"
				alwaystransparent = yes
				texture = gfx/portraits/portrait_player_glow.dds
				visible = "[Character.IsOtherPlayerRuler]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "ruler_icon_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|right
			icon = {
				name = "ruler_icon"
				size = { 100% 100% }
				using = icon_leader
				datacontext = "[Character]"
				tooltip = OUR_RULER_AS_PLAYER
				visible = "[Character.IsLocalPlayerRuler]"
			}
			block "ShowIcons" {}
		}

		widget = { # loyalty
			size = { 100% 4 }
			parentanchor = bottom
			visible = "[And(And(Character.IsValid, And( Character.IsAlive, GreaterThan_int32(Character.GetAge, '(int32)15'))), Not(Character.IsRuler))]"
			tooltip = "[Character.GetLoyaltyToolTip]"

			icon = {
				using = flat_background_black
				size = { 100% 3 }
				position = { 0 -5 }
				alpha = 0.5
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[LessThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33')]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				}
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 1 0.6 0.5 1 } }
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[And(LessThan_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)66'), GreaterThan_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)33') )]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				}
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 0.95 0.8 0.6 1 } }
			}

			fixed_size_progressbar = {
				block "loyalty" {
					visible = "[GreaterThanOrEqualTo_CFixedPoint(Character.GetLoyalty, '(CFixedPoint)66')]"
				}
				blockoverride "size" { size = { 100% 4 } }
				blockoverride "Value" {
					value = "[FixedPointToFloat(Character.GetLoyalty)]"
				 }
				parentanchor = bottom
				position = { 0 -3 }
				blockoverride "ProgressAlpha" {
					minimumsize = { 0 0 }
					alpha = 0.9
				}
				blockoverride "dots" { visible = no }
				blockoverride "margin" { margin = { 3 0 } }
				blockoverride "progresstexture" { progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"}
				blockoverride "progresscolor" { color = { 0.85 0.93 0.5 1 } }
			}
		}

		widget = {
			size = { 39% 26% }
			parentanchor = bottom|left
			position = { 0 -5 }
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon"
				size = { 100% 100% }
				position = { 2 0 }
				tooltip = "CHARACTER_FACTION"
				texture = "[GetPartyIcon(Character.GetParty)]"
				visible = "[Character.ShowParty]"

				glow = {
					glow_radius = 2
					color = { 1 1 1 0.7 }
				}
			}
			block "ShowIcons" {}
		}
	}
	type decorative_map_icontexture = widget {
		size = { 34 34 }
		icon = {
			visible = "[And(Not( Or( DecorativeMapIcon.GetProvince.IsHolySite, DecorativeMapIcon.GetProvince.HasGreatWork ) ), Not(GetVariableSystem.Exists('dark_map_icons')))]"
			size = { 34 34 }
			texture = "gfx/interface/icons/icon_alpha/star_filled_white.dds"
			block "ZoomDetails" {}
		}
		icon = {
			visible = "[And(Not( Or( DecorativeMapIcon.GetProvince.IsHolySite, DecorativeMapIcon.GetProvince.HasGreatWork ) ), GetVariableSystem.Exists('dark_map_icons')))]"
			size = { 34 34 }
			texture = "gfx/interface/dark_map_icons/star_filled_white.dds"
			block "ZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[And(And( DecorativeMapIcon.GetProvince.IsHolySite, Not( DecorativeMapIcon.GetProvince.HasGreatWork ) ), Not(GetVariableSystem.Exists('dark_map_icons')))]"
			size = { 34 34 }
			texture = "gfx/interface/icons/icon_alpha/religion_white.dds"
			block "ReligionIcon" {}
			block "ZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[And(And( DecorativeMapIcon.GetProvince.IsHolySite, Not( DecorativeMapIcon.GetProvince.HasGreatWork ) ), GetVariableSystem.Exists('dark_map_icons'))]"
			size = { 34 34 }
			texture = "gfx/interface/dark_map_icons/religion_white.dds"
			block "ReligionIcon" {}
			block "ZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[And(DecorativeMapIcon.GetProvince.HasGreatWork, Not(GetVariableSystem.Exists('dark_map_icons')))]"
			size = { 28 28 }
			texture = "gfx/interface/map/greatwork.dds"
			block "GwZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[And(DecorativeMapIcon.GetProvince.HasGreatWork, GetVariableSystem.Exists('dark_map_icons')))]"
			size = { 28 28 }
			texture = "gfx/interface/dark_map_icons/greatwork.dds"
			block "GwZoomDetails" {}
		}
	}
	type white_button_round = widget { 
		size = { 48 48 }
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			button = {
				texture = "gfx/interface/base_parts/white_background.dds"
				gfxtype = framedbuttongfx
				alpha = 0.85
				size = { 100% 100% }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4
				parentanchor = center
				name = "Base"
				
				block "On_click" {}
				block "ClickSound" {} #Todo
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/round_button_frame_24_alpha.dds"				
					blend_mode = alphamultiply
				}
				margin_widget = {
					size = { 100% 100% }
					margin = { 2 2 }
					icon = {
						texture = "gfx/interface/base_parts/white_background.dds"
						size = { 100% 100% }
						modify_texture = {
							name = "Alpha"
							blend_mode = alphamultiply
							
							block "Icon" 
							{
								texture = "gfx/interface/icons/_default.dds"
							}					
						}
					}
				}
			}
		}
	}
	type button_round = widget { 
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_69.dds"
			size = { 100% 100% }
			position = { 0 0 }
			parentanchor = center
			alpha = 0.65
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
				framesize = { 200 200 }
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				size = { 100% 100% }
				parentanchor = center
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
				}
				
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					texture = "gfx/interface/base_parts/white_background.dds"
					spriteType = Corneredtiled
					alpha = 0.95
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					size = { 100% 100% }
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					parentanchor = center

					block "ClickSound" {}
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
						#spriteType = corneredtiled
						#spriteborder = { 6 6 }
					}
					
					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }
						button = {
							block "IconButtonSize" { size = { 100% 100% } }
							position = { 0 0 }
							using = button_tiled_texture 
							spriteType = Corneredtiled
							spriteborder = { 200 200 }
							gfxtype = framedbuttongfx
							widgetanchor = center
							parentanchor = center
							framesize = { 200 200 }
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 4				
							block "On_click" { }
							modify_texture = {
								name = "Alpha"
								texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
								blend_mode = alphamultiply
								
								block "Icon" 
								{
									texture = "gfx/interface/icons/_default.dds"
								}					
							}
							icon = {
								alwaystransparent = yes
								size = { 100% 100% }
								block "StandardIcon" { visible = no }
							}
						}
					}
				}
			}
		}
	}
	type button_round_inverted = widget { 
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_69.dds"
			size = { 100% 100% }
			position = { 0 0 }
			parentanchor = center
			alpha = 0.1
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				texture = "gfx/interface/base_parts/background_texture_x60bd.dds"
				framesize = { 200 200 }
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				size = { 100% 100% }
				parentanchor = center
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
				}
				
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					texture = "gfx/interface/base_parts/white_background.dds"
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					size = { 100% 100% }
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					parentanchor = center

					block "ClickSound" {}
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
						#spriteType = corneredtiled
						#spriteborder = { 6 6 }
					}
					
					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }
						button = {
							block "IconButtonSize" { size = { 100% 100% } }
							position = { 0 0 }
							using = button_tiled_texture 
							spriteType = Corneredtiled
							spriteborder = { 200 200 }
							gfxtype = framedbuttongfx
							widgetanchor = center
							parentanchor = center
							framesize = { 200 200 }
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 4				
							block "On_click" { }
							modify_texture = {
								name = "Alpha"
								texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
								blend_mode = alphamultiply
								
								block "Icon" 
								{
									texture = "gfx/interface/icons/_default.dds"
								}					
							}
							icon = {
								alwaystransparent = yes
								size = { 100% 100% }
								block "StandardIcon" { visible = no }
							}
						}
					}
				}
			}
		}
	}
	type text_button_sort = widget { #TODO temp
		
		maximumsize = { 999 24 }
		minimumsize = { 0 24 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			name = "Button_Outline_Inner"
			texture = "gfx/interface/base_parts/button_allframes.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }
			#using = button_tiled_texture

			framesize = { 100 100 }
			upframe = 1
			uphoverframe = 4
			uppressedframe = 5
			downframe = 7
			downhoverframe = 7
			downpressedframe = 7
			
			block "DownState" {  }
			
		}
		
		button = {
			name = "Button_Outline"
			texture = "gfx/interface/base_parts/button_color_400fs.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }
			using = button_tiled_texture

			framesize = { 100 100 }
			upframe = 3
			uphoverframe = 4
			downhoverframe = 4
			downpressedframe = 5
			downframe = 3
			disableframe = 6
			
			block "DownState" {  }
			block "On_click" { } 
			
			# ToDo: Add Sound.//Primary button or increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			using = ButtonBorderTear
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			hbox = {
				name = "Center_text_and_icon"
				widgetanchor = center
				parentanchor = center
				position = { 0 -2 }
				
				visible = yes

				widget = {
					name = "Spacing_Widget_1"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}

				icon = {
					framesize = { 50 50 }
					size = { 34 34 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
						visible = yes
					}
				}

				widget = {
					name = "Spacing_Widget_2"
					size = { 2 5 }
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
				}
				
				textbox = {
					name = "Text"
					using = BaseFontS
					using = Black_FontColor
					autoresize = yes
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
					
					block "Button_text"
					{
						text = "Button Text"
					}
				}
				
				widget = {
					name = "Spacing_Widget_3"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}
			}
		}
	}
	# Alert
	type alert = widget {
		size = { 42 92 }
		
		icon = {
			position = { 0 0 }
			size = { 42 100 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			frame = 3
			alpha = 0.2
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}			
			
		}
		button = {
			size = { 42 92 }
			texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
			spriteType = Corneredtiled
			framesize = { 100 100 }
			block "Color" 
			{
				# Frame 7 = Red
				# Frame 5 = Yellow
				# Frame 8 = Green
				frame = 7
			}
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
			
			modify_texture = {
				name = "Trash"
				texture = "gfx/interface/base_parts/demanded_filth.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				alpha = 0.4
			}
			
			block "On_click"
			{ 
			
			}
			
		}
		
		icon = {
			name = "Pattern"
			size = { 42 90 }
			texture = "gfx/interface/base_parts/alert_pattern.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 0 }
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
		}	

		vbox = {
			name = "Gradient_Shadow"
			alpha = 0.19
			
			icon = {
				texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
				spriteType = corneredtiled
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}
			
			icon = {
				texture = "gfx/interface/base_parts/gradient_black_short.dds"
				size = { 42 30 }	# Y Size termines the length of the Gradient.
				spriteType = corneredstretched
				spriteborder = { 0 6 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
			
			widget = {
				size = { 42 60 }	# Y Size termines the length of the bottom area.
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
		}		
		
		icon = {
			position = { 0 -5 }
			parentanchor = vcenter|hcenter
	
			block "Icon" 
			{
				# Override with the relevant Icon for the alert.
				texture = "gfx/interface/icons/temp_icon.dds"

			}
		}
	}
	# Diplomatic Alert
    
	type alert_diplomatic = widget {
		size = { 42 92 }

		button = {
			size = { 42 92 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			gfxtype = framedbuttongfx
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "Alert_click" {}
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
			
			icon = { 
				size = { 42 88 }
				texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
				spriteType = Corneredtiled
				framesize = { 100 100 }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
					blend_mode = alphamultiply
				}
				
				modify_texture = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/diplo_alert_cutoff_alpha.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		icon = {
			name = "Pattern"
			size = { 38 88 } 
			parentanchor = top|hcenter
			widgetanchor = top|hcenter
			texture = "gfx/interface/base_parts/diplo_alert_pattern.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 0 }
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
		}   
		vbox = {
			name = "Gradient_Shadow"
			alpha = 0.2
			
			icon = {
				texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
				spriteType = corneredtiled
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}
			
			icon = {
				texture = "gfx/interface/base_parts/gradient_black.dds"
				size = { 42 40 }    # Y Size termines the length of the Gradient.
				spriteType = corneredstretched
				spriteborder = { 0 6 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
			
			widget = {
				size = { 42 50 }    # Y Size termines the length of the bottom area.
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
		}       
		
		country_flag_reworked = {
			position = { 0 5 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			
			block "Show_as_button"
			{
				visible = no
			}
			
			block "Show_as_icon"
			{
				visible = yes
			}
			
			blockoverride "Flag"
			{
				block "Flag_data"
				{
					
				}

				framesize = { 56 56 }
			}
			
			blockoverride "Size"
			{
				size = { 36 36 }
			}
		}       
		
		icon = {
			position = { -5 38 }
			size = { 40 40 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			
			block "Icon" 
			{
				# Override with the relevant Icon for the alert.
				texture = "gfx/interface/icons/temp_icon.dds"
			}
		}
	}
	type list_entry = margin_widget {
		alpha = 1
		alwaystransparent = yes

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spritetype = corneredtiled
			block "ListAlpha" { alpha = 0.6 }
			size = { 100% 100% }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			margin = { 3 3 }
			modify_texture = {
				spriteType = Corneredtiled
				spriteborder = { 40 26 }
				block "texture" {#1
					texture = "gfx/interface/base_parts/entry_background_x80y52bd_alpha.dds"
				}
				blend_mode = alphamultiply
			}
			using = border_medium_torn_alpha

			#modify_texture = {
			#	texture = "gfx/interface/base_parts/pattern_a_l.dds"
			#	spriteborder { 0 0 }
			#	spriteType = Corneredtiled
			#	blend_mode = alphamultiply
			#	alpha = 0.33
			#}

			modify_texture = {
				name = "Alpha"
				block "ListAlphaTexture" { texture = "gfx/interface/tooltip/tooltip_section_alpha_gradient_stretch.dds" }
				blend_mode = alphamultiply
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				alpha = 0.8
			}
		}

	}
	type list_button = button {
		# Todo Add Sound. //accordion list button
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
		name = "teal_list_but"
		texture = "gfx/interface/base_parts/button_color_400fs.dds"
		framesize = { 100 100 }
		spritetype = corneredtiled
		spriteborder = { 2 0 }
		block "ListAlpha" { }#check
		size = { 100% 100% }

		gfxtype = togglepushbuttongfx

		upframe = 3
		uphoverframe = 4
		uppressedframe = 5
		downframe = 9
		downhoverframe = 10
		downpressedframe = 9
		disableframe = 8

		modify_texture = {
			spriteType = Corneredtiled
			spriteborder = { 40 26 }
			texture = "gfx/interface/base_parts/entry_background_x80y52bd_alpha.dds"
			blend_mode = alphamultiply
		}

		#using = border_medium_torn_alpha

		modify_texture = {
			name = "Alpha"
			block "ListAlphaTexture" { texture = "gfx/interface/tooltip/tooltip_section_alpha_gradient_stretch.dds" }
			blend_mode = alphamultiply
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			alpha = 0.25
		}

		state = {
			name = "highlightit"

			animation = {
				frame = 8
			}

			block "HighlightTrigger" { }

		}

	}
	type text_button_square_highlighted = widget {
		block "MinimumSize" { minimumsize = { 0 30 } }
		using = DropShadow
		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			#alpha = 0.9
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"			
			block "On_click" { }
			background = {
				texture = "gfx/interface/base_parts/white_background.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = Corneredtiled
				blend_mode = alphamultiply
				alpha = 0.01
			}
			modify_texture = {
				texture = "gfx/interface/base_parts/special_button_frame_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 30 0 }
			}	
			modify_texture = {
				name = "portrait_alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 32 32 }
				alpha = 0.75
			}
			textbox = {
				name = "Text"
				position = { 0 -2}
				widgetanchor = center
				parentanchor = center				
				using = BaseFontS
				alpha = 1
				#fontcolor = { 0.86 0.31 0.11 1 }
				autoresize = yes
				align = center
				elide = right
				fontsize_min = 12
				block "Center_text"
				{
					text = "Button Text"
				}
				
			}
		}
	}
	type TopBarWindowButton = container {
		ignoreinvisible = yes
		parentanchor = center
		button = {
			block "ButtonColor"{ texture = "gfx/interface/base_parts/white_button_color_200fs.dds" }
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = framedbuttongfx
			size = { @SideBarButtonSize @SideBarButtonSize }
			parentanchor = center
			
			block "Details"
			{

			}
			
			framesize = { 100 100 }
			upframe = 1
			overframe = 5
			downframe = 3
			disableframe = 4
			using = EnlargeButton
			modify_texture = {
				name = "Alpha"
				block "Icon"
				{
					texture = "gfx/interface/icons/menu_buttons/menu_mission.dds"
				}
				blend_mode = alphamultiply			
			}
		}
		
		button = {
			texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = framedbuttongfx
			size = { @SideBarButtonSizeEnlarged @SideBarButtonSizeEnlarged }
			parentanchor = center
			
			block "Details"
			{
			
			}
			block "Details_toggled"
			{
					
			}
			
			framesize = { 100 100 }
			upframe = 5
			overframe = 5
			downframe = 3
			disableframe = 4
			modify_texture = {
				name = "Alpha"
				block "Icon"
				{
					texture = "gfx/interface/icons/menu_buttons/menu_mission.dds"
				}
				blend_mode = alphamultiply			
			}
		}
		
	}
}