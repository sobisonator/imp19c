types MoreBGsTypes {
	type custom_background = icon {
		spriteType = Corneredtiled
		size = { 100% 100% }
		block "Bg" { texture = "gfx/interface/transparent.dds" }
		modify_texture = {
			name = "Alpha"
			block "AlphaTexture" { texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds" }
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 4 4 }
		}
	}
	type cpt_button = margin_widget {
		block "Size" { size = { 100 150 } }

		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			size = { 100% 100% }

			block "Drop_shadow"
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}

		background = {
			name = "HighlightShadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin = { 5 5 }
			alpha = 0.5
			size = { 100% 100% }
			color = { 1 1 0 1 }
			block "HighlightShadow"
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = no
			}
		}

		icon = {
			name= "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
			size = { 100% 100% }
		}

		icon = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			size = { 100% 100% }
			framesize = { 200 200 }
		}

		block "Context" {} #this is inherited, you don't need to use the blockoverride

		margin_widget = {
			size = { 100% 100% }
			block "Margin" { margin = { 3 3 } }
			visible = "[Character.IsValid]"

			portrait_button = {
				using = pt_button
				parentanchor = top
				position = { 0 0 }
				using = tooltip_es_portrait
				pop_out = no
				block "Background" {
					 background_texture = "[GetCharacterBackgroundIcon( Character.Self, Character.GetLocation.GetTerrain )]"
				}
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }

			}

			margin_widget = {
			    size = { 100% 100% }
			    scissor = yes
			    margin_top = -2

			    textbox = {
			        text = "[Character.Custom('character_bg')]"
					size = { 100% 100% }
			    }
				icon = {
					size = { 100% 100% }
					texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]"
				}
			}

			portrait_button = {
			    using = pt_button
			    parentanchor = top
			    using = tooltip_es_portrait
			    pop_out = no
			    block "Background" {
			        background_texture = "gfx/interface/transparent.dds"
			    }
			    block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
			    block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }
			}
		}

		margin_widget = {
			size = { 100% 100% }
			visible = "[Not( Character.IsValid )]"
			#margin = { 3 3 }
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled
			}
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = flat_background_white
					spriteType = Corneredtiled
					alpha = 0.7

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
				}
				icon = {
					name = "beige_not_clickable_portrait"
					size = { 80% 50% }
					using = beige_background
					parentanchor = center
					maximumsize = { 50 50 }

					modify_texture = {
							texture = "gfx/interface/base_parts/idea_mark.dds"
							blend_mode = alphamultiply
					}
				}
			}
		}

		icon = { #family color
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 45% 32% }
			position = { -2 2 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( And( Character.IsValid, Not( Character.GetFamily.IsMinor )), Not( Character.IsHeadOfFamily ) )]"
			alpha = 0.8
			parentanchor = top|right
			datacontext = "[Character]"
			tooltip = "MEMBER_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_stripe_top_corner.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradient.dds"
					blend_mode = alphamultiply
				}
			}
		}

		icon = { #head of family
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 95% 32% }
			position = { 0 3 }
			color = "[Character.GetFamily.GetBackgroundColor]"
			visible = "[And( Character.IsValid, Character.IsHeadOfFamily )]"
			alpha = 0.83
			parentanchor = top|hcenter
			datacontext = "[Character]"
			tooltip = "HEAD_OF_FAMILY_PORTRAIT_TOOLTIP"
			alwaystransparent = yes

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_family_stripe.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradientfamilythicker.dds"
					blend_mode = alphamultiply
				}
			}
		}

		widget = {
			name = "party_icon_widget"
			size = { 39% 26% }
			parentanchor = bottom|left
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon_background"
				size = { 100% 100% }
				position = { 3 -3 }
				tooltip = "CHARACTER_FACTION"
				texture = "gfx/interface/base_parts/left_stripe_bottom_corner.dds"
				alpha = 0.75
				visible = "[Character.ShowParty]"
			}
			icon = {
				name = "party_icon"
				size = { 100% 100% }
				position = { 1 -1 }
				tooltip = "CHARACTER_FACTION"
				texture = "[GetPartyIcon(Character.GetParty)]"
				visible = "[Character.ShowParty]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "player_overlay_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|hcenter
			icon = {
				size = { 100% 100% }
				name = "player_overlay"
				alwaystransparent = yes
				texture = gfx/portraits/portrait_player_glow.dds
				visible = "[Character.IsOtherPlayerRuler]"
			}
			block "ShowIcons" {}
		}

		widget = {
			name = "ruler_icon_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|right
			icon = {
				name = "ruler_icon"
				size = { 100% 100% }
				using = icon_leader
				datacontext = "[Character]"
				tooltip = OUR_RULER_AS_PLAYER
				visible = "[Character.IsLocalPlayerRuler]"
			}
			block "ShowIcons" {}
		}
	}

	type cpt_button_large = margin_widget {
		block "Size" { size = { 604 256 } }

		block "Context" {} #this is inherited, you don't need to use the blockoverride

		icon = {
			name = "background"
			texture = "[GetCharacterBackgroundIconHuge( Character.Self, Character.GetLocation.GetTerrain )]"
			spriteType = Corneredtiled
			#parentanchor = bottom
			size = { 100% 100% }
			modify_texture = {
				name = "Alpha"
				block "AlphaTexture" { texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds" }
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
			}

			icon = {
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				size = { 100% 100% }
			}
		}

		## huge background for Rome
		custom_background = {
			visible = "[And( EqualTo_int32(Character.GetLocation.GetId, '(int32)1'), Character.IsAlive)]"
			blockoverride "Bg" { texture = "gfx/interface/portrait/background_city_republic_rome_huge.dds" }
		}
		## HUGE SPECIFIC INDOORS BACKGROUNDS
		## huge specific indoor background for rome tag Ruler
		custom_background = {
			visible = "[And( And( Character.IsRuler, EqualTo_string(Character.GetEmployer.GetTag, 'ROM')), And( Not(Character.HasArmy), Not(Character.HasNavy)))]"
			blockoverride "Bg" { texture = "gfx/interface/portrait/background_ruler_republic_rome_huge.dds" }
		}
		## huge specific indoor background for rome tag Co-Ruler
		custom_background = {
			visible = "[And( And( Character.IsCoRuler, EqualTo_string(Character.GetEmployer.GetTag, 'ROM')), And( Not(Character.HasArmy), Not(Character.HasNavy)))]"
			blockoverride "Bg" { texture = "gfx/interface/portrait/background_ruler_republic_rome_huge.dds" }
		}
		## huge specific indoor background for Islamic nations - PLACEHOLDER, just using West Turkic culture group until scripted GUI is implemented
		custom_background = {
			visible = "[And( And( Or( Character.IsRuler, Character.IsCoRuler), EqualTo_string(Character.GetEmployer.GetPrimaryCulture.GetCultureGroup.GetKey, 'west_turkic')), And( Not(Character.HasArmy), Not(Character.HasNavy)))]"
			blockoverride "Bg" { texture = "gfx/interface/portrait/background_ruler_islamic_monarchy_huge.dds" }
		}
		scissor = yes

		margin_widget = {
			block "BottomPortraitSize" { size = { 200 300 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, GreaterThan_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" { position = { -10 24 } }
			portrait_button = {
				using = pt_button_large
				pop_out = yes
			}
		}

		margin_widget = {
			block "BottomPortraitSize" { size = { 150 225 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, LessThanOrEqualTo_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" {  }
			position = { 36 18 }
			portrait_button = {
				using = pt_button_baby
			}
		}



		margin_widget = {
			block "BottomPortraitSize" { size = { 100% 100% } }
			margin = { 3 3 }
			visible = "[Not( Character.IsValid )]"

			icon = {
				texture = "gfx/interface/portrait/background_imprisoned_normal_tint.dds"
				size = { 100% 100% }
				icon = {
					texture = "gfx/interface/base_parts/idea_mark.dds"
					parentanchor = center
				}
			}

		}

		widget = {
			parentanchor = bottom|hcenter
			size = { 100% 24 }
			block "ShowIcons" {}
			hbox = {
				position = { -1 -2 }
				alwaystransparent = no
				ignoreinvisible = no
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "CHARACTER_FACTION"
						texture = "[GetPartyIcon(Character.GetParty)]"
					}
					visible = "[Character.ShowParty]"
				}
				widget = {
					size = { 24 26 }

					icon = {
						name = "player_overlay"
						size = { 26 26 }
						alwaystransparent = yes
						texture = gfx/portraits/portrait_player_glow.dds
						position = { 3 0 }
						parentanchor = vcenter
						visible = "[Character.IsOtherPlayerRuler]"
					}

				}
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						using = icon_leader
						datacontext = "[Character]"
						tooltip = OUR_RULER_AS_PLAYER
						visible = "[Character.IsLocalPlayerRuler]"
						parentanchor = vcenter
					}
				}
			}
		}
	}
}
