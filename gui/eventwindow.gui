@portraittopspacer = 304
template event_portrait 
{
	flowcontainer = {
		direction = vertical
		
		spacing = 5
		
		cpt_button = {
		
			size = { 125 175 }
		
			country_flag = {
				position = { 1 2 }
				tooltip = "[Character.GetEmployer.GetName]"
				parentanchor = top|right
				visible = "[Not( EqualTo_int32( Character.GetEmployer.GetId, Player.GetId ) )]"  
				
				datacontext = "[Character.GetEmployer]"

				blockoverride "flag"
				{
					texture = "[Character.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
					frame = "[Character.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
					framesize = { 120 120 }
				}
				
				blockoverride "size"
				{
					size = { 32 32 }
				}
				
				blockoverride "click"
				{
					onclick = "[OpenDiplomacy(Character.GetEmployer)]"
				}
			}
		}
		
		container = {
			tag = {
				name = "header"
				#size = { 120 32 }
				#tooltip = "[Character.GetFamilyMemberText]"
				text = "[Character.Custom('get_short_surname_or_peerage_loc')]"
				max_width = 125
				minimumsize = { 125 0 }
			}
		}
	}
}


base_window = {
	name = "event_window"
	parentanchor = center
	position = { 20 40 }
	minimumsize = { 600 540 } #Width with top image should always be 756, otherwse this
	blockoverride "Drop_shadow" { visible = yes }
	blockoverride "DropShadowAlpha" { alpha = 0.3 }
	blockoverride "WindowAlpha" { alpha = 1 }
	
	state = {
		name = _show 
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_snapshot_windows"
		}
	}

	icon = { #шапка с зданиями
		visible = "[Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') )]"
		size = { 920 137 }
		texture = "gfx/interface/ornamental/event_top_white.dds"
		widgetanchor = bottom
		position = { 28 10 }
	}
	
	icon = { #шапка с мужиками
		visible = "[Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') )]"
		size = { 920 137 }
		texture = "gfx/interface/ornamental/event_top_red.dds"
		widgetanchor = bottom
		position = { 28 10 }
	}

	vbox = {
		using = MainWindowHeaderBoxCentered
		
		blockoverride "Title_text" { text = "[EventWindow.GetTitle]" }
		
		vbox = {
			layoutpolicy_vertical = expanding
		}
		
	}
	
	icon = { #хрень внизу
		#size = { 373 68 }
		position = { -1 -2 }
		texture = "gfx/interface/ornamental/event_bot_white.dds"
		widgetanchor = top|hcenter
		parentanchor = bottom|hcenter
		scale = 0.75
		alpha = 0.4
		color = { 0 0 0 1 }
	}
	
	icon = { #хрень внизу
		#size = { 373 68 }
		position = { 10 -6 }
		texture = "gfx/interface/ornamental/event_bot_white.dds"
		widgetanchor = top|hcenter
		parentanchor = bottom|hcenter
		scale = 0.75
	}
	
	icon = { #хрень внизу
		position = { 16 -54 }
		texture = "gfx/interface/ornamental/event_bot_red.dds"
		widgetanchor = hcenter
		parentanchor = bottom|hcenter
		scale = 0.75
	}
	
	container = {
		resizeparent = yes
		
		flowcontainer = {
			name = "portraits_left"
			visible = "[EventWindow.HasLeftPortraitCharacter('0')]"
			ignoreinvisible = yes
			direction = vertical
			spacing = 4
			position = { 19 @portraittopspacer }
			container = {
				using = event_portrait
				name = "portrait_left"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetLeftPortraitCharacter('0')]"
				visible = "[EventWindow.HasLeftPortraitCharacter('0')]"
			}
			container = {
				using = event_portrait
				name = "portrait_left_small_1"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetLeftPortraitCharacter('1')]"
				visible = "[EventWindow.HasLeftPortraitCharacter('1')]"
			}
			container = {
				using = event_portrait
				name = "portrait_left_small_2"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetLeftPortraitCharacter('2')]"
				visible = "[EventWindow.HasLeftPortraitCharacter('2')]"
			}
			widget = { size = { 1 24 } visible = "[EventWindow.HasLeftPortraitCharacter('2')]" }
		}
		
		flowcontainer = {
			name = "portraits_right"
			
			visible = "[EventWindow.HasRightPortraitCharacter('0')]"
			ignoreinvisible = yes
			direction = vertical
			spacing = 4
			parentanchor = right
			position = { -19 @portraittopspacer }
			container = {
				using = event_portrait
				name = "portrait_right"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetRightPortraitCharacter('0')]"
				visible = "[EventWindow.HasRightPortraitCharacter('0')]"
				blockoverride "portrait_transformation"
				{
					portrait_scale = { -1 1 }
					portrait_offset = { 1 0 }
				}
			}
			
			container = {
				using = event_portrait
				name = "portrait_right_small_1"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetRightPortraitCharacter('1')]"
				visible = "[EventWindow.HasRightPortraitCharacter('1')]"
				blockoverride "portrait_transformation"
				{
					portrait_scale = { -1 1 }
					portrait_offset = { 1 0 }
				}
			}
			
			container = {
				using = event_portrait
				name = "portrait_right_small_2"
				parentanchor = hcenter
				datacontext = "[EventWindow.GetRightPortraitCharacter('2')]"
				visible = "[EventWindow.HasRightPortraitCharacter('2')]"
				blockoverride "portrait_transformation"
				{
					portrait_scale = { -1 1 }
					portrait_offset = { 1 0 }
				}
			}
			widget = { size = { 1 24 } visible = "[EventWindow.HasLeftPortraitCharacter('2')]" }
		}
		
		flowcontainer = {
			name = "Bottom"
			direction = horizontal
			position = { 0 0 }
			ignoreinvisible = yes
			
			margin_widget = {
				size = { 44 280 }
				icon = {
					texture = "gfx/interface/base_parts/background_red.dds"
					position = { 12 42 }
					size = { 40 260 }
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_pattern_x0bd_vertical.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
					}
					
					modify_texture = {
						name = "Alpha2"
						texture = "gfx/interface/base_parts/side_s_x104bd_left_cut_alpha.dds"
						blend_mode = alphamultiply
						spritetype = corneredTiled
						spriteborder = { 60 40 }
					}
					
				}
			}
			
			flowcontainer = {
				direction = vertical
				ignoreinvisible = yes
				flowcontainer = {
					name = "Center_Box_Smaller"
					direction = vertical
					margin = { 4 0 }
					ignoreinvisible = yes
					visible = "[Not( Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') ) )]"
					
					widget = { size = { 0 62 } }
					
					widget = {
						visible = "[Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') )]"
						name = "spacing_w"
						size = { 800 0 }
					}

					margin_widget = {
						size = { 650 249 }
						parentanchor = hcenter
						icon = {
							name = "event_picture"
							size = { 650 239 }
							texture = "[EventWindow.GetEventPicture]"
							tooltip = "[EventWindow.GetDebugInfo]"
							alpha = 0.8
						}
					}
					
					scrollarea = {
						parentanchor = hcenter
						name = "description_scrollarea"
						maximumsize = { -1 500 }
						scrollbarpolicy_horizontal = always_off
						#фон маленький
						#using = NoninteractableBG
						blockoverride "Margins" { 
							margin = { 4 7 } 
							margin_bottom = 10
						}
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						
						scrollwidget = {
							textbox = {
								name = "description"
								resizeparent = yes
								minimumsize = { 560 0 }
								maximumsize = { 580 -1 }
								multiline = yes
								using = BaseFontM
								using = Black_FontColor
								autoresize = yes
								margin = { 12 0 }
								align = top|left
								text = "[EventWindow.GetDescription]"
							}
						}
					}
					
					widget = {
						name = "spacer_2"
						size = { 0 10 }
					}
				}
				
				flowcontainer = {
					name = "Center_Box_big"
					direction = vertical
					margin = { 4 0 }
					ignoreinvisible = yes
					minimumsize = { 0 0 }
					visible = "[Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') )]"
					
					widget = { size = { 0 56 } }
					
					widget = {
						visible = "[Or( EventWindow.HasRightPortraitCharacter('0'), EventWindow.HasLeftPortraitCharacter('0') )]"
						name = "spacing_w_big"
						size = { 880 0 }
					}

					margin_widget = {
						size = { 620 242 }
						parentanchor = hcenter
						icon = {
							name = "event_picture_big"
							size = { 620 239 }
							texture = "[EventWindow.GetEventPicture]"
							tooltip = "[EventWindow.GetDebugInfo]"
							alpha = 0.8
						}
					}
					widget = { size = { 0 10 } }
					scrollarea = {
						parentanchor = hcenter
						name = "description_scrollarea_big"
						maximumsize = { -1 400 }
						scrollbarpolicy_horizontal = always_off
						#фон большой
						#using = NoninteractableBG
						blockoverride "Margins" { 
							margin = { 2 7 } 
							margin_bottom = 10
						}
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						
						scrollwidget = {
							textbox = {
								name = "description_big"
								resizeparent = yes
								minimumsize = { 560 0 }
								maximumsize = { 680 -1 }
								multiline = yes
								using = BaseFontM
								using = Black_FontColor
								autoresize = yes
								margin = { 12 3 }
								align = top|left
								text = "[EventWindow.GetDescription]"
							}
						}
					}
				} 
				widget = {
					size = { 0 24 }
				}
				fixedgridbox = {
					parentanchor = hcenter
					name = "option_grid"
					addcolumn = 550
					addrow = 38
					minimumsize = { 0 0 }
					item = {
						container = {
							using = eventbutton
						}
					}
				}
				
				widget = {
					name = "spacer_big_3"
					size = { 0 20 }
				} 
				
			}
			
			margin_widget = {
				size = { 44 280 }
				icon = {
					texture = "gfx/interface/base_parts/background_red.dds"
					parentanchor = right
					position = { -12 42 }
					size = { 40 260 }
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_pattern_x0bd_vertical.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
					}
					
					modify_texture = {
						name = "Alpha2"
						texture = "gfx/interface/base_parts/side_s_x104bd_right_cut_alpha.dds"
						blend_mode = alphamultiply
						spritetype = corneredTiled
						spriteborder = { 60 40 }
					}
					
				}
			}
			
		}

		goto_button = {
			name = "goto_button"
			position = { -54 56 }
			parentanchor = right
			shortcut = "go_to_button"
			visible = "[EventWindow.HasLocation]"
			blockoverride "On_click" { onclick = "[EventWindow.GoToLocation]" }
			tooltip = "go_to"
		}
	}
}

window = { ####Currently unused
	gfxtype = windowgfx
	name = "major_event_window"
	parentanchor = center
	
	flowcontainer = {
		name = "Bottom"
		resizeparent = yes
		direction = horizontal
		ignoreinvisible = yes
		
		flowcontainer = {
			name = "Center_Box"
			direction = vertical
			margin = { 30 0 }
			ignoreinvisible = yes
			
			widget = {
				name = "spacing_w"
				size = { 10 52 }
			}
			
			background = {
				texture = "gfx/interface/tiles/marble_tile_l.dds"
				spriteType = Corneredtiled
				spriteborder = { 0 0 }
				margin = { -6 -6 }
				margin_top = -38
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
			
			background = {
				texture = "gfx/interface/tiles/small_window_frame_p_corners.dds"
				spriteType = Corneredtiled
				size = { 100% 100% }
				margin_top = -38
				margin_bottom = 1
				spriteborder = { 32 24 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
			
			widget = {
				size = { 800 264 }
				widgetanchor = top|hcenter
				parentanchor = top|hcenter

				icon = {
					widgetanchor = top|hcenter
					parentanchor = top|hcenter
					name = "event_picture"
					scale = 0.62
					texture = "gfx/interface/event_window/Event_test.dds"
					tooltip = "[EventWindow.GetDebugInfo]"
					alpha = 0.8
					alwaystransparent = yes
				}
			}
			
			scrollarea = {
				name = "description_scrollarea"
				maximumsize = { -1 300 }
				scrollbarpolicy_horizontal = always_off
				
				using = ScrollMessageBackground_2
				
				scrollbar_vertical = {
					using = VerticalScrollBar
				}
				
				scrollwidget = {
					textbox = {
						name = "description"
						resizeparent = yes
						minimumsize = { 800 -1 }
						maximumsize = { 800 -1 }
						multiline = yes
						using = MarbleButtonFontS
						autoresize = yes
						margin = { 20 0 }
						align = top|left
						text = "[EventWindow.GetDescription]"
					}
				}
			}
			
			widget = {
				name = "spacer_2"
				size = { 0 10 }
			}
			
			fixedgridbox = {
				name = "option_grid"
				parentanchor = hcenter
				addcolumn = 600
				addrow = 30
				item = {
					container = {
						using = eventbutton
					}
				}
			}
			
			widget = {
				name = "spacer_3"
				size = { 0 20 }
			}
		}
	}
	
	icon = {
		texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
		spriteType = Corneredtiled
		position = { 0 3 }
		size = { 100% 50 }
		spriteborder = { 16 10 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	textbox = {
		name = "title"
		position = { 0 11 }
		minimumsize = { 514 -1 }
		maximumsize = { 514 -1 }
		multiline = yes
		using = MarbleButtonFontL
		fontsize = 22
		autoresize = yes
		parentanchor = top|hcenter
		align = center
		text = "[EventWindow.GetTitle]"
	}
	
	go_to_button = {
		name = "close_button"
		position = { 8 10 }
		shortcut = "go_to_button"
		visible = "[EventWindow.HasLocation]"
		onclick = "[EventWindow.GoToLocation]"
		tooltip = "go_to"
	}
}

base_sub_window = {
	gfxtype = windowgfx
	name = "minor_event_window"
	parentanchor = bottom|hcenter
	movable = yes
	position = { 0 400 }
	size = { 480 340 }
	
	blockoverride "Title_text" { text = "[EventWindow.GetTitle]" }
	
	blockoverride "White_buttons"
	{
		
	}
	
	goto_button = {
		name = "close_button"
		shortcut = "go_to_button"
		parentanchor = bottom|right
		position = { -12 -12 }
		visible = "[EventWindow.HasLocation]"
		blockoverride "On_click" { onclick = "[EventWindow.GoToLocation]" }
		tooltip = "go_to"
	}
	
	cpt_button = {
		name = "portrait_left"
		visible = "[EventWindow.HasLeftPortraitCharacter('0')]"
		datacontext = "[EventWindow.GetLeftPortraitCharacter('0')]"
		size = { 100 150 }      
		position = { 14 44 }
	}
	
	textbox = {
		name = "description"
		size = { 350 300 }
		position = { 120 44 }
		multiline = yes
		using = BaseFontS
		using = Black_FontColor
		margin = { 10 0 }
		align = top
		text = "[EventWindow.GetDescription]"
	}
		
	fixedgridbox = {
		name = "option_grid"
		addcolumn = 340
		addrow = 36
		parentanchor = bottom|hcenter
		position = { 0 -10 }
		item = {
			container = {
				text_button_square = {
					visible = "[Not(EventOption.IsHighlighted)]"
					blockoverride "Center_text" { text = "[EventOption.GetText]" }
					tooltip = "[EventOption.GetTooltip]"
					blockoverride "On_click" { onclick = "[EventOption.Select]" }
					size = { 340 0 }
				}
				
				# For Highlighted Event Options
				text_button_square_highlighted = {
					visible = "[EventOption.IsHighlighted]" 
					blockoverride "Center_text" 
					{ 
						text = "[EventOption.GetText]" 
						max_width = 340
					}
					tooltip = "[EventOption.GetTooltip]"
					blockoverride "On_click" { onclick = "[EventOption.Select]" }	
					size = { 340 0 }
				}
			}
		}
	}
	
	state = {
		name = on_appear
		
		animation = {
			position = { 0 -400 }
		}
		
		trigger_on_create = yes
		duration = 0.10
		
	}

}