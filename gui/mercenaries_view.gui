base_window = {
	gfxtype = windowgfx
	name = "mercenaries_view"
	size = { 640 900 }
	
	using = main_window_template

	### Audio ###
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
		
	#state = {
	#	name = _hide
	#	on_start = "[PdxGuiTriggerAllAnimations('mercenaries_view_closed')]"
	#}
	
	vbox = {
		using = MainWindowHeaderBox
		
		blockoverride "FlagOrIcon"
		{
			icon = {
				texture = "gfx/interface/base_parts/yellow_button_color_200fs.dds"
				framesize = { 100 100 }
				frame = 6
				position = { -2 -2 }
				size = { 32 32 }
				modify_texture = {
					texture = "gfx/interface/icons/menu_buttons/menu_mercenary.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		blockoverride "Title_text" { text = "MERCENARY_MENU_HEADER" }
		
		blockoverride "White_buttons"
		{
			button_back = {
				shortcut = "previous_window"
				onclick = "[MercenaryView.OnPrevious]"
				tooltip = "PREVIOUS_MERCENARY_VIEW"
			}
			
			button_close = {
				onclick = "[MercenaryView.OnClose]"
				tooltip = "CLOSE"
				shortcut = "close_window"
			}
			
		}
		
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 2 2 }
			hbox = {
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = expanding
				spacing = 2
				margin_top = 20
				@mincategorybuttonwidth = 260
				@maxcategorybuttonwidth = 320
				@mincategorybuttonheight = 28 
				@maxcategorybuttonheight = 34
				
				hbox = { layoutpolicy_horizontal = expanding }
				
				category_tab = {
					name = "mercs_tab"
					blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
					blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
					blockoverride "MinVisible" { visible = "[Not( MercenaryView.IsShowArmy )]" }
					blockoverride "MaxVisible" { visible = "[MercenaryView.IsShowArmy]" }
					######## Shared Overrides
					blockoverride "Center_text" { text = "MERCENARY_VIEW_SHOW_ARMY" }
					blockoverride "Icon" { visible = no }
					######## Small Button Overrides
					blockoverride "ClickFunction"
					{
						onclick = "[MercenaryView.ShowArmy]"
					}
				}   
				
				category_tab = {
					name = "pirates_tab"
					blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
					blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
					blockoverride "MinVisible" { visible = "[MercenaryView.IsShowArmy]" }
					blockoverride "MaxVisible" { visible = "[Not(MercenaryView.IsShowArmy)]" }
					######## Shared Overrides
					blockoverride "Center_text" { text = "MERCENARY_VIEW_SHOW_NAVAL" }
					blockoverride "Icon" { visible = no }
					######## Small Button Overrides
					blockoverride "ClickFunction"
					{
						onclick = "[MercenaryView.ShowNaval]"
					}
				} 
				
				hbox = { layoutpolicy_horizontal = expanding }
				
			}
			
			margin_widget = {
				size = { 0 60 }
				layoutpolicy_horizontal = expanding
				hbox = {
					check_cross_filter = {
						blockoverride "FilterYes"
						{
							visible = "[MercenaryView.IsFilterYes('recruitable')]"
						} 
						blockoverride "FilterNo"
						{
							visible = "[MercenaryView.IsFilterNo('recruitable')]"
						} 
						blockoverride "On_click"
						{
							onclick = "[MercenaryView.Filter('recruitable')]"
						}
						blockoverride "TagText" { text = "MERCENARY_VIEW_FILTER_BY_RECRUITABLE" max_width = 180 }
					}
					check_cross_filter = {
						blockoverride "FilterYes"
						{
							visible = "[MercenaryView.IsFilterYes('employed')]"
						} 
						blockoverride "FilterNo"
						{
							visible = "[MercenaryView.IsFilterNo('employed')]"
						} 
						blockoverride "On_click"
						{
							onclick = "[MercenaryView.Filter('employed')]"
						}
						blockoverride "TagText" { text = "MERCENARY_VIEW_FILTER_BY_EMPLOYMENT" max_width = 180  }
					}
					check_cross_filter = {
						blockoverride "FilterYes"
						{
							visible = "[MercenaryView.IsFilterYes('hostile')]"
						} 
						blockoverride "FilterNo"
						{
							visible = "[MercenaryView.IsFilterNo('hostile')]"
						} 
						blockoverride "On_click"
						{
							onclick = "[MercenaryView.Filter('hostile')]"
						}
						blockoverride "TagText" { text = "MERCENARY_VIEW_FILTER_BY_HOSTILE" max_width = 180  }
					}
					icon_and_text = {
						size = { 120 0 }
						blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/recruit_mercenary_cost_modifier.dds" }
						blockoverride "Text" { text = "[Player.GetModifierValue('max_mercenary_stacks')]" }
						tooltip = "[Player.GetModifierTooltip('max_mercenary_stacks')]"
					}
					icon_card = {
						size = { 36 36 }
						blockoverride "Icon"
						{
							texture = "gfx/interface/base_parts/information.dds"
							#color = { 0.34 0.34 0.34 1 }
							size = { 30 30 }
						}
						tooltip = "MERCS_EXPLANATION" 
					}
				}
			}
			
			margin_widget = {
				size = { 0 745 }
				layoutpolicy_horizontal = expanding
				margin_left = 12
				margin_right = 12
				scrollarea = {
					size = { 100% 714 }
					scrollbarpolicy_horizontal = always_off
					using = VerticalScrollAreaCutOff
					scrollbar_vertical = {
						using = VerticalScrollBar
					}

					scrollwidget = {
						fixedgridbox = {
							name = "mercenaries_grid"
							size = { 180 200 }
							
							datamodel = "[MercenaryView.GetFilteredMercenaries]"
							addcolumn = 612
							addrow = 120
							item = {
								
								margin_widget = {
									size = { 100% 111 }
									margin_right = 12
									list_entry = {
										size = { 100% 100% }
										parentanchor = vcenter
										visible = "[Not( MercenaryItem.GetMercenary.IsEmployed )]"
									}
									list_entry = {
										size = { 100% 100% }
										parentanchor = vcenter
										blockoverride "FamilyColor" { color = { 0 0 0 1 } }
										visible = "[MercenaryItem.GetMercenary.IsEmployed]"
									}
									cpt_button = {
										blockoverride "Context" { datacontext = "[MercenaryItem.GetMercenary.GetCommander]" }
										size = { 68 102 }
										parentanchor = vcenter
										position = { 6 0 }
										blockoverride "ShowIcons" { visible = no }
									}
									
									flowcontainer = {
										direction = vertical
										position = { 84 2 }
										spacing = 4
										icon_and_text_dark = {
											blockoverride "Text" { text = "[MercenaryItem.GetMercenary.GetCommander.GetMartial]" }
											blockoverride "Icon" { texture = "gfx/interface/icons/powers/military.dds" }
											tooltip = "[MercenaryItem.GetMercenary.GetCommander.GetMartialToolTip]"
											size = { 120 26 }
											
										}
										
										icon_and_text_dark = {
											blockoverride "Text" { text = "[MercenaryItem.GetVisualStrength]" }
											blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/garrison.dds" }
											tooltip = "[MercenaryItem.GetStrengthTooltip]"
											size = { 120 26 }
										}	
										
										icon_and_text_dark = {
											size = { 120 26 }
											blockoverride "Text" { text = "[MercenaryItem.GetMaintenance|2]" }
											blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/treasury.dds" }
											tooltip = "MERCENARY_MAINTENANCE_TT"
										}
									}
									
									country_flag_reworked = {
										visible = "[MercenaryItem.GetMercenary.IsEmployed]"
										position = { 1 0 }
										tooltip = "[MercenaryItem.GetFlagTooltip]"
										
										blockoverride "Flag"
										{
											datacontext = "[MercenaryItem.GetMercenary.GetEmployer]"
											texture = "[MercenaryItem.GetMercenary.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
											frame = "[MercenaryItem.GetMercenary.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											framesize = { 120 120 }
										}
										
										blockoverride "Size" { size = { 32 32 } }
										
										blockoverride "On_click"
										{
											#onclick = "[OpenDiplomacy( MercenaryItem.GetMercenary.GetEmployer )]"
										}							
									}
									
									text_button_square = {
										position = { 437 70 }
										size = { 160 28 }
										tooltip = "[MercenaryItem.GetButtonTooltip]"
										visible = "[Not(MercenaryItem.GetMercenary.IsEmployed)]"
										blockoverride "On_click"
										{ 
											onclick = "[MercenaryItem.OnClick]" 
											enabled = "[MercenaryItem.CanHire]"
										}
										blockoverride "Center_text" { text = "RECRUIT_MERCENARY_BUTTON" }
									}
									
									text_button_square = {
										position = { 437 70 }
										size = { 160 28 }
										visible = "[And( MercenaryItem.GetMercenary.IsEmployed, EqualTo_int32( MercenaryItem.GetMercenary.GetEmployer.GetId, Player.GetId ) )]"
										blockoverride "On_click"
										{ 
											onclick = "[MercenaryItem.OnClick]"
											enabled = "[MercenaryItem.CanFire]"
										}
										tooltip = "[MercenaryItem.GetFireButtonTooltip]"
										blockoverride "Center_text" { text = "FIRE_MERCENARY_BUTTON" }
									}
									text_button_square = {
										position = { 437 70 }
										size = { 160 28 }
										visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										datacontext = "[GetScriptedGui('bribe_mercenary_button')]"
										blockoverride "On_click"
										{
											enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
											onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( MercenaryItem.GetMercenary.GetCommander.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										}
										tooltip = "BRIBE_MERCENARY_BUTTON_TOOLTIP"
										blockoverride "Center_text" { text = "BRIBE_MERCENARY_BUTTON" }
									}
									goto_button = {
										size = { 36 36 }
										position = { 550 14 }
										blockoverride "On_click"
										{
											onclick = "[MercenaryItem.OnGoto]"
											onmousehierarchyenter = "[SetHighlightProvince( MercenaryItem.GetMercenary.GetUnit.GetLocation.GetId )]"
											onmousehierarchyleave = "[ClearHighlightColors]"
										}
										tooltip = "MERCENARY_GOTO_LOCATION"
									}
									
									overlappingitembox = {
										#using = UnitCards
										name = "unit_types_grid"
										position = { 216 5 }
										parentanchor = vcenter
										size = { 210 100% }
										datamodel = "[MercenaryItem.GetSubUnitCounts]"
										item = {
											unit_card = {
												blockoverride "Size" { size = { 68 102 } }
												tooltip = "[SubUnitCounts.GetTooltip]"
												alwaystransparent = no
												filter_mouse = all
											}
										}
									}
								}
							}
						}
					}
				}
			}
			vbox = {
				layoutpolicy_vertical = expanding
			}
		}
	}
}

