@window_margin_left = 15
@window_margin_right = 15
@window_margin_bottom = 6
@window_margin_left_title = 13

@province_window_animation_length = 0.15 
@stats_icon_width = 96

@province_rank_time_1 = 0.2
@province_rank_time_2 = 0.4

@province_building_time_1 = 0.1
@province_building_time_2 = 0.2

@mincategorybuttonwidth_top = 61
@maxcategorybuttonwidth_top = 61
@mincategorybuttonheight_top = 42
@maxcategorybuttonheight_top = 42

template cultural_province_ranks_guts
{
	size = { 146 170 }
	position = { 1 0 }
	#spriteType = Corneredtiled
	using = portrait_x32y32bd_alpha					
	using = tooltip_above					
	tooltipwidget = {
		province_rank_tooltip_base = {
			datacontext = "[ProvinceWindow.GetProvince.GetRank]"
		}
	}
}
template province_has_eastern_culture
{
	visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'vietic' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'japanese_group' ) ),Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'chinese_group' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'koreanic' ) ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'tai' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'burmic' ) ) )]"
}

template province_has_arab_culture
{
	visible = "[Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'levantine_arabic' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'african_arabic' ) ),Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'berber' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'eastern_arabic' ) ) )]"
}

template province_has_mediterranean_culture
{
	visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'spanish' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'italian' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'greek' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'west_turkic' ) ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'south_slavic' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'albanian_group' ) ) ) ]"
}

template province_has_india_culture
{
	visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'central_aryan' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'western_aryan' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'southern_aryan' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'telegu' ) ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'dravidian' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'eastern_aryan' ) ) ) ]"	
}

template province_has_latino_culture
{
	visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'south_latino' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'andean' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'afro_latino' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'north_latino' ) ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'nahua_group' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'mesoamerican_group' ) ) ) ]"	
}

template province_has_sahel_culture
{
	visible = "[Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'hausa_group' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'malinese' ) ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'mande_group' ) )]"
}

template province_has_slavic_culture
{
	visible = "[Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'west_slavic' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'east_slavic' ) )]"
}

template cultural_province_ranks
{
	container = {
		visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' )]"
		#position = { 30 93 }
		#scissor = yes
		icon = {
			texture = "gfx/interface/icons/province_rank/settlement.dds"
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/asian_rural.dds"
			using = province_has_eastern_culture
			using = cultural_province_ranks_guts	
		}
		
		icon = {
			texture = "gfx/interface/icons/province_rank/arab_rural.dds"
			using = province_has_arab_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/mediterranean_rural.dds"
			using = province_has_mediterranean_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/india_rural.dds"
			using = province_has_india_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/latino_rural.dds"
			using = province_has_latino_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/sahel_rural.dds"
			using = province_has_sahel_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/slavic_rural.dds"
			using = province_has_slavic_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'tanoan' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'navaho' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'na-dene' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'algic' ) ) ), Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'yuman' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'penutian' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'keres' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'patagonian' ) ) ) ) ]"
			texture = "gfx/interface/icons/province_rank/native_rural.dds"
			using = cultural_province_ranks_guts	
		}
		icon = {
			visible = "[Or( Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'je_group' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'tupi-guarani' ) ), Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'warao_group' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'chibcha' ) ) ),  EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'maya' ) ) ]"
			texture = "gfx/interface/icons/province_rank/amazonian_rural.dds"
			using = cultural_province_ranks_guts	
		}
		icon = {
			visible = "[Or( Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'sudanese' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'abyssinian' ) ),Or( EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'east_cushitic' ), EqualTo_string( ProvinceWindow.GetProvince.GetDominantCulture.GetCultureGroup.GetKey, 'south_nilotic' ) ) )]"
			texture = "gfx/interface/icons/province_rank/horn_rural.dds"
			using = cultural_province_ranks_guts	
		}
	}
	container = {
		visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city' )]"
		#position = { 30 93 }
		icon = {
			texture = "gfx/interface/icons/province_rank/city.dds"
			using = cultural_province_ranks_guts	
		}
		icon = {								
			texture = "gfx/interface/icons/province_rank/asian_city.dds"
			using = province_has_eastern_culture
			using = cultural_province_ranks_guts	
		}
		icon = {								
			texture = "gfx/interface/icons/province_rank/arab_city.dds"
			using = province_has_arab_culture
			using = cultural_province_ranks_guts	
		}
		icon = {								
			texture = "gfx/interface/icons/province_rank/mediterranean_city.dds"
			using = province_has_mediterranean_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/india_city.dds"
			using = province_has_india_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/latino_city.dds"
			using = province_has_latino_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/sahel_city.dds"
			using = province_has_sahel_culture
			using = cultural_province_ranks_guts	
		}
	}
	container = {
		visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city_metropolis' )]"
		icon = {
			texture = "gfx/interface/icons/province_rank/city_metropolis.dds"
			using = cultural_province_ranks_guts
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/asian_metropolis.dds"
			using = province_has_eastern_culture
			using = cultural_province_ranks_guts
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/arab_metropolis.dds"
			using = province_has_arab_culture
			using = cultural_province_ranks_guts
		}
		icon = {								
			texture = "gfx/interface/icons/province_rank/mediterranean_metropolis.dds"
			using = province_has_mediterranean_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/india_metropolis.dds"
			using = province_has_india_culture
			using = cultural_province_ranks_guts	
		}
		icon = {
			texture = "gfx/interface/icons/province_rank/latino_metropolis.dds"
			using = province_has_latino_culture
			using = cultural_province_ranks_guts	
		}
	}
}

window = {
	name = "province_window"
	position = { 68 0 }
	parentanchor = bottom|left
	layer = middle
	allow_outside = yes
	
	@window_width = 766
	
	size = { @window_width 374 }
	
	visible = "[ProvinceWindow.HasProvince]"
	
	state = {
		name = _show
		#on_start = "[GetVariableSystem.Set( 'city_change_window', 'dont_show_city_change' )]"
		on_start = "[GetVariableSystem.Set('state_up_tabs', 'raw')]"
		on_start = "[PdxGuiTriggerAllAnimations('province_rank_full_hide')]"
		on_start = "[GetScriptedGui('save_selected_province').Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = { 
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	
	sharp_base_window = {
		name = "state_details"
		movable = no
		visible = "[ProvinceWindow.HasState]" # Consider changing this to allow for colonisation view
		
		@state_height_large = 460
		@state_height_small = 70
		size = { @window_width @state_height_large } #TODO
		
		parentanchor = bottom
		position = { 0 -485 }
		
		state = {
			name = enlargen_state_details
			animation = {
				size = { @window_width @state_height_large }
			}
			
			duration = @province_window_animation_length
			
			on_finish = "[PdxGuiWidget.FindChild('state_contents_ani').TriggerAnimation('create_children')]"
			on_finish = "[PdxGuiWidget.FindChild('background_gradient').Show]"
		}
		
		state = {
			name = ensmallen_state_details
			animation = {
				size = { @window_width @state_height_small }
			}
			
			duration = @province_window_animation_length
			
			on_start = "[PdxGuiWidget.FindChild('state_contents_ani').TriggerAnimation('hide_children')]"
			on_start = "[PdxGuiWidget.FindChild('background_gradient').Hide]"
			
		}	
		vbox = {
			name = "state_main_box"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			widget = {
				size = { @window_width 12 }
				using = MainWindowHeaderLine
			}
			margin_widget = {
				name = "top_row"
				size = { @window_width 58 }
				layoutpolicy_horizontal = expanding
				#blockoverride "ShowButton"
				#{

				#	onclick = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
				#	onclick = "[PdxGuiTriggerAllAnimations('show_button_2')]"
				#	onclick = "[PdxGuiWidget.Hide]"
				#	onclick = "[GetVariableSystem.Toggle('state_up')]"
				#	clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_open"
				
				#	state = {
				#		name = show_button_1
				#		on_start = "[PdxGuiWidget.Show]"
				#	} 
				#	state = {
				#		name = hide_button_1
				#		on_start = "[PdxGuiWidget.Hide]"
				#	} 

				#	state = {
				#		name = code_trigger_show_state
				#		on_start = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
				#		on_start = "[PdxGuiTriggerAllAnimations('show_button_2')]"
				#		on_start = "[PdxGuiWidget.Hide]"
				#	}  
				#}
				
				#blockoverride "HideButton"
				#{
				#	onclick = "[PdxGuiTriggerAllAnimations('ensmallen_state_details')]"
				#	onclick = "[PdxGuiTriggerAllAnimations('show_button_1')]"
				#	onclick = "[PdxGuiWidget.Hide]"
				#	onclick = "[GetVariableSystem.Toggle('state_up')]"
					
				#	state = {
				#		name = hide_button_2
				#		on_start = "[PdxGuiWidget.Hide]"
				#	}
					
				#	state = { 
				#		name = show_button_2
				#		on_start = "[PdxGuiWidget.Show]"
				#		start_sound = {
				#			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_close"
				#		}
				#	}
				#}
				hbox = { 
					layoutpolicy_vertical = preferred
					layoutpolicy_horizontal = expanding
					spacing = -2
					margin_widget = {
						using = MainWindowHeaderContentLeft
						blockoverride "Title_text"
						{
							text = "[ProvinceWindow.GetState.GetName]"  
							margin_left = @window_margin_left_title
						}
						blockoverride "Max_text_width" 
						{
							max_width = 600
						}
						blockoverride "FlagOrIcon"
						{
							widget = {
								visible = "[ProvinceWindow.GetProvince.HasOwner]"
								size = { 40 40 }
								maximumsize = { 40 40 }
								country_flag_reworked = {
									blockoverride "Size"
									{
										parentanchor = vcenter
										size = { 60 60 }
									}
									blockoverride "Flag"
									{ 
										texture = "[ProvinceWindow.GetProvince.GetOwner.AccessCoatOfArms.GetTexture('(int32)120', '(int32)120')]"
										frame = "[ProvinceWindow.GetProvince.GetOwner.AccessCoatOfArms.GetFrame('(int32)120', '(int32)120'))]"
										framesize = { 120 120 }
									}
									blockoverride "On_click"
									{
										onclick = "[ProvinceWindow.OpenDiplomacy]"
									}
								}
							}
							
							widget = {
								name = "spacing_hack"
								size = { 50 1 }
								visible = "[ProvinceWindow.GetProvince.HasOwner]"
							}
							
						}
					}
					flowcontainer = {
						spacing = 2
						category_tab = {
							tooltip = "province_tt_raw"
							blockoverride "MinSize" { size = { @mincategorybuttonwidth_top @mincategorybuttonheight_top } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth_top @maxcategorybuttonheight_top } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('state_up_tabs', 'raw'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('state_up_tabs', 'raw')]" }
							######## Shared Overrides
							blockoverride "Center_text" { visible = no }
							blockoverride "Center_text_and_icon" { visible = yes }
							blockoverride "Button_text" { visible = no }
							blockoverride "Icon" {
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/raw.dds"
									blend_mode = alphamultiply
								}
							}
							######## Small Button Overrides
							blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('state_up_tabs', 'raw')]" }
						}
						category_tab = {
							tooltip = "province_tt_manufactured_goods"
							blockoverride "MinSize" { size = { @mincategorybuttonwidth_top @mincategorybuttonheight_top } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth_top @maxcategorybuttonheight_top } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('state_up_tabs', 'manufactured_goods'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('state_up_tabs', 'manufactured_goods')]" }
							######## Shared Overrides
							blockoverride "Center_text" { visible = no }
							blockoverride "Center_text_and_icon" { visible = yes }
							blockoverride "Button_text" { visible = no }
							blockoverride "Icon" {
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/manufactured_goods.dds"
									blend_mode = alphamultiply
								}
							}
							######## Small Button Overrides
							blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('state_up_tabs', 'manufactured_goods')]" }
						}
						category_tab = {
							tooltip = "province_tt_education"
							blockoverride "MinSize" { size = { @mincategorybuttonwidth_top @mincategorybuttonheight_top } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth_top @maxcategorybuttonheight_top } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('state_up_tabs', 'education'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('state_up_tabs', 'education')]" }
							######## Shared Overrides
							blockoverride "Center_text" { visible = no }
							blockoverride "Center_text_and_icon" { visible = yes }
							blockoverride "Button_text" { visible = no }
							blockoverride "Icon" {
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/education.dds"
									blend_mode = alphamultiply
								}
							}
							######## Small Button Overrides
							blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('state_up_tabs', 'education')]" }
						}
						category_tab = {
							tooltip = "province_tt_state"
							blockoverride "MinSize" { size = { @mincategorybuttonwidth_top @mincategorybuttonheight_top } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth_top @maxcategorybuttonheight_top } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('state_up_tabs', 'none'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('state_up_tabs', 'none')]" }
							######## Shared Overrides
							blockoverride "Center_text" { visible = no }
							blockoverride "Center_text_and_icon" { visible = yes }
							blockoverride "Button_text" { visible = no }
							blockoverride "Icon" {
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/state.dds"
									blend_mode = alphamultiply
								}
							}
							######## Small Button Overrides
							blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('state_up_tabs', 'none')]" }
						}
					}
					margin_widget = {
						using = MainWindowHeaderContentRight
						blockoverride "White_buttons"
						{

							white_button_round = {
								size = { 22 22 }
								visible = "[GetVariableSystem.HasValue('state_up', 'true')]"
								blockoverride "Icon" { texture = "gfx/interface/base_parts/up_arrow.dds" }
								blockoverride "On_click"
								{
									onclick = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
									#onclick = "[PdxGuiTriggerAllAnimations('show_button_2')]"
									#onclick = "[PdxGuiTriggerAllAnimations('hide_button_1')]"
									onclick = "[GetVariableSystem.Set('state_up', 'false')]"
									clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_open"
								}
								state = {
									name = show_button_1
									on_start = "[PdxGuiWidget.Show]"
								} 

								state = {
									name = code_trigger_show_state
									on_start = "[PdxGuiTriggerAllAnimations('enlargen_state_details')]"
									on_start = "[PdxGuiTriggerAllAnimations('show_button_2')]"
									on_start = "[PdxGuiWidget.Hide]"
								}
							}
							
							white_button_round = {
								size = { 22 22 }
								blockoverride "Icon" { texture = "gfx/interface/base_parts/down_arrow.dds" }
								visible = "[Not( GetVariableSystem.HasValue('state_up', 'true') )]"
								blockoverride "On_click"
								{
									onclick = "[PdxGuiTriggerAllAnimations('ensmallen_state_details')]"
									#onclick = "[PdxGuiTriggerAllAnimations('show_button_1')]"
									#onclick = "[PdxGuiTriggerAllAnimations('hide_button_2')]"
									onclick = "[GetVariableSystem.Set('state_up', 'true')]"
								}
							
								state = { 
									name = show_button_2
									on_start = "[PdxGuiWidget.Show]"
									start_sound = {
										soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_queued_events_close"
									}
								}
							
							}
						
							button_close = {
								onclick = "[ProvinceWindow.OnClose]"
								tooltip = "CLOSE"
							}
						}
					}
				}
			}
			flowcontainer = {
				name = "state_contents_ani"
				direction = vertical
				ignoreinvisible = yes
				state = {
					name = create_children
					animation = {
						alpha = 1
					}
					duration = 0.1
				}
				
				state = {
					name = hide_children
					animation = {
						alpha = 0
					}
				}
				margin_widget = {
					size = { 732 360 }
					margin_left = 20
					visible = "[GetVariableSystem.HasValue('state_up_tabs', 'raw')]"
					scrollarea = {
						size = { 732 360 }
						scrollbarpolicy_horizontal = always_off
						scrollbarpolicy_vertical = always_on
						
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						
						scrollwidget = {
							flowcontainer = {
								direction = horizontal
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T Grain #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/grain.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('grain_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_grain')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('grain_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_grain')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_grain_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_grain')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_grain').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_grain').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_grain').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_grain').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T fish #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/fish.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('fish_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_fish')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('fish_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_fish')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_fish_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_fish')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_fish').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_fish').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_fish').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_fish').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T livestock #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/livestock.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('livestock_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_livestock')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('livestock_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_livestock')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_livestock_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_livestock')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_livestock').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_livestock').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_livestock').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_livestock').GetValue|%0]"
										}
										
									}
									icon_card_goods = {
										
										tooltip = "#T vegetables #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/vegetables.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('vegetables_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_vegetables')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('vegetables_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_vegetables')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_vegetables_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_vegetables')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_vegetables').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_vegetables').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_vegetables').IsSet)]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_vegetables').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T temperate_fruit #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/temperate_fruit.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('temperate_fruit_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_temperate_fruit')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('temperate_fruit_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_temperate_fruit')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_temperate_fruit_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_temperate_fruit')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_temperate_fruit').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_temperate_fruit').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_temperate_fruit').IsSet)]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_temperate_fruit').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T lead #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/lead.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('lead_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_lead')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('lead_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_lead')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_lead_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_lead')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_lead').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_lead').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_lead').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_lead').GetValue|%0]"}

									}
								}
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T coal #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/coal.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('coal_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_coal')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('coal_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_coal')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_coal_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_coal')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_coal').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_coal').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_coal').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_coal').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T gems #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/gems.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('gems_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_gems')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('gems_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_gems')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_gems_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_gems')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_gems').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_gems').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_gems').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_gems').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T stone #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/stone.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('stone_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_stone')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('stone_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_stone')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_stone_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_stone')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_stone').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_stone').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_stone').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_stone').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T sulphur #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/sulphur.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('sulphur_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_sulphur')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('sulphur_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_sulphur')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_sulphur_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_sulphur')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_sulphur').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_sulphur').GetValue|0]"


										blockoverride "Shortage" {visible "= [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('IsSet)"]
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_sulphur').GetValue0|%]"}
										}
									}
									icon_card_goods = {
										
										tooltip = "#T tin #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/tin.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tin_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_tin')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tin_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_tin')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_tin_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_tin')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_tin').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_tin').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tin').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tin').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T copper #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/copper.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('copper_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_copper')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('copper_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_copper')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_copper_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_copper')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_copper').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_copper').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_copper').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_copper').GetValue|%0]"}

									}
								}
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T opium #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/opium.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('opium_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_opium')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('opium_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_opium')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_opium_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_opium')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_opium').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_opium').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_opium').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_opium').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T tobacco #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/tobacco.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tobacco_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_tobacco')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tobacco_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_tobacco')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_tobacco_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_tobacco')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_tobacco').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_tobacco').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tobacco')IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tobacco').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T coffee #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/coffee.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('coffee_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_coffee')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('coffee_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_coffee')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_coffee_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_coffee')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_coffee').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_coffee').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_coffee').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_coffee').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T tea #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/tea.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tea_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_tea')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('tea_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_tea')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_tea_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_tea')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_tea').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_tea').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tea').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_tea').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T spices #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/spices.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('spices_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_spices')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('spices_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_spices')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_spices_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_spices')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_spices').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_spices').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_spices').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_spices').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T sugar #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/sugar.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('sugar_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_sugar')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('sugar_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_sugar')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_sugar_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_sugar')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_sugar').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_sugar').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_sugar').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_sugar').GetValue|%0]"}

									}
								}
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T fur #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/fur.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('fur_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_fur')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('fur_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_fur')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_fur_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_fur')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_fur').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_fur').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_fur').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_fur').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T industrial_fibres #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/industrial_fibres.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('industrial_fibres_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_industrial_fibres')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('industrial_fibres_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_industrial_fibres')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_industrial_fibres_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_industrial_fibres')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_industrial_fibres').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_industrial_fibres').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_industrial_fibres').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_industrial_fibres').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T textile_fibres #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/textile_fibres.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('textile_fibres_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_textile_fibres')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('textile_fibres_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_textile_fibres')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_textile_fibres_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_textile_fibres')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_textile_fibres').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_textile_fibres').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_textile_fibres').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_textile_fibres').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T silk #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/silk.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('silk_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_silk')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('silk_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_silk')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_silk_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_silk')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_silk').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_silk').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_silk').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_silk').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T wood #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/wood.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('wood_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_wood')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('wood_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_wood')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_wood_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_wood')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_wood').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_wood').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_wood').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_wood').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T dye #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/dye.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('dye_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_dye')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('dye_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_dye')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_dye_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_dye')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_dye').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_dye').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_dye').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_dye').GetValue|%0]"}

									}
								}
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T oil #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/oil.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('oil_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_oil')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('oil_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_oil')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_oil_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_oil')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_oil').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_oil').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_oil').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_oil').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T hardwood #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/hardwood.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('hardwood_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_hardwood')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('hardwood_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_hardwood')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_hardwood_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_hardwood')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_hardwood').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_hardwood').GetValue|0]"
										}


										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_hardwood').IsSet)]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_hardwood').GetValue|%0]"
										}
									}
									icon_card_goods = {
										
										tooltip = "#T rubber #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/rubber.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('rubber_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_rubber')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('rubber_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_rubber')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_rubber_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_rubber')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_rubber').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_rubber').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_rubber').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_rubber').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T iron #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/iron.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('iron_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_iron')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('iron_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_iron')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_iron_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_iron')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_iron').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_iron').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_iron').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_iron').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T gold #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/gold.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('gold_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_gold')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('gold_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_gold')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_gold_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_gold')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_gold').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_gold').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_gold').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_gold').GetValue|%0]"}

									}
									icon_card_goods = {
										
										tooltip = "#T silver #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/silver.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('silver_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_silver')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('silver_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_silver')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_silver_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_silver')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_silver').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_silver').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_silver').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_silver').GetValue|%0]"}

									}
								}
								flowcontainer = {
									ignoreinvisible = yes
									direction = vertical
									icon_card_goods = {
										
										tooltip = "#T salt #!"
										blockoverride "Icon" {texture = "gfx/interface/icons/tradegoods/salt.dds" 
										}

										blockoverride "Stockpile" {text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('salt_stockpile').GetValue|0] [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_salt')|0+=]"
										}

										blockoverride "StockpileTooltip" {tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('salt_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_salt')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_salt_produced')|0]"
										}

										blockoverride "Balance" {text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_salt')|3+=]"
										}

										blockoverride "BalanceTooltip" {tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_salt').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_salt').GetValue|0]"
										}

										blockoverride "Shortage" {visible = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_salt').IsSet]"
										text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('shortage_salt').GetValue|%0]"}

									}
								}
							}
						}
					}
				}
				margin_widget = {
					size = { 732 360 }
					visible = "[GetVariableSystem.HasValue('state_up_tabs', 'manufactured_goods')]"
					margin_left = 20
					container = {
						container = {
							visible = "[GreaterThan_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots'), '(CFixedPoint)0' )]"
							parentanchor = left
							position = { -10 45 }
							icon_button_square = {
								parentanchor = vcenter
								size = { 50 50 }
								blockoverride "Icon" { visible = no }
								tooltip = "Available Industries in the region of [ProvinceWindow.GetState.GetGovernorship.GetNameWithNoTooltip]:  [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots')|0G]"
							}
							textbox = {
								visible = "[GreaterThan_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots'), '(CFixedPoint)0' )]"
								position = { 1 -5 }
								parentanchor = center
								size = { 0 5 }
								autoresize = yes
								text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots')|0]"
								font = BaseFont
								fontsize = 40
								fontcolor = { 0.9 0.9 0.9 1 } #color is white when non-zero, black when 0.
								alpha = 0.999
								using = tooltip_below
							}
						}
						container = {
							visible = "[LessThanOrEqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots'), '(CFixedPoint)0' )]"
							parentanchor = left
							position = { -10 20 }
							icon_button_square = {
								parentanchor = vcenter
								size = { 50 50 }
								blockoverride "Icon" { visible = no }
								tooltip = "Available Industries in the region of [ProvinceWindow.GetState.GetGovernorship.GetNameWithNoTooltip]:  [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots')|0X]"
							}
							textbox = {
								position = { 1 -5 }
								parentanchor = center
								size = { 0 5 }
								autoresize = yes
								text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_free_industry_slots')|0]"
								font = BaseFont
								fontsize = 40
								fontcolor = { 0.9 0.9 0.9 1 }
								alpha = 0.999
								using = tooltip_below
							}
						}
						container = {
							visible = "[GreaterThan_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots'), '(CFixedPoint)0' )]"
							parentanchor = left
							position = { -10 80 }
							icon_button_square = {
								parentanchor = vcenter
								size = { 50 50 }
								blockoverride "Icon" { visible = no }
								tooltip = "Used Industries in the region of [ProvinceWindow.GetState.GetGovernorship.GetNameWithNoTooltip]:  [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots')|0G]"
							}
							textbox = {
								position = { 1 -5 }
								parentanchor = center
								size = { 0 5 }
								autoresize = yes
								text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots')|0]"
								font = BaseFont
								fontsize = 40
								using = BaseFontS
								fontcolor = { 0.9 0.9 0.9 1 }
								alpha = 0.999
								using = tooltip_below
							}
						}
						container = {
							visible = "[LessThanOrEqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots'), '(CFixedPoint)0' )]"
							parentanchor = left
							position = { -10 128 }
							icon_button_square = {
								parentanchor = vcenter
								size = { 50 50 }
								blockoverride "Icon" { visible = no }
								tooltip = "Used Industries in the region of [ProvinceWindow.GetState.GetGovernorship.GetNameWithNoTooltip]:  [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots')|0X]"
							}
							textbox = {
								position = { 1 -5 }
								parentanchor = center
								size = { 0 5 }
								autoresize = yes
								text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INDUSTRY_governorship_used_industry_slots')|0]"
								font = BaseFont
								fontsize = 40
								using = BaseFontS
								fontcolor = { 0.9 0.9 0.9 1 }
								alpha = 0.999
								using = tooltip_below
							}
						}
					}
					container = {
						parentanchor = left
						position = { 44 0 }
						flowcontainer = {
							direction = vertical 
							flowcontainer = {
								#clothing									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/clothing.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_clothing').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_clothing').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_CLOTHING_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_CLOTHING_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('clothing_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_clothing')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_clothing_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_clothing')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_clothing').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_clothing').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_clothing')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_clothing'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_clothing_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_clothing_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#luxury_clothing									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/luxury_clothing.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_luxury_clothing').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_luxury_clothing').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_LUXURY_CLOTHING_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_LUXURY_CLOTHING_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('luxury_clothing_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_luxury_clothing')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_luxury_clothing_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_luxury_clothing')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_luxury_clothing').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_luxury_clothing').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_luxury_clothing')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_luxury_clothing'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_luxury_clothing_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_luxury_clothing_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#furniture									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/furniture.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_furniture').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_furniture').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_FURNITURE_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_FURNITURE_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('furniture_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_furniture')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_furniture_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_furniture')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_furniture').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_furniture').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_furniture')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_furniture'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_furniture_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_furniture_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#luxury_furniture									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/luxury_furniture.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_luxury_furniture').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_luxury_furniture').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_LUXURY_FURNITURE_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_LUXURY_FURNITURE_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('luxury_furniture_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_luxury_furniture')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_luxury_furniture_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_luxury_furniture')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_luxury_furniture').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_luxury_furniture').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_luxury_furniture')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_luxury_furniture'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_luxury_furniture_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_luxury_furniture_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#alcohol									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/alcohol.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_alcohol').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_alcohol').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_ALCOHOL_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_ALCOHOL_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('alcohol_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_alcohol')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_alcohol_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_alcohol')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_alcohol').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_alcohol').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_alcohol')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_alcohol'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_alcohol_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_alcohol_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}

							}
							flowcontainer = {
								#glass									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/glass.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_glass').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_glass').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_GLASS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_GLASS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('glass_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_glass')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_glass_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_glass')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_glass').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_glass').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_glass')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_glass'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_glass_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_glass_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#pharmaceuticals									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/pharmaceuticals.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_pharmaceuticals').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_pharmaceuticals').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_PHARMACEUTICALS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_PHARMACEUTICALS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('pharmaceuticals_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_pharmaceuticals')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_pharmaceuticals_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_pharmaceuticals')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_pharmaceuticals').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_pharmaceuticals').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_pharmaceuticals')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_pharmaceuticals'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_pharmaceuticals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_pharmaceuticals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#processed_foods									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/processed_foods.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_processed_foods').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_processed_foods').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_PROCESSED_FOODS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_PROCESSED_FOODS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('processed_foods_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_processed_foods')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_processed_foods_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_processed_foods')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_processed_foods').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_processed_foods').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_processed_foods')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_processed_foods'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_processed_foods_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_processed_foods_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#motors									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/motors.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_motors').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_motors').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_MOTORS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_MOTORS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('motors_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_motors')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_motors_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_motors')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_motors').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_motors').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_motors')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_motors'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_motors_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_motors_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#electronics									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/electronics.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_electronics').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_electronics').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_ELECTRONICS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_ELECTRONICS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('electronics_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_electronics')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_electronics_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_electronics')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_electronics').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_electronics').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_electronics')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_electronics'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_electronics_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_electronics_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
							}
							flowcontainer = {
								#rare_alloys									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/rare_alloys.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_rare_alloys').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_rare_alloys').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_RARE_ALLOYS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_RARE_ALLOYS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('rare_alloys_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_rare_alloys')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_rare_alloys_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_rare_alloys')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_rare_alloys').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_rare_alloys').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_rare_alloys')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_rare_alloys'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_rare_alloys_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_rare_alloys_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#construction_materials									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/construction_materials.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_construction_materials').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_construction_materials').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_CONSTRUCTION_MATERIALS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_CONSTRUCTION_MATERIALS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('construction_materials_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_construction_materials')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_construction_materials_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_construction_materials')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_construction_materials').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_construction_materials').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_construction_materials')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_construction_materials'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_construction_materials_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_construction_materials_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#steel									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/steel.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_steel').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_steel').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_STEEL_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_STEEL_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('steel_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_steel')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_steel_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_steel')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_steel').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_steel').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_steel')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_steel'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_steel_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_steel_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#bronze									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/bronze.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_bronze').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_bronze').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_BRONZE_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_BRONZE_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('bronze_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_bronze')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_bronze_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_bronze')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_bronze').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_bronze').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_bronze')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_bronze'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_bronze_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_bronze_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#machine_parts									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/machine_parts.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_machine_parts').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_machine_parts').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_MACHINE_PARTS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_MACHINE_PARTS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('machine_parts_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_machine_parts')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_machine_parts_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_machine_parts')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_machine_parts').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_machine_parts').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_machine_parts')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_machine_parts'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_machine_parts_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_machine_parts_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
							}
							flowcontainer = {
								#chemicals									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/chemicals.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_chemicals').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_chemicals').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_CHEMICALS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_CHEMICALS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('chemicals_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_chemicals')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_chemicals_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_chemicals')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_chemicals').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_chemicals').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_chemicals')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_chemicals'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_chemicals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_chemicals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#early_munitions									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/early_munitions.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_early_munitions').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_early_munitions').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_EARLY_MUNITIONS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_EARLY_MUNITIONS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('early_munitions_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_early_munitions')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_early_munitions_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_early_munitions')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_early_munitions').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_early_munitions').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_early_munitions')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_early_munitions'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_early_munitions_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_early_munitions_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#late_munitions									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/late_munitions.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_late_munitions').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_late_munitions').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_LATE_MUNITIONS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_LATE_MUNITIONS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('late_munitions_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_late_munitions')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_late_munitions_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_late_munitions')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_late_munitions').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_late_munitions').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_late_munitions')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_late_munitions'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_late_munitions_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_late_munitions_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#naval_supplies									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/naval_supplies.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_naval_supplies').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_naval_supplies').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_NAVAL_SUPPLIES_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_NAVAL_SUPPLIES_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('naval_supplies_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_naval_supplies')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_naval_supplies_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_naval_supplies')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_naval_supplies').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_naval_supplies').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_naval_supplies')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_naval_supplies'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_naval_supplies_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_naval_supplies_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#steel_ships									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/steel_ships.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_steel_ships').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_steel_ships').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_STEEL_SHIPS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_STEEL_SHIPS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('steel_ships_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_steel_ships')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_steel_ships_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_steel_ships')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_steel_ships').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_steel_ships').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_steel_ships')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_steel_ships'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_steel_ships_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_steel_ships_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
							}
							flowcontainer = {
								#wooden_ships									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/wooden_ships.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_wooden_ships').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_wooden_ships').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_WOODEN_SHIPS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_WOODEN_SHIPS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('wooden_ships_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_wooden_ships')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_wooden_ships_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_wooden_ships')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_wooden_ships').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_wooden_ships').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_wooden_ships')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_wooden_ships'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_wooden_ships_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_wooden_ships_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#early_artillery									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/early_artillery.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_early_artillery').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_early_artillery').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_EARLY_ARTILLERY_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_EARLY_ARTILLERY_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('early_artillery_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_early_artillery')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_early_artillery_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_early_artillery')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_early_artillery').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_early_artillery').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_early_artillery')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_early_artillery'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_early_artillery_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_early_artillery_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#late_artillery									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/late_artillery.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_late_artillery').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_late_artillery').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_LATE_ARTILLERY_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_LATE_ARTILLERY_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('late_artillery_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_late_artillery')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_late_artillery_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_late_artillery')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_late_artillery').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_late_artillery').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_late_artillery')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_late_artillery'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_late_artillery_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_late_artillery_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
								#petrochemicals									
								industrial_goods_widget = {
								    blockoverride "Icon"
								    {
								        texture = "gfx/interface/icons/tradegoods/petrochemicals.dds"
								    }
								    blockoverride "VisibleTrigger"
								    {
								    	visible = "[GreaterThan_CFixedPoint( ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_petrochemicals').GetValue, '(CFixedPoint)0' )]"
								    }
								    blockoverride "AssignedText"
								    {
								    	text = "#T [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('INDUSTRY_factories_assigned_petrochemicals').GetValue|0]"
								    }
								    blockoverride "ButtonTooltip"
								    {
								    	tooltip = "PROVWINDOW_GOV_PETROCHEMICALS_PRODUCED_TT"
								    }
								    blockoverride "StockpileText"
								    {
								        text = "PROVWINDOW_GOV_PETROCHEMICALS_STOCKPILE"
								    }
								    blockoverride "BalanceTooltip"
								    {
								    	tooltip = "Stockpile: #H [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('petrochemicals_stockpile').GetValue|0] #! Demand: #R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_petrochemicals')|0] #!/ Production: #G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('GOODS_governorship_petrochemicals_produced')|0]"
								    }
								    blockoverride "CashBalanceText"
								    {
								    	text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('TRADE_governorship_cash_balance_petrochemicals')|3+=]"
								    }
								    blockoverride "CashBalanceTooltip"
								    {
								    	tooltip = "Imports: #R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('order_size_petrochemicals').GetValue|0] #!Exports: #G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('amount_exported_petrochemicals').GetValue|0]"
								    }
								    blockoverride "BalanceText"
								    {
								    	text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('DEMAND_difference_petrochemicals')|0+=]"
								    }
								    blockoverride "On_click"
								    {
								       enabled = "[EqualTo_CFixedPoint( GuiScope.SetRoot(ProvinceWindow.GetProvince.GetOwner.MakeScope).ScriptValue('INDUSTRY_unlocked_petrochemicals'), '(CFixedPoint)1' )]"
								        onclick = "[GetScriptedGui('add_petrochemicals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }
								    blockoverride "On_rightclick"
								    {
								        onrightclick = "[GetScriptedGui('remove_petrochemicals_button').Execute( GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
								    }										
								}
							}
						}
					}
				}
				margin_widget = {
					visible = "[GetVariableSystem.HasValue('state_up_tabs', 'education')]"
					# Education statistics etc.
					size = { 732 360 }
					margin_left = 20
					flowcontainer = {
						direction = vertical
						margin_top = 10
						margin_left = 10
						cell_wealth_information = {
							blockoverride "background" {
								background = {
									shaderfile = "gfx/FX/pdxgui_default.shader"
									using = beige_background
									alpha = 0.35
									margin_left = 1
									margin_bottom = 1
								}
							}
							blockoverride "text" {
								size = { 400 28 }
								align = center
								text = "province_education"
							}
						}
						flowcontainer = {
							direction = horizontal
							margin_left = -1
							text_button_sort = {
								size = { 161 32 }
								blockoverride "Button_text" { text = "province_category" }
								blockoverride "Icon" { visible = no }
								blockoverride "Drop_shadow" { visible = no }
							}
							text_button_sort = {
								size = { 75 32 }
								blockoverride "Button_text" { text = "%" }
								blockoverride "Icon" { visible = no }
								blockoverride "Drop_shadow" { visible = no }
							}
							text_button_sort = {
								size = { 100 32 }
								blockoverride "Button_text" { text = "province_count" }
								blockoverride "Icon" { visible = no }
								blockoverride "Drop_shadow" { visible = no }
							}
							text_button_sort = {
								size = { 65 32 }
								blockoverride "Button_text" { text = "province_change_edu" }
								blockoverride "Icon" { visible = no }
								blockoverride "Drop_shadow" { visible = no }
							}
						}
						province_four_cells = {
							blockoverride "cell_1" { text = "province_tier_2" }
							blockoverride "cell_2" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_t2_governorship_percentage')|%2]" }
							blockoverride "cell_3" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_t2_educated_governorship')|0]/#Y [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_available_slots_t2_governorship')|0]#!" }
							blockoverride "cell_4" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_available_t2_educated_governorship')|+=2]" }
							tooltip = "edu_t2_provwindow_tt"
						}
						province_four_cells = {
							blockoverride "cell_1" { text = "province_tier_1" }
							blockoverride "cell_2" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_t1_governorship_percentage')|%0]" }
							blockoverride "cell_3" { text = "[ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('EDU_t1_educated_governorship').GetValue|0]/#Y [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_available_slots_t1_governorship')|0]#!" }
							blockoverride "cell_4" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_available_t1_educated_governorship')|+=0]" }
							tooltip = "edu_t1_provwindow_tt"
						}
						province_four_cells = {
							blockoverride "cell_1" { text = "province_uneducated" }
							blockoverride "cell_2" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_uneducated_governorship_percentage')|%0]" }
							blockoverride "cell_3" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('EDU_uneducated_governorship')|0]" }
							tooltip = "Unused/Occupied/Max/Required"
						}
					}
				}
				margin_widget = {
					visible = "[GetVariableSystem.HasValue('state_up_tabs', 'none')]"
					size = { 732 360 }
					flowcontainer = {
						direction = horizontal
						margin_top = 20
						flowcontainer = {
							direction = vertical
							widget = {
								size = { 106 74 }
								flowcontainer = {
									direction = vertical
									parentanchor = hcenter
									icon_pie = {
										size = { 64 64 }
										parentanchor = hcenter
										datamodel = "[ProvinceWindow.GetPopTypes]"
										
										###Slices and Icon
										blockoverride "SliceTooltip" { tooltip = "[PopTypeItem.GetName]" }
										blockoverride "SliceValue" { value = "[PopTypeItem.GetSize]" }
										blockoverride "SliceColor" { color = "[PopTypeItem.GetColor]" }
										blockoverride "Icon" { 
											using = icon_poptype
											position = { 0 -1 }
											tooltip = "POPTYPEPIECHART"
											scale = 1.1
										}
									}
								}
							}
							widget = {
								size = { 106 100 }
								flowcontainer = {
									direction = vertical
									parentanchor = hcenter
									icon_pie = {
										size = { 64 64 }
										parentanchor = hcenter
										datamodel = "[ProvinceWindow.GetPopCultures]"
										
										###Slices and Icon
										blockoverride "SliceTooltip" { tooltip = "POP_CULTURE_SLICE_TT" }
										blockoverride "SliceValue" { value = "[PopCultureItem.GetSize]" } 
										blockoverride "SliceColor" { color = "[PopCultureItem.GetColor]" }
										blockoverride "Icon" { 
											using = icon_culture
											position = { 0 1 }
											tooltip = "POPCULTUREPIECHART"
											scale = 1.1
										}
									}
									tag = {
										size = { 106 20 }
										datacontext = "[ProvinceWindow.GetState]"
										max_width = 106
										fontsize_min = 14
										parentanchor = hcenter
										using = BaseFontS
										using = Black_FontColor
										text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_culture_integrated_percent_svalue')|0%]"
										align = center
										tooltip = "STATE_INTEGRATED_CULTURE_TT"
									}
								}
							}
							widget = {
								size = { 106 100 }
								flowcontainer = {
									direction = vertical
									parentanchor = hcenter
									icon_pie = {
										size = { 64 64 }
										parentanchor = hcenter
										datamodel = "[ProvinceWindow.GetPopReligions]"
										
										###Slices and Icon
										blockoverride "SliceTooltip" { tooltip = "POP_RELIGION_SLICE_TT" }  
										blockoverride "SliceValue" { value = "[PopReligionItem.GetSize]" }
										blockoverride "SliceColor" { color = "[PopReligionItem.GetColor]" }
										blockoverride "Icon" { 
											using = icon_religious
											position = { 0 1 }
											tooltip = "POPRELIGIONPIECHART"
											scale = 1.1
										}
									}
									tag = {
										size = { 106 20 }
										datacontext = "[ProvinceWindow.GetState]"
										max_width = 106
										fontsize_min = 14
										parentanchor = hcenter
										using = BaseFontS
										using = Black_FontColor
										text = "[GuiScope.SetRoot( ProvinceWindow.GetState.MakeScope ).ScriptValue('state_religion_integrated_percent_svalue')|0%]"
										align = center
										tooltip = "STATE_RELIGION_TT"
									}
								}
							}
						}
						flowcontainer = {
							direction = vertical
							spacing = 20
							icon_and_text_progress = {
								parentanchor = hcenter
								tooltip = "[ProvinceWindow.GetState.GetFoodTooltip][ProvinceWindow.GetState.GetFoodModifierEffect]"
								blockoverride "TotalSize" { size = { 164 38 } }
								blockoverride "size" { size = { 152 7 } } # -10px width than above makes it align
								blockoverride "LineVisibility"
								{
									visible = no 
								}
								
								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/food.dds"
								}
								
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetFood|0]/[ProvinceWindow.GetState.GetFoodCapacity|0]"
									tooltip = "[ProvinceWindow.GetState.GetFoodCapacityTooltip]"
								}
								
								blockoverride "Value"
								{
									value = "[FixedPointToFloat(ProvinceWindow.GetState.GetFoodCapacityPercent)]"
								}
						
								blockoverride "UpIndicator" { visible = "[GreaterThan_int32( ProvinceWindow.GetState.GetFoodFrame, '(int32)3' )]" }
								blockoverride "DownIndicator" { visible = "[LessThan_int32( ProvinceWindow.GetState.GetFoodFrame, '(int32)3' )]" }
							}
							
							icon_and_text_progress = { 
								parentanchor = hcenter
								tooltip = "[ProvinceWindow.GetState.GetLoyaltyTooltip]"
								blockoverride "TotalSize" { size = { 164 38 } }
								blockoverride "size" { size = { 152 7 } }  # -12px width than above makes it align
								blockoverride "LineVisibility"
								{
									visible = no 
								}

								blockoverride "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/loyalty.dds"
								}
								
								blockoverride "Text"
								{
									text = "[ProvinceWindow.GetState.GetStateLoyalty|0]/100"
								}
								
								blockoverride "Value"
								{
									value = "[FixedPointToFloat(ProvinceWindow.GetState.GetStateLoyalty)]"
								}
								blockoverride "UpIndicator" { visible = "[GreaterThan_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)3' )]" }
								blockoverride "DownIndicator" { visible = "[LessThan_int32( ProvinceWindow.GetState.GetMonthlyLoyaltyFrame, '(int32)3' )]" }
							}
							flowcontainer = {
								direction = vertical
								cell_wealth_information = {
									blockoverride "text" {
										size = { 250 28 }
										align = center
										text = "province_admin"
									}
								}
								province_two_cells = {
									blockoverride "cell_1" {
										size = { 100 28 }
										text = "province_admin_required"
									}
									blockoverride "cell_2" { 
										size = { 150 28 }
										text = "province_admin_required_value" 
									}
									tooltip = "Unused/Occupied/Max/Required"
								}
								province_two_cells = {
									blockoverride "cell_1" { 
										size = { 100 28 }
										text = "province_admin_provided" 
									}
									blockoverride "cell_2" { 
										size = { 150 28 }
										text = "province_admin_provision_costs"
									}
									tooltip = "Unused/Occupied/Max/Required"
								}
							}
						}
					}
				}
				# Flowcontainer 2: wealth information
				flowcontainer = {
					direction = horizontal
					ignoreinvisible = yes
					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_WEALTH_TT"
						tooltipwidget = {
							total_governorship_wealth_tt = { }
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/shared_icons/treasury.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_total')|2]"
						}
					}

					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_UPPER_STRATA_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/upper_strata.dds" }
								blockoverride "name" { text = "Upper strata" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_upper_strata_per_capita')|2]" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_upper_strata')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_upper_strata')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_upper_strata').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_upper_strata').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_upper_strata').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_upper_strata').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_upper_strata').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_upper_strata').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_upper_strata').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_upper_strata').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_upper_strata')|3]" }
								blockoverride "wages_expense" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_expense_upper_strata')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_empire_pool_owed_governorship_positive')|+=]" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_empire_pool_owed_governorship_negative')|+=]" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_upper_strata')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_upper_strata')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_upper_strata')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_upper_strata')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/upper_strata.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_upper_strata')|2]"
						}
					}

					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_MIDDLE_STRATA_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/middle_strata.dds" }
								blockoverride "name" { text = "Middle strata" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_middle_strata_per_capita')|2]" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_middle_strata')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_middle_strata')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_middle_strata').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_middle_strata').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_middle_strata').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_middle_strata').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_middle_strata').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_middle_strata').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_middle_strata').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_middle_strata').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_middle_strata')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_middle_strata')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_middle_strata')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_middle_strata')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_middle_strata')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_middle_strata')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/middle_strata.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_middle_strata')|2]"
						}
					}
					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_LOWER_STRATA_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/lower_strata.dds" }
								blockoverride "name" { text = "Lower strata" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_lower_strata_per_capita')|2]" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_lower_strata')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_lower_strata')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_lower_strata').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_lower_strata').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_lower_strata').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_lower_strata').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_lower_strata').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_lower_strata').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_lower_strata').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_lower_strata').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_lower_strata')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_lower_strata')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_lower_strata')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_lower_strata')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_lower_strata')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_lower_strata')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/lower_strata.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_lower_strata')|2]"
						}
					}
					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_PROLETARIAT_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/proletariat.dds" }
								blockoverride "name" { text = "Proletariat" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_proletariat_per_capita')|2]" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_proletariat')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_proletariat')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_proletariat').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_proletariat').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_proletariat').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_proletariat').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_proletariat').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_proletariat').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_proletariat').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_proletariat').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_proletariat')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_proletariat')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_proletariat')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_proletariat')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_proletariat')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_proletariat')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/proletariat.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_proletariat')|2]"
						}
					}
					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_INDENTURED_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/indentured.dds" }
								blockoverride "name" { text = "Indentured" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_indentured_per_capita')|2]" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_indentured')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_indentured')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_indentured').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_indentured').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_indentured').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_indentured').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_indentured').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_indentured').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_indentured').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_indentured').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_indentured')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_indentured')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_indentured')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_indentured')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_indentured')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_indentured')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/indentured.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_indentured')|2]"
						}
					}
					icon_and_text = {
						size = { 95 0 }
						#tooltip = "PROVWINDOW_GOV_TRIBESMEN_WEALTH_TT"
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/tribesmen.dds" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_tribesmen_per_capita')|2]" }
								blockoverride "name" { text = "Tribesmen" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_tribesmen')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_tribesmen')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_tribesmen').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_tribesmen').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_tribesmen').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_tribesmen').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_tribesmen').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_tribesmen').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_tribesmen').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_tribesmen').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_tribesmen')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_tribesmen')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_tribesmen')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_tribesmen')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_tribesmen')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_tribesmen')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/tribesmen.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_tribesmen')|2]"
						}
					}
					icon_and_text = {
						size = { 95 0 }
						tooltipwidget = {
							wealth_information_tt = {
								blockoverride "icon" { texture = "gfx/interface/icons/pop_types/slaves.dds" }
								blockoverride "per_capita" { text = "£[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_governorship_slaves_per_capita')|2]" }
								blockoverride "name" { text = "Slaves" }
								blockoverride "income" { text = "#G #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_income_total_slaves')|3]" }
								blockoverride "expenses" { text = "#R #L £[GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_expenses_total_slaves')|3]" }
								blockoverride "income_from_resource_extraction" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_resource_extraction_slaves').GetValue|3]" }
								blockoverride "expenses_from_resource_extraction" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_resource_extraction_slaves').GetValue|3]" }
								blockoverride "income_from_manufacturing" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_manufacturing_slaves').GetValue|3]" }
								blockoverride "expenses_from_manufacturing" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_manufacturing_slaves').GetValue|3]" }
								blockoverride "income_from_shipping" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_income_from_shipping_slaves').GetValue|3]" }
								blockoverride "expenses_from_shipping" { text = "#R [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('this_expenses_from_shipping_slaves').GetValue|3]" }
								blockoverride "generated_production" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_production_slaves').GetValue|3]" }
								blockoverride "generated_services" { text = "#G [ProvinceWindow.GetState.GetGovernorship.MakeScope.GetVariable('WEALTH_new_generated_services_slaves').GetValue|3]" }
								blockoverride "ost_of_living" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('WEALTH_cost_of_living_slaves')|3]" }
								blockoverride "wages_income" { text = "#G [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('JOBS_wages_due_slaves')|3]" }
								blockoverride "empire_pool_owed_governorship_positive" { text = "" }
								blockoverride "empire_pool_owed_governorship_negative" { text = "" }
								blockoverride "governorship_excise_duty_essentials" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_excise_duty_essentials_slaves')|3]" }
								blockoverride "governorship_property_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_property_tax_slaves')|3]" }
								blockoverride "governorship_income_tax" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_income_tax_slaves')|3]" }
								blockoverride "governorship_tariffs" { text = "#R [GuiScope.SetRoot(ProvinceWindow.GetState.GetGovernorship.MakeScope).ScriptValue('INCOME_governorship_tariffs_slaves')|3]" }
							}
						}
						blockoverride "Icon"
						{
							texture = "gfx/interface/icons/pop_types/slaves.dds"
						}
						blockoverride "Text"
						{
							text = "[GuiScope.SetRoot( ProvinceWindow.GetState.GetGovernorship.MakeScope ).ScriptValue('WEALTH_governorship_slaves')|2]"
						}
					}
				}
			}
		}
	}
	
	base_window = {
		name = "province_details"
		movable = no
		@province_height_large = 490 
		@province_height_small = 141
		blockoverride "BackgroundGradient" { visible = no }
		size = { @window_width @province_height_large }

		parentanchor = bottom
		visible = "[ProvinceWindow.HasProvince]"
		alwaystransparent = no
		allow_outside = yes
		
		state = {
			name = _show
			
			start_sound = {
				soundeffect = "event:/SFX/UI/Province/sfx_ui_province_select_window"
			}
		}
		sharp_base_window = {
			size = { 100% 46 }
			widgetanchor = bottom
			position = { 0 5 }
			visible = "[Not(ProvinceWindow.HasState)]"
			secondary_header = {  
				name = "uncolonized_main_header"
				parentanchor = vcenter
				blockoverride "Title_text"
				{
					text = "[ProvinceWindow.GetProvince.GetAreaName]"  
					margin_left = @window_margin_left_title
				}
				blockoverride "White_buttons"
				{
					button_close = { 
						visible = yes
						onclick = "[ProvinceWindow.OnClose]"
						tooltip = "CLOSE"
					}
				}
			}
		}
		
		vbox = {
			name = "city_main_box"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
		
			hbox = {
				name = "top_row"
				layoutpolicy_horizontal = expanding
				icon = {
					size = { 754 38 }
					sub_header_v = {  
						name = "uncolonized_sub_header"
						layoutpolicy_horizontal = expanding
						size = { 100% 0 }
						position = { 3 5 }
						visible = "[Not(ProvinceWindow.HasState)]"
			
						blockoverride "Title_text"
						{
							datacontext = "[ProvinceWindow.GetProvince]"
							text = "UNCOLONIZED_TITLE"  
							margin_left = @window_margin_left_title					
						}
						blockoverride "LineVisibility" { visible = no }
						
					}
					sub_header_v = {  
						visible = "[ProvinceWindow.HasState]" 
						name = "city_header"
						layoutpolicy_horizontal = expanding
						size = { 100% 0 }
						position = { 3 5 }
						blockoverride "Title_text"
						{
							text = "[ProvinceWindow.GetProvince.GetLongName]"  
							margin_left = @window_margin_left_title					
						}
						blockoverride "Max_text_width" 
						{
							max_width = 600
						}
					}
				}
				hbox = {
					name = "city_header_buttons"
				}
			}
			
			hbox = {
				name = "second_row"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
				margin_top = 2
				margin_bottom = -5
				margin_widget = {
					size = { 140 170 }
					margin = { 10 0 }
					flowcontainer = {
						spacing = 4
						direction = vertical
						cpt_button = {
							name = "governor_portrait"
							blockoverride "Size" { size = { 84 126 } }
							blockoverride "Context" { datacontext = "[ProvinceWindow.GetState.GetGovernorOrRuler]" }
							blockoverride "portrait_button_template_tooltip" 
							{ 
								tooltip = "[ProvinceWindow.GetState.GetGovernorOrRuler.GetTooltip]"
							} 
						}
						flowcontainer = {
							ignoreinvisible = yes
							spacing = 4
							icon_button_square = {
								size = { 40 40 }
								visible = "[Not( ProvinceWindow.IsPlayerProvince )]" 
								
								blockoverride "On_click"
								{
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									inherit_visual_state = no
									enabled = no
								}
								blockoverride "Icon"
								{
									size = { 34 34 }
									using = white_background
									modify_texture = {
										texture = "gfx/interface/icons/shared_icons/change.dds"
										blend_mode = alphamultiply
									}
								}
								tooltip = "CANNOT_CHANGE_GOV_HERE"
							}
							icon_button_square = {
								size = { 40 40 }
								visible = "[ProvinceWindow.IsPlayerProvince]" 

								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ChangeGovernor]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									inherit_visual_state = no
								}
								blockoverride "Icon"
								{
									size = { 34 34 }
									using = white_background
									modify_texture = {
										texture = "gfx/interface/icons/shared_icons/change.dds"
										blend_mode = alphamultiply
									}
								}
								enabled = "[ProvinceWindow.CanChangeGovernor]"
								tooltip = "[ProvinceWindow.GetChangeGovernorTooltip]"
							}
							icon_button_square = {
								size = { 40 40 }
								enabled = "[ProvinceWindow.CanChangePolicy]"
								tooltip = "[GetChangeGovernorPoliciesTooltip(ProvinceWindow.GetState)]"
								blockoverride "On_click"
								{
									onclick = "[ProvinceWindow.ChangePolicy]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
								} 
							
								blockoverride "Icon"
								{
									texture = "[GetGovernorPolicyIcon(ProvinceWindow.GetState.GetGovernorPolicy)]"
									size = { 90% 90% }
								}
							}
						}
					}
					flowcontainer = {
						direction = vertical
						parentanchor = right
						position = { 8 0 }
						ignoreinvisible = yes
	                    button = {
	                    	size = { 40 40 }
	                        visible = "[ProvinceWindow.CanTransferOccupation]"
	                        blockoverride "Icon" { texture = "gfx/interface/province/transfer_occupation.dds" }
                            enabled = "[ProvinceWindow.CanTransferOccupation]"
                            onclick = "[ProvinceWindow.TransferOccupation]"
	                        tooltip = "[ProvinceWindow.GetTransferOccupationTooltip]" 
	                    }
	                    
	                    button= {
	                        size = { 40 40 }
	                        margin = { 5 5 }
	                        name = "MigrateButton"
	                        visible = "[ProvinceWindow.ShowMigrateButton]"
	                        enabled = "[ProvinceWindow.CanMigrate]"
	                        onclick = "[ProvinceWindow.Migrate]"
	                        texture = "gfx/interface/icons/shared_icons/migrate.dds"
	                        tooltip = "[ProvinceWindow.GetMigrateTooltip]"
	                    }
	                    
	                    icon = {
	                        size = { 40 40 }
	                        visible = "[ProvinceWindow.GetProvince.IsHolySite]"
	                        texture = "[GetHolySiteRankIcon( ProvinceWindow.GetProvince.GetRank )]"
	                        tooltip = "[ProvinceWindow.GetHolySiteTooltip]"
	                    }
	                    
	                    icon = {
	                        size = { 40 40 }
	                        visible = "[ProvinceWindow.GetProvince.IsCapital]"
	                        texture = "gfx/interface/icons/shared_icons/country_capital.dds"
	                        tooltip = "CAPITAL"
	                    }
	                    
	                    button = {
	                        size = { 40 40 }
	                        name = "ColonizeButton"
	                        visible = "[Not( ProvinceWindow.GetProvince.HasOwner )]"
	                        enabled = "[ProvinceWindow.CanBeColonized]"
	                        onclick = "[ProvinceWindow.QuickColonize]"
	                        texture = "gfx/interface/icons/shared_icons/alert_colonize_province.dds"
	                        tooltip = "[ProvinceWindow.GetColonizeTooltip]"
	                    }
	                    
	                    button = {
	                        size = { 40 40 }
	                        datacontext = "[GetScriptedGui('move_capital_button')]" 
	                        visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsCapital ) )]"
	                        enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	                        texture = "gfx/interface/icons/shared_icons/country_capital.dds"
	                    }
	                    
	                    button = {
	                        size = { 40 40 }
	                        datacontext = "[GetScriptedGui('move_province_capital_button')]" 
	                        visible = "[And( ProvinceWindow.IsPlayerProvince, Not( ProvinceWindow.GetProvince.IsStateCapital ) )]"
	                        enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).End )]"
	                        tooltip = "MOVE_CAPITAL_BUTTON_TOOLTIP"
	                       	texture = "gfx/interface/icons/shared_icons/state_capital.dds"
	                    }
	                    
	                    icon = {
	                        size = { 40 40 }
	                        visible = "[And(ProvinceWindow.GetProvince.IsStateCapital, Not(ProvinceWindow.GetProvince.IsCapital))]"
	                        texture = "gfx/interface/icons/shared_icons/state_capital.dds"
							tooltip = "[ProvinceWindow.GetProvince.GetStateCapitalTooltip]"
						}
					}
				}
				margin_widget = {
					size = { 0 170 }
					layoutpolicy_horizontal = expanding
					icon = {
						size = { 468 170 }
						texture = "[GetTerrainIconBig(ProvinceWindow.GetProvince.GetTerrain)]"
						using = portrait_x32y32bd_alpha
						spriteType = Corneredtiled
						state = {
							name = "province_rank"
							duration = @province_rank_time_2
							size = { 166 170 }
						}
						state = {
							name = "province_rank_hide"
							duration = @province_rank_time_2
							size = { 468 170 }
						}
						state = {
							name = "province_rank_full_hide"
							size = { 468 170 }
						}

						tooltipwidget = {
							terrain_tooltip_base = {
								datacontext = "[ProvinceWindow.GetProvince.GetTerrain]"
							}
						}
						using = tooltip_nw
						flowcontainer = {
							ignoreinvisible = yes
						}
					}
					icon = {
						size = { 148 170 }
						position = { 320 0 }
						alpha = 0
						visible = no
						state = {
							name = "province_rank"
							delay = @province_rank_time_1
							duration = @province_rank_time_1
							alpha = 1
							on_start = "[PdxGuiWidget.Show]"
							position = { 169 0 }
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
							}
						}
						state = {
							name = "province_rank_hide"
							duration = @province_rank_time_1
							alpha = 0
							position = { 320 0 }
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
							}
							next = province_rank_full_hide
						}
						state = {
							name = "province_rank_full_hide"
							alpha = 0
							position = { 320 0 }
							on_start = "[PdxGuiWidget.Hide]"
						}
						button = {
							visible = "[And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city_metropolis' ))]"
							texture = "gfx/interface/icons/province_rank/expansion.dds"
							size = { 148 170 }
							datacontext = "[GetScriptedGui('found_metropolis_button')]"
							alpha = 1
							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							tooltip = "FOUND_METROPOLIS_BUTTON_TOOLTIP"
							using = portrait_x32y32bd_alpha					
							using = tooltip_above
						}
						button = {
							visible = "[And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city' ))]"
							texture = "gfx/interface/icons/province_rank/expansion.dds"
							size = { 148 170 }
							datacontext = "[GetScriptedGui('found_metropolis_button')]"
							alpha = 1
							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							tooltip = "FOUND_METROPOLIS_BUTTON_TOOLTIP"
							using = portrait_x32y32bd_alpha					
							using = tooltip_above
						}
						button = {
							visible = "[And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' ))]"
							texture = "gfx/interface/icons/province_rank/founding.dds"
							size = { 148 170 }
							datacontext = "[GetScriptedGui('found_city_button')]"
							alpha = 1
							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							tooltip = "FOUND_CITY_BUTTON_TOOLTIP"
							using = portrait_x32y32bd_alpha					
							using = tooltip_above
						}
						icon = {
							size = { 148 100 }
							position = { 0 1 }
							parentanchor = bottom
							using = flat_background_white
							using = portrait_x32y32bd_alpha
							spriteType = corneredstretched
							modify_texture = {
								name = "Alpha"
								blend_mode = alphamultiply
								texture = "gfx/interface/base_parts/gradient_black_flip.dds"
							}
						}
						margin_widget = {
							parentanchor = hcenter|bottom
							margin_top = -14
							size = { 100% 100% }
							textbox = {
								visible = "[And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' ))]"
								using = HeaderFont
								using = Black_FontColor
								text = "found_city_button_confirm_t"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}
							textbox = {
								visible = "[Not(And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' )))]"
								enabled = "[Not(And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city_metropolis' )))]"
								using = HeaderFont
								using = Black_FontColor
								text = "found_metropolis_button_confirm_t"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}											
						}
					}
					icon = {
						size = { 148 170 }
						position = { 470 0 }
						alpha = 0
						visible = no
						state = {
							name = "province_rank"
							duration = @province_rank_time_1
							alpha = 1
							on_start = "[PdxGuiWidget.Show]"
							position = { 320 0 }
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
							}
						}
						state = {
							name = "province_rank_hide"
							delay = @province_rank_time_1
							duration = @province_rank_time_1
							alpha = 0
							position = { 470 0 }
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
							}
							next = province_rank_full_hide
						}
						state = {
							name = "province_rank_full_hide"
							alpha = 0
							position = { 470 0 }
							on_start = "[PdxGuiWidget.Hide]"
						}
						button = {
							visible = "[ProvinceWindow.IsPlayerProvince]"
							texture = "gfx/interface/icons/province_rank/ruins.dds"
							size = { 148 170 }
							datacontext = "[GetScriptedGui('revoke_city_status_button')]"
							alpha = 1
							enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
							tooltip = "REVOKE_CITY_STATUS_BUTTON_TOOLTIP"
							using = portrait_x32y32bd_alpha	
							using = tooltip_above
						}
						icon = {
							size = { 148 100 }
							position = { 0 1 }
							parentanchor = bottom
							using = flat_background_white
							using = portrait_x32y32bd_alpha
							spriteType = corneredstretched
							modify_texture = {
								name = "Alpha"
								blend_mode = alphamultiply
								texture = "gfx/interface/base_parts/gradient_black_flip.dds"
							}
						}
						margin_widget = {
							parentanchor = hcenter|bottom
							margin_top = -14	
							size = { 100% 100% }
							datacontext = "[GetScriptedGui('revoke_city_status_button')]"
							textbox = {
								enabled = "[And(Not(And(ProvinceWindow.IsPlayerProvince, EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' ))), ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End ))]"
								using = HeaderFont
								using = Black_FontColor
								text = "revoke_city_status_button"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}							
						}
					}
					widget = {
						size = { 148 170 }
						position = { 470 0 }
						using = cultural_province_ranks
						icon = {
							size = { 148 100 }
							position = { 0 1 }
							parentanchor = bottom
							using = flat_background_white
							using = portrait_x32y32bd_alpha
							spriteType = corneredstretched
							modify_texture = {
								name = "Alpha"
								blend_mode = alphamultiply
								texture = "gfx/interface/base_parts/gradient_black_flip.dds"
							}
						}
						margin_widget = {
							parentanchor = hcenter|bottom
							margin_top = -14
							size = { 100% 100% }
							textbox = {
								visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'settlement' )]"
								using = HeaderFont
								using = Black_FontColor
								text = "settlement"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}				
							textbox = {
								visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city' )]"
								using = HeaderFont
								using = Black_FontColor
								text = "city"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}				
							textbox = {
								visible = "[EqualTo_string( ProvinceWindow.GetProvince.GetRank.GetKey, 'city_metropolis' )]"
								using = HeaderFont
								using = Black_FontColor
								text = "city_metropolis"
								size = { 100% 100% }
								align = hcenter|bottom
								fontsize = 20
								multiline = yes
							}				
						}
						icon_button_square = {
							size = { 40 40 }
							position = { -3 2 }
							parentanchor = right|top
							enabled = no
							tooltip = "province_change"
							blockoverride "Icon"
							{
								size = { 34 34 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/shared_icons/change.dds"
									blend_mode = alphamultiply
								}
							}
						}
						icon_button_square = {
							size = { 40 40 }
							position = { -3 2 }
							parentanchor = right|top
							enabled = "[ProvinceWindow.IsPlayerProvince]"
							tooltip = "province_change"
							blockoverride "On_click"
							{
								onclick = "[PdxGuiTriggerAllAnimations('province_rank')]"
							}
							blockoverride "Icon"
							{
								size = { 34 34 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/shared_icons/change.dds"
									blend_mode = alphamultiply
								}
							}
							blockoverride "Drop_shadow" { visible = no }
							state = {
								name = "province_rank"
								on_start = "[PdxGuiWidget.Hide]"
							}
							state = {
								name = "province_rank_hide"
								delay = 0.6
								on_start = "[PdxGuiWidget.Show]"
							}
							state = {
								name = "province_rank_full_hide"
								on_start = "[PdxGuiWidget.Show]"
							}
						}
						icon_button_square = {
							size = { 40 40 }
							position = { -3 2 }
							parentanchor = right|top
							enabled = "[ProvinceWindow.IsPlayerProvince]"
							visible = no
							tooltip = "province_change"
							blockoverride "On_click"
							{
								onclick = "[PdxGuiTriggerAllAnimations('province_rank_hide')]"
							}
							blockoverride "Icon"
							{
								size = { 34 34 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/shared_icons/change.dds"
									blend_mode = alphamultiply
								}
							}
							blockoverride "Drop_shadow" { visible = no }
							state = {
								name = "province_rank"
								delay = 0.6
								on_start = "[PdxGuiWidget.Show]"
							}
							state = {
								name = "province_rank_hide"
								on_start = "[PdxGuiWidget.Hide]"
							}
							state = {
								name = "province_rank_full_hide"
								on_start = "[PdxGuiWidget.Hide]"
							}
						}

						icon_button_square = {
							size = { 40 40 }
							position = { -3 46 }
							parentanchor = right|top
							enabled = no
							tooltip = "province_building"
							blockoverride "Icon"
							{
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/building.dds"
									blend_mode = alphamultiply
								}
							}
						}
						icon_button_square = {
							size = { 40 40 }
							position = { -3 46 }
							parentanchor = right|top
							#enabled = "[ProvinceWindow.IsPlayerProvince]"
							tooltip = "province_building"
							blockoverride "On_click"
							{
								onclick = "[PdxGuiTriggerAllAnimations('province_building')]"
							}
							blockoverride "Icon"
							{
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/building.dds"
									blend_mode = alphamultiply
								}
							}
							blockoverride "Drop_shadow" { visible = no }
							state = {
								name = "province_building"
								on_start = "[PdxGuiWidget.Hide]"
							}
							state = {
								name = "province_building_hide"
								delay = @province_building_time_2
								on_start = "[PdxGuiWidget.Show]"
							}
						}
						icon_button_square = {
							size = { 40 40 }
							position = { -3 46 }
							parentanchor = right|top
							#enabled = "[ProvinceWindow.IsPlayerProvince]"
							visible = no
							tooltip = "province_building"
							blockoverride "On_click"
							{
								onclick = "[PdxGuiTriggerAllAnimations('province_building_hide')]"
							}
							blockoverride "Icon"
							{
								size = { 30 30 }
								using = white_background
								modify_texture = {
									texture = "gfx/interface/icons/new_icons/alpha/building.dds"
									blend_mode = alphamultiply
								}
							}
							blockoverride "Drop_shadow" { visible = no }
							state = {
								name = "province_building"
								delay = @province_building_time_2
								on_start = "[PdxGuiWidget.Show]"
							}
							state = {
								name = "province_building_hide"
								on_start = "[PdxGuiWidget.Hide]"
							}
						}
					}
				}
			}
			hbox = {
				name = "third_row"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				margin_top = 8
				vbox = {
					name = "summary_details"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					layoutstretchfactor_horizontal = 4
					margin_left = 5
					sub_header_v = {   
						
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						size = { 0 40 }
						blockoverride "Title_text" 
						{
							text = "SUMMARY"
							margin_left = @window_margin_left_title
						}
						
						blockoverride "Max_text_width"
						{
							max_width = 208
						}
						vbox = {
							name = "statistics"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_top = 30
							margin_widget = {
								name = "numbers"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin = { 12 6  }
								
								flowcontainer = {
									spacing = 2
									icon_and_text = {
										name = "city_food_income"
										size = { @stats_icon_width 0 }
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/food.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetFoodIncome|2]"
										}
										tooltip = "[ProvinceWindow.GetProvince.GetFoodValueTooltip]"
									}
									
									icon_and_text = {
										size = { @stats_icon_width 0 }
										#position = { 250 -2 }
										tooltip = "[ProvinceWindow.GetProvince.GetIncomeDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/treasury.dds"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetCurrentIncome|2]"
										}
									}
									
									icon_and_text = {
										size = { @stats_icon_width 0 }
										name = "city_manpower_income"
										tooltip = "[ProvinceWindow.GetProvince.GetCurrentManpowerIncomeDescription]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/manpower.dds"
										}
										blockoverride "Text"
										{ 
											text = "[GetManpowerDisplay(ProvinceWindow.GetProvince.GetCurrentManpowerIncome)]"
										}
									}
								}
								
								flowcontainer = {
									spacing = 2
									position = { 0 36 }
									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetCurrentResearchDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/research.dds"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetCurrentResearch|2]"
										}
									}
										
									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyaltyTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_monthly_state_loyalty.dds"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetImpactOnStateLoyalty|=2]"
										}
									}
									
									icon_and_text = {
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetUnrestDescription]"
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/unrest.dds"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetUnrest|2]"
										}
									}
								}
								
								container = {
									using = NoninteractableBG
									position = { -4 74 }
									blockoverride "Margins"
									{
										margin_top = 2
										margin_bottom = 8
										margin_left = 2
										margin_right = 2
									}
									
									overlappingitembox = {
										visible = "[Not(IsDataModelEmpty(ProvinceWindow.GetModifiers))]"
										datamodel = "[ProvinceWindow.GetModifiers]"
										position = { 4 5 }
										size = { 200 36 }
										spacing = 2
										parentanchor = vcenter|left
										widgetanchor = vcenter|left
										righttoleft = yes
										
										item = {
											modifier_icon = {
												size = { 32 32 }
												datacontext = "[TimedModifier.GetModifier]"
												tooltip = "[TimedModifier.GetTooltip]"
											}
										}
									}
									
									textbox = {
										visible = "[IsDataModelEmpty(ProvinceWindow.GetModifiers)]"
										tooltip = NO_CURRENT_MODIFIERS_PROVINCE
										size = { 200 36 }
										position = { 4 0 }
										using = BaseFontS
										using = Black_FontColor
										text = None
										align = center
										alpha = 0.55
									}
								}
								
								icon_card = {
									name = "Trade_Good"
									size = { 100 40 }
									position = { 0 74 }
									parentanchor = right
									tooltip = "[ProvinceWindow.GetProducedTradeGoodsInfo]"
									blockoverride "Icon"
									{
										texture = "[GetTradeGoodsIcon(ProvinceWindow.GetProvince.GetTradeGoods)]"
										parentanchor = left|vcenter 
										position = { 2 0 }
									}
									
									textbox = {
										text = "[ProvinceWindow.GetProvince.GetNumGoodsProduced]"
										autoresize = yes
										align = right
										parentanchor = right
										position = { -10 6 }
										using = BaseFontM
										using = Black_FontColor
									}
								}

								
								flowcontainer = { 
									position = { 0 116 }
									spacing = 8
									ignoreinvisible = yes
									icon_and_text = {
										visible = "[Not( ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated )]"
										size = { 140 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/governor_policies/cultural_assimilation.dds"
											datacontext = "[ProvinceWindow]"
											tooltip = "NON_INTEGRATED_CULTURE_TOOLTIP"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}
									
									icon_and_text = {
										visible = "[ProvinceWindow.GetProvince.GetCountryCulture.IsIntegrated]"
										size = { 140 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/integrated.dds"
											datacontext = "[ProvinceWindow]"
											tooltip = "INTEGRATED_CULTURE_TOOLTIP"
										}
										blockoverride "Text"
										{ 
											text = "[ProvinceWindow.GetProvince.GetCulture.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}

									
									
									icon_and_text = {
										size = { 140 0 }
										tooltip_verticalbehavior = flip
										blockoverride "Icon"
										{
										}
										religion = {
											position = { 0 0 }
											blockoverride "size" { size = { 32 32 } }
											blockoverride "datacontext" { datacontext = "[ProvinceWindow.GetProvince.GetReligion]" }
											parentanchor = left
											tooltip_verticalbehavior = flip
											tooltip = "[ProvinceWindow.GetProvince.GetReligion.GetTooltip]"
										}
										blockoverride "Text"
										{ 

											text = "[ProvinceWindow.GetProvince.GetReligion.GetName]"
											using = BaseFontS
											using = Black_FontColor
										}
									}
								}
								
								flowcontainer = {
									position = { 0 152 }
									spacing = 8
									icon_and_text = {
										name = "province_output"
										size = { 140 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetModifierTooltip('local_output_modifier')]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_output_modifier.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetModifierValue('local_output_modifier')]"
										}
									}
									icon_and_text = {
										size = { 140 0 }
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/new_icons/color/shipping.dds"
										}
										blockoverride "Text"
										{
											text = "[GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).ScriptValue('SHIPPING_province_power')|0]"
										}
										tooltip = "PROVINCE_SHIPPING_BONUS_TT"
									}
								}
								flowcontainer = {
									position = { 18 210 }
									widget = {
										size = { 20 0 }
									}
									fixed_size_progressbar = {
										size = { 250 10 }
										progressbar = {
											size = { 100% 100% }
											value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetLocalCivilizationCap )]"
											marker = {
												container = {
													name = "progress_marker_2"     
													tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
													widget = {
														size = { 24 48 }
														icon = {
															using = black_background
															size = { 3 10 }	
														}
													}
												}
											}
										}
										blockoverride "Value" { 
											value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetCivilizationValue )]" 
										}
										tooltip = "[ProvinceWindow.GetProvince.GetCivilizationTooltip]"
										using = tooltip_above
										parentanchor = right
										blockoverride "ProgressAlpha" { alpha = 0.6 }
									}								
								}
							}
						}
					}
				}
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					
					ignoreinvisible = yes
					
					hbox = {
						layoutpolicy_vertical = fixed
						layoutpolicy_horizontal = expanding
						margin_top = 0 #Dirty Hax
						widget = {
							layoutpolicy_vertical = fixed
							layoutpolicy_horizontal = expanding 
							size = { 452 34 }
							hbox = { 
								layoutpolicy_vertical = preferred
								layoutpolicy_horizontal = expanding
								margin_left = 2
								spacing = 2
								visible = "[Not( Or( ProvinceWindow.GetProvince.HasGreatWork, ProvinceWindow.GetProvince.HasSecondaryGreatWork ) )]"
								@mincategorybuttonwidth = 220
								@maxcategorybuttonwidth = 220
								@mincategorybuttonheight = 28 
								@maxcategorybuttonheight = 34
								#widget = {
								#	size = { 0 35 } #Don't Ask
								#}
								state = {
									name = _show
									on_start = "[GetVariableSystem.Set('province_tabs', 'pops')]"
								} #This is ugly, but needs to be here to reset tabs after viewing a province with a Great Work (thereby hiding the tab)
								category_tab = {
									name = "pops_tab"
									blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[And( Not( GetVariableSystem.HasValue('province_tabs', 'pops')), GetVariableSystem.Exists('province_tabs'))]" }
									blockoverride "MaxVisible" { visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { text = "[ProvinceWindow.GetProvince.GetPopulation('total')]/[ProvinceWindow.GetProvince.GetPopulationCapacityValue]" }
									blockoverride "Icon" {
										using = white_background
										size = { 30 30 }
										modify_texture = {
											texture = "gfx/interface/icons/new_icons/alpha/state.dds"
											blend_mode = alphamultiply
										}
									}
									tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
									######## Small Button Overrides
									blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('province_tabs', 'pops')]" }
								}
								category_tab = {
									name = "tactical_tab"
									blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'tactical'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon" {
										using = white_background
										size = { 30 30 }
										modify_texture = {
											texture = "gfx/interface/icons/new_icons/alpha/military.dds"
											blend_mode = alphamultiply
										}
									}
									tooltip = "TACTICAL_TAB"
									######## Small Button Overrides
									blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('province_tabs', 'tactical')]" }
								}
								widget = { layoutpolicy_horizontal = expanding }
							}
							icon = {
								icon = {
									position = { 444 33 }
									using = brighten_red_background
									spriteType = Corneredtiled
									size = { 5 2 }
								}
								icon = {
									position = { 2 34 }
									using = brighten_red_background
									spriteType = Corneredtiled
									size = { 2 242 }
								}
							}
							hbox = { 
								layoutpolicy_vertical = preferred
								layoutpolicy_horizontal = expanding
								margin_left = 2
								spacing = 2
								visible = "[Or( ProvinceWindow.GetProvince.HasGreatWork, ProvinceWindow.GetProvince.HasSecondaryGreatWork )]"
								@gwmincategorybuttonwidth = 146
								@gwmaxcategorybuttonwidth = 146
								@gwmincategorybuttonheight = 28 
								@gwmaxcategorybuttonheight = 34
								category_tab = {
									name = "pops_tab2"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[And( Not( GetVariableSystem.HasValue('province_tabs', 'pops')), GetVariableSystem.Exists('province_tabs'))]" }
									blockoverride "MaxVisible" { visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { text = "[ProvinceWindow.GetProvince.GetPopulation('total')]/[ProvinceWindow.GetProvince.GetPopulationCapacityValue]" }
									blockoverride "Icon" {
										using = white_background
										size = { 30 30 }
										modify_texture = {
											texture = "gfx/interface/icons/new_icons/alpha/state.dds"
											blend_mode = alphamultiply
										}
									}
									tooltip = "[ProvinceWindow.GetProvince.GetPopulationCapacityInfo]"
									######## Small Button Overrides
									blockoverride "ClickFunction" { onclick = "[GetVariableSystem.Set('province_tabs', 'pops')]" }
								}   
								category_tab = {
									name = "tactical_tab2"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'tactical'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon" {
										using = white_background
										size = { 30 30 }
										modify_texture = {
											texture = "gfx/interface/icons/new_icons/alpha/military.dds"
											blend_mode = alphamultiply
										}
									}
									tooltip = "TACTICAL_TAB"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'tactical')]"
									}
								} 
								category_tab = {
									name = "GW_tab"
									blockoverride "MinSize" { size = { @gwmincategorybuttonwidth @gwmincategorybuttonheight } }
									blockoverride "MaxSize" { size = { @gwmaxcategorybuttonwidth @gwmaxcategorybuttonheight } }
									blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('province_tabs', 'great_works'))]" }
									blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('province_tabs', 'great_works')]" }
									######## Shared Overrides
									blockoverride "Center_text" { visible = no }
									blockoverride "Center_text_and_icon" { visible = yes }
									blockoverride "Button_text" { visible = no }
									blockoverride "Icon" {
										using = white_background
										size = { 30 30 }
										modify_texture = {
											texture = "gfx/interface/icons/new_icons/alpha/great_work.dds"
											blend_mode = alphamultiply
										}
									}
									tooltip = "GW_TAB"
									######## Small Button Overrides
									blockoverride "ClickFunction"
									{
										onclick = "[GetVariableSystem.Set('province_tabs', 'great_works')]"
									}
								}
								widget = { layoutpolicy_horizontal = expanding }
							}
						}	
						
					}
					vbox = {
						name = "pops_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[Or( GetVariableSystem.HasValue( 'province_tabs', 'pops'), Not( GetVariableSystem.Exists('province_tabs') ) )]"
						state = {
							name = "show_pops_tab"
							
							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab

						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0

							flowcontainer = {
								parentanchor = right
								position = { 0 	10 }
								spacing = 2
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('upper_strata')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/upper_strata_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('upper_strata') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('upper_strata'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/upper_strata.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('upper_strata')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('upper_strata')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('upper_strata'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'upper_strata' )]"
									}
								}
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('middle_strata')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/middle_strata_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('middle_strata') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('middle_strata'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/middle_strata.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('middle_strata')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('middle_strata')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('middle_strata'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'middle_strata' )]"
									}
								}
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('proletariat')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/proletariat_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('proletariat') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('proletariat'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/proletariat.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('proletariat')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('proletariat')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('proletariat'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'proletariat' )]"
									}
								}
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('lower_strata')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/lower_strata_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('lower_strata') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('lower_strata'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/lower_strata.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('lower_strata')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('lower_strata')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('lower_strata'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'lower_strata' )]"
									}	
								} 
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('indentured')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/indentured_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('indentured') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('indentured'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/indentured.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('indentured')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('indentured')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('indentured'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'indentured' )]"
									}	
								} 
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('tribesmen')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/tribesmen_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('tribesmen') )]"
									}
									
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/tribesmen.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('tribesmen')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('tribesmen')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('tribesmen'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'tribesmen' )]"
									}
								}
								pop_widget_province = {
									tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('slaves')]"
									tooltip_widgetanchor = vcenter|left
									blockoverride "BackgroundTexture" { texture = "gfx/interface/icons/pop_types/slaves_bg.dds" }
									blockoverride "HappinessBarValue"
									{
										visible = yes
										value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('slaves') )]"
									}
									blockoverride "Icon"
									{
										enabled = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
										texture = "gfx/interface/icons/pop_types/slaves.dds"
										tooltip = "[ProvinceWindow.GetProvince.GetPopulationTooltip('slaves')]"
									}
									blockoverride "NumPops"
									{
										text = "[ProvinceWindow.GetProvince.GetPopulation('slaves')]"
									}
									blockoverride "MarkerVisible"
									{
										visible = "[GreaterThan_int32( ProvinceWindow.GetProvince.GetPopulation('slaves'), '(int32)0' )]"
									}
									blockoverride "Frame"
									{
										frame = "[ProvinceWindow.GetProvince.GetPopHappyFrame( 'slaves' )]"
									}
								}
							}
							text_button_square_highlighted = {
								size = { 200 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.ShowPopDetails('slaves')]" }
								blockoverride "Center_text" 
								{ 
									text = "POP_SCREEN" 
									max_width = 162
								}
								tooltip = "OPEN_POPS_VIEW_TT"
								parentanchor = bottom|right
								position = { -3 -16 }
							}
							text_button_square_highlighted = {
								size = { 200 0 }
								blockoverride "On_click" { onclick = "[ProvinceWindow.OpenMovePopsWindow]" }
								blockoverride "Center_text" 
								{ 
									text = "MOVE_SLAVES" 
									max_width = 162
								}
								parentanchor = bottom|left
								position = { -3 -16 }
								visible = "[ProvinceWindow.IsPlayerProvince]"
							}
						}
					}
					vbox = {
						name = "tactical_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.HasValue('province_tabs', 'tactical')]"
						state = {
							name = "show_tactical_tab"
							
							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab
						
						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0
							
							flowcontainer = {
								parentanchor = bottom
								position = { 0 -16 }
								spacing = 8
								ignoreinvisible = yes
								icon_button_square = {
									size = { 42 42 }
									
									datacontext = "[GetScriptedGui('mercenary_city_button')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									
									blockoverride "On_click"
									{
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										tooltip = "MERC_CITY_BUTTON"
									}
									
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
								}
								icon_button_square = {
									size = { 42 42 }
									
									datacontext = "[GetScriptedGui('league_city_button')]"
									visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
									
									blockoverride "On_click"
									{
										enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( ProvinceWindow.GetProvince.MakeScope ).AddScope('player', Player.MakeScope ).End )]"
										tooltip = "LEAGUE_CITY_BUTTON"
									}
									
									blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/create_mercenary_state.dds" }
								}
							}
							margin_widget = {
								size = { 100% 40 }
								position = { 0 -1 }
								hbox = {
									layoutpolicy_horizontal = expanding
									icon_and_text = {
										name = "supply_limit"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetSupplyLimitDescription]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/supply_limit.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetSupplyLimit|2]"
										}
									}
									icon_and_text = {
										name = "barbies"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetBarbarianPowerShortTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/barbarian_power.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetBarbarianPower|2]"
										}
									}
									icon_and_text = {
										name = "garrison"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetGarrisonTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/garrison.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetGarrison]"
										}
									}
									icon_and_text = {
										name = "fort_level"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetFortLevelTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/shared_icons/fort_frames.dds"
											framesize = { 50 50 }
											frame = "[ProvinceWindow.GetProvince.GetFortLevel]" 
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetFortLevel]"
										}
									}
									
								}
							}
							
							margin_widget = {
								size = { 100% 40 }
								position = { 0 40 }
								hbox = {
									layoutpolicy_horizontal = expanding
									widget = {
										size = { @stats_icon_width 0 }
									}
									widget = {
										size = { @stats_icon_width 0 }
									}
									icon_and_text = {
										name = "fort_defense"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetProvince.GetLocalDefensiveTooltip]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/local_defensive.dds"
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetProvince.GetLocalDefensive|+=%]"
											fontsize = 13
											fontsize_min = 12
										}
									}
									icon_and_text = {
										name = "fort_level"
										size = { @stats_icon_width 0 }
										tooltip = "[ProvinceWindow.GetState.GetFortsDesc]"
										blockoverride "Icon"
										{
											texture = "gfx/interface/icons/modifiers/fort_limit.dds"
											framesize = { 50 50 }
											frame = "[ProvinceWindow.GetProvince.GetFortLevel]" 
										}
										blockoverride "Text"
										{
											text = "[ProvinceWindow.GetState.GetFortsCurrent]/[ProvinceWindow.GetState.GetFortsLimit]"
										}
									}
									
								}
							}
							icon_button_square = {
								name = "recruit navies"
								size = { 198 80 }
								position = { -2 -16 }
								parentanchor = right|bottom
								enabled = "[ProvinceWindow.CanBuildShips]"
								visible = "[ProvinceCanHavePort(ProvinceWindow.GetProvince)]"
								blockoverride "On_click" { onclick = "[ProvinceWindow.ShowBuildNavies]" }
								blockoverride "IconSize" { size = { 192 74 } }
								blockoverride "Icon" {
									using = portrait_x32y32bd_alpha
									texture = "gfx/interface/icons/province_window/recruit_navies.dds"
								}
								tooltip = "BUILD_NAVIES_TT"
							}
						}
					}
					vbox = {
						name = "great_works_tab"
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						visible = "[GetVariableSystem.HasValue('province_tabs', 'great_works')]"
						state = {
							name = "show_tactical_tab"
							
							on_start = "[PdxGuiWidget.Show]"
						}
						using = hide_province_tab
						
						margin_widget = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin = { 12 0 }
							margin_bottom = 0
							
							widget = { #reat Wonder under construction
								size = { 100% 100% }
								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[And(ProvinceWindow.HasGreatWork, Not(GreatWork.IsCompleted))]"
								
								container = {
									position = {0 6}

									textbox = {
										autoresize = yes
										using = BaseFontM
  		 								using = Black_FontColor

										text = "[GreatWork.GetName]"
									}
								}

								container = {
									parentanchor = bottom
									position = { 0 -14 }
									fixed_size_progressbar = {
										visible = "[GreatWork.IsMakingProgress]"
										size = { 180 7 }

										blockoverride "Value" { value = "[GreatWork.GetConstructionProgress]" }
										tooltip = "[GreatWork.GetConstructionTooltip]"
									}
									
									fixed_size_progressbar = {
										visible = "[Not(GreatWork.IsMakingProgress)]"
										size = { 180 7 }

										blockoverride "Value" { value = "[GreatWork.GetConstructionProgress]" }
										tooltip = "[GreatWork.GetConstructionTooltip]"
									}
								}
								
								widget = { # Trade Goods
									visible = "[Not(GreatWork.IsAncientWonder)]"
									size = { 80 36 }
									position = { 90 -24 }							
									parentanchor = bottom
									tooltip = "GW_GOODS_REQ_TT"

									flowcontainer = {
										position = { 6 0 }
										spacing = 4

										datamodel = "[ProvinceWindow.GetGreatWorkRequiredTradeGoods]"
										item = {
											icon = {
												size = { 32 32 }

												texture = "[GetTradeGoodsIcon(TradeGoodsGlue.GetTradeGood)]"
													
												tooltip = "[Localize(TradeGoodsGlue.GetTradeGood.GetKey)]"

												icon = {
													parentanchor = bottom|right
													size = { 60% 60% }
													visible = "[GreatWork.IsMissingTradeGoods(TradeGoodsGlue.GetTradeGood)]"
													tooltip = "GW_MISSING_TRADEGOODS_TT"
													texture = "gfx/interface/icons/shared_icons/tick_cross.dds"
													framesize = { 25 25 }
												}
											}
										}
									}
								}
								
								cpt_button = {
									visible = "[Not(GreatWork.IsAncientWonder)]"
									name = "portrait"
									datacontext = "[GreatWork.GetLeader]"
									tooltip = "[GreatWork.GetLeaderTooltip]"
									position = { 0 44 }
									size = { 80 124 }
									#button = {
									#	parentanchor = bottom|right
									#	position = {3 2}
									#	size = { 30 30 }					
									#	
									#	distribute_visual_state = no
									#	tooltip = "Change Leader"
									#
									#	onclick = "[ClickHighlight('btn_great_work_replace_leader')]"
									#	onclick = "[ProvinceWindow.OnClickChangeLeader]"				
									#	texture = "gfx/interface/buttons/button_round_40.dds"
									#	icon = {
									#		texture = "gfx/interface/icons/shared_icons/change.dds"
									#		parentanchor = hcenter|vcenter
									#		size = { 60% 60% }
									#		position = { 0 0 }
									#	}
									#	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
									#	#oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
									#
									#	icon = {
									#		using = highlight_button_circle_45
									#		visible = "[ShouldHighlight('btn_great_work_replace_leader')]"
									#	}
									#}
								}
								
								icon = {
									visible = "[GreatWork.IsAncientWonder]"
									position = { -8 62 }
									size = { 120 120 }
									texture = "gfx/interface/icons/great_work/panel/construct_wonder.dds"
								}

								flowcontainer = { #Workpower
									visible = "[Not(GreatWork.IsAncientWonder)]"
									direction = vertical
									spacing = 8
									parentanchor = right
									position = { -8 34 }
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_freemen }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)0')]" }
									}
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_tribal }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)1')]" }
									}
									icon_and_text = {
										size = { 90 0 }
										blockoverride "Icon" { using = icon_pop_slaves }
										blockoverride "Text" { text = "[GreatWork.GetWorkingPopsByIndex('(int32)2')]" }
									}
								}
								
								flowcontainer = { #Effects
									position = { 94 48 }
									direction = vertical
									spacing = 0
									using = NoninteractableBG
									blockoverride "Margins"
									{
										margin = { 10 10 }
									}
									datamodel = "[GreatWork.GetEffects]"

									item = {
										margin_widget = {
											size = {220 30}					
											
											tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"									
											widget = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												size = { 30 30 }
												parentanchor = vcenter|left

												icon = {
													parentanchor = vcenter|hcenter
													size = { 85% 85% }
													texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

													icon = {
														parentanchor = bottom|right
														size = {60% 60%}
														texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
													}
												}
											}

											icon = {
												visible = "[Not(GreatWorkEffectSelection.IsSet)]"
												size = {30 30}
												parentanchor = vcenter|left
												texture = "gfx/interface/icons/shared_icons/ideas.dds"
											}

											icon_and_text = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												parentanchor = vcenter
												position = { 26 0 }
												size = { 190 40 }
												max_width = 190
												blockoverride "Text"
												{
													text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
												}
												blockoverride "Icon"
												{
													visible = no
												}
											}
										}
									}
								}

								text_button_square_highlighted = { #Update Button						
									parentanchor = bottom|right
									position = { 0 -16 }
									size = { 160 28 }

									visible = "[And(HasDlc('Heirs of Alexander'),Not(GreatWork.IsAncientWonder))]"

									blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
									tooltip = "GW_BUILD_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }

								}
								#icon = {
								#	texture = "gfx/interface/icons/shared_icons/change.dds"
								#	size = { 22 22 }
								#	color = { 0 0 0 1 }
								#	position = { -20 -15 }
								#	parentanchor = bottom|right
								#	visible = "[And(HasDlc('Heirs of Alexander'),Not(GreatWork.IsAncientWonder))]"
								#}
							}
							widget = { #Existing Great Wonder
								size = { 100% 100% }
								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[And(ProvinceWindow.HasGreatWork, GreatWork.IsCompleted)]"

								container = {
									position = {0 6}

									textbox = {
										autoresize = yes
										using = BaseFontM
  		 								using = Black_FontColor

										text = "[GreatWork.GetName]"
									}
								}

								flowcontainer = { # Tier Progress
									position = { 0 -15 }
									parentanchor = bottom|left
									widgetanchor = bottom|left

									tooltip = "[GetGreatWorkPrestigeTooltip(GreatWork.GetPrestige)]"
									
									great_work_tier = {
										size = {1 30 }
										blockoverride "progressbar_size"
										{
											size = { 0 0 }
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_1', GreatWork.GetPrestige)]"
										}
									}
									great_work_tier = {
										size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_2')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_2')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_2', GreatWork.GetPrestige)]"
										}
									}
									great_work_tier = {
									size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_3')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_3')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_3', GreatWork.GetPrestige)]"					
										}
									}
									great_work_tier = {
									size = { 70 30}
										blockoverride "tier_text"
										{
											text = "[GetGreatWorkEffectTierName('gw_effect_tier_4')]"
										}
										blockoverride "tier_tooltip"
										{
											tooltip = "[GetGreatWorkEffectTierTooltip('gw_effect_tier_4')]"
										}
										blockoverride "progressbar_value"
										{
											value = "[GetGreatWorkEffectPrestigeTierProgess('gw_effect_tier_4', GreatWork.GetPrestige)]"
										}
									}
								}

								flowcontainer = {
									parentanchor = top|left
									widgetanchor = top|left
									position = {-5 44 }
									spacing = 10
									widget = { #Image							
										size = { 130 130 }

										icon = {
											parentanchor = vcenter|hcenter
											size = {100% 100%}
											position = {0 -10}
											texture = "[GetGreatWorkImage(ProvinceWindow.GetSelectedGreatWork)]"					

											modify_texture = {
												name = "Alpha"
												texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
												blend_mode = alphamultiply
												spriteType = Corneredtiled
												spriteborder = { 60 60 }
											}
										}

									}

									flowcontainer = { #Effects									
									direction = vertical
									spacing = 0
									using = NoninteractableBG
									blockoverride "Margins"
									{
										margin = { 10 10 }
									}
									datamodel = "[GreatWork.GetEffects]"

									item = {
										margin_widget = {
											size = {220 30}					
											
											tooltip = "[GetGreatWorkEffectTooltip(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier, ProvinceWindow.GetProvince)]"									
											widget = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												size = { 30 30 }
												parentanchor = vcenter|left

												icon = {
													parentanchor = vcenter|hcenter
													size = { 85% 85% }
													texture = "[GetGreatWorkEffectIcon(GreatWorkEffectSelection.GetEffect)]"

													icon = {
														parentanchor = bottom|right
														size = {60% 60%}
														texture = "[GetGreatWorkEffectTierIcon(GreatWorkEffectSelection.GetEffectTier)]"
													}
												}
											}

											icon = {
												visible = "[Not(GreatWorkEffectSelection.IsSet)]"
												size = {30 30}
												parentanchor = vcenter|left
												texture = "gfx/interface/icons/shared_icons/ideas.dds"
											}

											icon_and_text = {
												visible = "[GreatWorkEffectSelection.IsSet]"
												parentanchor = vcenter
												position = { 26 0 }
												size = { 190 40 }
												max_width = 190
												blockoverride "Text"
												{
													text = "[GetGreatWorkEffectName(GreatWorkEffectSelection.GetEffect, GreatWorkEffectSelection.GetEffectTier)]"
												}
												blockoverride "Icon"
												{
													visible = no
												}
											}
										}
									}
								}

									#CF Can we do vertical prestige bar?
								}

								text_button_square = { #Update Button
									parentanchor = bottom|right
									widgetanchor = bottom|right
									position = {-5 -12}
									size = { 160 28 }			
						
									visible = "[And( And(HasDlc('Heirs of Alexander'),Not(GreatWork.IsAncientWonder)), ProvinceWindow.IsPlayerProvince )]"
									
									blockoverride "Center_text" { text = "GW_EDIT_BUTTON" }
									tooltip = "GW_BUILD_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.OpenGreatWorkWindowEdit]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/GreatWork/sfx_ui_great_work_open_panel" }
								}

								text_button_square = { #remove Ancient Wonder
									parentanchor = bottom|right
									widgetanchor = bottom|right
									position = {-5 -12}
									size = { 160 28 }
									
									visible = "[And( GreatWork.IsAncientWonder, ProvinceWindow.IsPlayerProvince )]"

									blockoverride "Center_text" { text = "CANCEL_OR_DESTROY_GW_ADJECTIVE_DESTROY" }
									tooltip = "CANCEL_OR_DESTROY_GW_BUTTON_DESTROY_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.DestroyGreatWork]" }
									blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Province/sfx_ui_province_destroy_building" }
								}
							}
							
							container = {
								parentanchor = top|right
								position = {-8 8}

								datacontext = "[ProvinceWindow.GetSelectedGreatWork]"
								visible = "[ProvinceWindow.GetProvince.HasMultipleGreatWorks]"
								icon_button_square = {  #Change GW Left
									size = { 34 34 }
									
									blockoverride "Icon" { 
										texture = "gfx/interface/buttons/arrow_left.dds"
										size = { 30 30 }
									}

									tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkLeft]" }
								}
								icon_button_square = {  #Change GW Left
									size = { 34 34 }
									position = {40 0}
									blockoverride "Icon" { 
										texture = "gfx/interface/buttons/arrow_right.dds"
										size = { 30 30 }
									}

									tooltip = "GW_CYCLE_BUTTON_TOOLTIP"
									blockoverride "On_click" { onclick = "[ProvinceWindow.CycleGreatWorkRight]" }
								}
							}
						}
					}
				}
			}
		}
		icon = { 
			size = { 50 50 }
			texture = "gfx/interface/icons/new_icons/color/industrialisation.dds"
			position = { 5 430 }
			tooltip = "[ProvinceWindow.GetProvince.GetLocalCivilizationCapTooltip]"
		}
	}
	base_sub_window = { #building
		name = "building"
		visible = no
		state = {
			name = "province_building"
			duration = @province_building_time_2
			size = { 432 @province_height_large }
			position = { 766 0 }
			on_start = "[PdxGuiWidget.Show]"
		}
		state = {
			name = "province_building_hide"
			duration = @province_building_time_2
			size = { 60 @province_height_large }
			position = { 759 0 }
			next = province_building_full_hide
		}
		state = {
			name = "province_building_full_hide"
			on_start = "[PdxGuiWidget.Hide]"
		}
		size = { 432 @province_height_large } 
		position = { 766 0 }
		parentanchor = bottom
		movable = no
		blockoverride "secondary_header_visible" { visible = no }
		secondary_header = {  
			position = { 0 4 }
			blockoverride "Title_text"
			{
				text = "province_buildings"
				tooltip = "province_buildings_tt"
				margin_left = @window_margin_left_title
			}
			blockoverride "White_buttons"
			{
				button_close = { 
					visible = yes
					onclick = "[PdxGuiTriggerAllAnimations('province_building_hide')]"
					tooltip = "CLOSE"
				}
			}
			visible = no
			state = {
				name = "province_building"
				delay = @province_building_time_1
				on_start = "[PdxGuiWidget.Show]"
			}
			state = {
				name = "province_building_hide"
				delay = @province_building_time_1
				on_start = "[PdxGuiWidget.Hide]"
			}
		}
		flowcontainer = {
			direction = vertical
			ignoreinvisible = yes
			margin = { 10 40 }
			visible = no
			state = {
				name = "province_building"
				delay = @province_building_time_1
				duration = @province_building_time_1
				on_start = "[PdxGuiWidget.Show]"
			}
			state = {
				name = "province_building_hide"
				duration = @province_building_time_2
				on_start = "[PdxGuiWidget.Hide]"
			}
			#icon = {
			#	size = { 50 50 }
			#	using = red_background
			#	tooltipwidget = culture_decision_item_tooltip
			#}
			building_box = {
				blockoverride "PortItems" {
					build_item_port = { }
					build_item_river_port = { }
				}
				blockoverride "EducationItems" {
					build_item_school = { }
					build_item_university = { }
				}
				blockoverride "IndustrialItems" {
					build_item_industrial_estate = { }
					build_item_resource_gathering_operation = { }
				}
				blockoverride "InfrastructureItems" {
					build_item_sewer_infrastructure = { }
					build_item_hospital = { }
					build_item_canal = { }
					build_item_railway_upgrade = { }
					build_item_depot = { }
				}
				blockoverride "MilitaryItems" {
					build_item_fortress_building = { }
					build_item_arsenal_building = { }
				}
				blockoverride "UrbanDistrictsItems" {
					build_item_commerce_district = { }
					build_item_administration_district = { }
					build_item_residential_district = { }
					build_item_cultural_district = { }
				}
			}
			margin_widget = {
				size = { 100% 80 }
				margin_top = 12
				margin_right = 22
				scrollarea = {
					size = { 250 38 }
					scrollbarpolicy_horizontal = always_off
					parentanchor = top
					scissor = yes
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
					using = VerticalScrollAreaCutOff
					scrollwidget = {
						overlappingitembox = {
							name = "queued_buildings_grid"
							size = { 100% 100% }
							datamodel = "[ProvinceWindow.GetQueuedBuildings]"
							
							item = {
								button = {
									gfxtype = togglepushbuttongfx
									size = { 38 38 }
									onrightclick = "[BuildingItem.Cancel]"
									onclick = "[BuildingItem.Cancel]"
									background = {
										shaderfile = "gfx/FX/pdxgui_default.shader"
										using = flat_background_white
										using = portrait_x32y32bd_alpha
									}
									icon = {
										size = { 32 32 }
										parentanchor = center|center
										texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
										using = portrait_x32y32bd_alpha
									}
									tooltip = "CANCEL_BUILDING_HERE"
								}
							}
							
						}
					}
				}
				text_button_square_highlighted = {
					visible = "[HasDlc('Heirs of Alexander')]"
					parentanchor = right|bottom
					position = { 0 -36 }
					size = { 148 0 }
					blockoverride "Center_text" { text = "OPEN_GREAT_WORKS" }
					blockoverride "On_click" 
					{
						onclick = "[ProvinceWindow.OpenGreatWorkWindowBuild]" 
						enabled = "[ProvinceWindow.CanBuildGreatWork]"
						tooltip = "[ProvinceWindow.CanBuildGreatWorkTooltip]"
					}
				}
			}
		}
	}
}