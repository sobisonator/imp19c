template default_scrollbar_button
{
	clicksound = ""
}

template standard_window_type
{
	
	background = {
		texture = "gfx/interface/tiles/marble_tile_l.dds"
		spriteType = Corneredtiled
		spriteborder = { 0 0 }
		margin = { -6 -6 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	icon = {
		texture = "gfx/interface/tiles/small_window_frame_corners.dds"
		spriteType = Corneredtiled
		size = { 100% 100% }
		spriteborder = { 32 24 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	icon = {
		texture = "gfx/interface/tiles/small_window_title_header_corners.dds"
		spriteType = Corneredtiled
		shaderfile = "gfx/FX/pdxgui_default.shader"
		
		block "header_size"
		{
			size = { 100% 51 }
			spriteborder = { 16 0 }
		}
		
		icon = {
			name = "header_standard"
			size = { 100% 100% }
			parentanchor = hcenter
			
			heading_text = {
				name = ""
				position = { 0 10 }
				parentanchor = top|hcenter
				size = { 0 22 }
				widgetanchor = top|hcenter
				align = center
				using = MarbleButtonFontM
				
				block "header"
				{
					text = ""
				}
			}
		}
	}
}

types Default
{
	type margin_widget = margin_widget {
		using = tooltip_es
	}

	type button = button {
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		using = tooltip_es
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
	}
	
	#A button with "no sound" so the buttongfx can be used for non-button types.
	type no_sound_button = button {
		gfxtype = buttongfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		using = tooltip_es
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_errorhoof"
	}

	type editbox = editbox {
		gfxtype = editboxgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		font = "OpenSans"
		fontsize = 15
		fontcolor = { 1 0 1 1 }# magenta to make people use font templates
		using = tooltip_es
	}
	
	type textbox = textbox {
		gfxtype = textboxgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		font = "OpenSans"
		fontsize = 15
		fontcolor = { 1 0 1 1 }# magenta to make people use font templates
		using = tooltip_es
	
	}
	
	
	type icon = icon {
		gfxtype = icongfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		using = tooltip_es
	
	}
	
	type window = window {
		gfxtype = windowgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
		spriteType = corneredstretched
		spriteborder = { 19 19 }
		using = tooltip_es
	}
	
	type progressbar = progressbar {
		gfxtype = progressbargfx
		shaderfile = "gfx/FX/pdxgui_progressbar.shader"
		using = tooltip_es
	
	}
	
	type checkbutton = checkbutton {
		gfxtype = checkbuttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		using = tooltip_es
		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
	}
	
	type scrollbar = scrollbar {
		min = 0
		max = 100
		step = 1
		page = 10
		value = 0
		alwaystransparent = no
		
		slider = {
			button = {
				using = default_scrollbar_button
				texture = "gfx/interface/scroll_drag.dds"
			}
		}
	}
	
	type scrollarea = scrollarea {
		scissor = yes
		scrollbaralign_vertical = right
		scrollbaralign_horizontal = bottom
		using = tooltip_es
	
	}
	
	#this should be fixed and not done like this
	type container = container {
		ignoreinvisible = no
		using = tooltip_es
	}
	
	#this should be fixed and not done like this
	type flowcontainer = flowcontainer {
		ignoreinvisible = no
		using = tooltip_es
	}
	
	
	
	type webwindow = webwindow {
		gfxtype = webwindowgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	type mini_map = mini_map {
		gfxtype = minimapgfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	type dragdropicon = dragdropicon {
		gfxtype = icongfx
		shaderfile = "gfx/FX/pdxgui_default.shader"
	}
	
	type widget = widget {
		using = tooltip_es
	}
	
	type piechart = piechart {
		using = tooltip_es
	}

}
