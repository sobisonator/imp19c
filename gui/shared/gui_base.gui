### AUDIOGUIDE for Generic UI Buttons

### Default click
# event:/SFX/UI/Generic/sfx_ui_generic_click

### Default Back, Close or Cancel action (like X buttons)
# event:/SFX/UI/Generic/sfx_ui_generic_close

### Default Confirm or Advance Clicks (anything that confirms an action and has a forward effect)
# event:/SFX/UI/Generic/sfx_ui_generic_confirm

### Default click sounds for plus and minus buttons
# event:/SFX/UI/Generic/sfx_ui_generic_increment
# event:/SFX/UI/Generic/sfx_ui_generic_decrement

### Default click sound for something that is not allowed
# event:/SFX/UI/Generic/sfx_ui_generic_error
# Default click sounds for any cog icon that triggers an options menu
# event:/SFX/UI/Generic/sfx_ui_generic_game_options

### Default click sound for stopping or allowing time to play
# event:/SFX/UI/Generic/sfx_ui_generic_game_pause
# event:/SFX/UI/Generic/sfx_ui_generic_game_play

### Default click sounds for plus and minus buttons regarding time
# event:/SFX/UI/Generic/sfx_ui_generic_game_speed_down
# event:/SFX/UI/Generic/sfx_ui_generic_game_speed_up

### Default click sounds for starting a new game after selecting the initial nation
# event:/SFX/UI/Generic/sfx_ui_generic_game_start

### Default click sounds for changing map modes
# event:/SFX/UI/Generic/sfx_ui_generic_map_mode

### Default click sounds for mouse over action (required only when a button is highlighted)
# event:/SFX/UI/Generic/sfx_ui_generic_mouse_over

### Default click sounds for checkboxes or selection of items
# event:/SFX/UI/Generic/sfx_ui_generic_select

### Default click sounds for Tabs and subtabs where Tab is the first row and subtabs are all that follow below in the tree
# event:/SFX/UI/Generic/sfx_ui_generic_tab
# event:/SFX/UI/Generic/sfx_ui_generic_sub_tab


# This is to be used for the smallest buttons like Text Buttons (Y) or CheckBox buttons (X & Y).
######################
# Colors and Defines #
######################
@fade_in_duration = 0.2
@SideBarButtonSize = 36
@SideBarButtonSizeEnlarged = 44
@Minimum_button_size = 28

@Icon_button_size_S = 36

@Icon_button_size_M = 40

layer pause_vignette
{
	priority = 1
}

layer bottom
{
	priority = 5
}

layer middle
{
	priority = 10
}

layer middle_top
{
	priority = 15
}

layer top
{
	priority = 20
}

template temp_icon
{
	texture = "gfx/interface/icons/temp_icon.dds"
}






### TEMPLATES
template progressbar_red_horizontal
{
	progresstexture = "gfx/interface/tiles/progressbar_red_tile_new.dds"
#	noprogresstexture = "gfx/interface/tiles/tile_progress_empty.dds"

	block "L_bar"
	{
		spriteType = Corneredtiled
		spriteborder = { 0 0 }
	}
}
template button_tiled_texture
{
	texture = "gfx/interface/base_parts/button_color_400fs.dds"
	#color = { 1 1 1 1 }
}
template button_tiled_texture_2
{
	texture = "gfx/interface/base_parts/button_color_red_imp19c_darker.dds"
	#color = { 1 1 1 1 }
}
template button_tiled_texture_3
{
	texture = "gfx/interface/base_parts/button_color_red_imp19c.dds"
	#color = { 1 1 1 1 }
}
template flat_background_white
{
	#texture = "gfx/interface/base_parts/background_texture_x60bd.dds"
	texture = "gfx/interface/base_parts/background_texture.dds"
	#color = { 0 0.3 0.05 0.92 }
}

template beige_background
{
	texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
	#color = { 1 1 1 1 }
}

template beige_medium_background
{
	texture = "gfx/interface/base_parts/background_noninteractable_texture_medium.dds"
}

template beige_dark_background
{
	texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
	alpha = 1
}

template positive_color_texture
{
	texture = "gfx/interface/base_parts/button_allframes.dds"
	framesize = { 100 100 }
	frame = 12
}

template negative_color_texture
{
    texture = "gfx/interface/base_parts/button_allframes.dds"
    framesize = { 100 100 }
    frame = 11
}


template selected_color_texture
{
    texture = "gfx/interface/base_parts/button_allframes.dds"
    framesize = { 100 100 }
    frame = 10
}

template flat_background
{
	texture = "gfx/interface/base_parts/background_red.dds"
	color = { 1 1 1 1 }
}

template flat_background_black
{
	texture = "gfx/interface/base_parts/background_black_texture.dds"
	#color = { 0 0.3 0.05 0.85 }
}

template header_l_pattern
{
	texture = "gfx/interface/base_parts/header_l_pattern_x0bd3.dds"
}

template header_l
{
	texture = "gfx/interface/base_parts/header_l_x0bd.dds"
	color = { 1 1 1 0.96 }
}
template header_s_pattern
{
	texture = "gfx/interface/base_parts/header_s_pattern_x104bd_right_cut2.dds"
	#color = { 1 1 1 0.96 }
	#color = { 0.65 0.65 1 1 }
	#alpha = 0.8
}
template header_s
{
	texture = "gfx/interface/base_parts/header_l_x0bd.dds"
	color = { 1 1 1 0.66 }
	#texture = "gfx/interface/base_parts/background_black_texture.dds"
	#alpha = 0.85
	#color = { 0 0.3 0.05 0.85 }
}

template header_secondary_pattern
{
	#texture = "gfx/interface/base_parts/header_s_pattern_no_lines_x104bd_right_cut.dds"
	texture = "gfx/interface/base_parts/header_s_pattern_x104bd_right_cut2.dds"
}

template scroll_area_icon_t
{
	texture = "gfx/interface/base_parts/scroll_area_x16y10bd.dds"
	#color = { 0 0 0.1 1 }
}

## Fonts

# Dark Font

template FontSizeXS
{
	fontsize = 13
}

template FontSizeS
{
	fontsize = 16
}

template FontSizeM
{
	fontsize = 17
}

template FontSizeL
{
	fontsize = 23
}

template BaseFontXS
{
	using = FontSizeXS
	font = BaseFont
	fontcolor = { 0.86 0.86 0.86 1 }
}

template BaseFontS
{
	using = FontSizeS
	font = BaseFont
	fontcolor = { 0.86 0.86 0.86 1 }
}

template BaseFontM
{
	using = FontSizeM
	font = BaseFont
	fontcolor = { 1 1 1 1 }
}

template BaseFontL
{
	using = FontSizeL
	font = BaseFont
	fontcolor = { 1 1 1 1 }
}

template HeaderFont 
{
	fontsize = 22
	font = HeaderFont
}

template SubHeaderFont
{
	fontsize = 18
	font = HeaderFont
}

template TooltipConceptFont
{
	fontsize = 18
	font = BaseFont
	fontcolor = { 0.5 0.5 0.5 1 }
}


# Font Colors

template Highlight_FontColor
{
	#fontcolor = { 0.953 0.675 0.278 1 }
	fontcolor = { 0.95  0.8  0.44 1 }
}

template Negative_FontColor
{
	fontcolor = { 0.686 0.09 0.09 1 } #### BRIGHTER RED fontcolor = { 0.486 0.09 0.09 1 }
}

template Positive_FontColor
{
	fontcolor = { 0.361 0.635 0.118 1 }
}

template Disabled_FontColor
{
	fontcolor = { 0.698 0.608 0.753 1 }
}

template Neutral_FontColor
{
	fontcolor = { 0.45459 0.659 0.839 1 }
}

template Blue_FontColor
{
	fontcolor = { 0.96 0.96 0.96 1 } #### BRIGHTER BLUE fontcolor = { 0 0.474 0.549 1 }
}

template Black_FontColor
{
	fontcolor = { 0.96 0.96 0.96 1 }
}

template Button_FontColor
{
	fontcolor = { 0.96 0.96 0.96 1 }
}

template Sub_Header_FontColor
{
	fontcolor = { 0.95  0.8  0.44 1 } #### MAKES HEADINGS YELLOW fontcolor = { 0.94 0.94 0.92 1 }
}

template Teal_FontColor
{
	fontcolor = { 0.96 0.96 0.96 1 }
}

template Placeholder_FontColor
{
	fontcolor = { 1 0 1 1 }
}

template White_FontColor
{
	fontcolor = { 0.96 0.96 0.96 1 }
}




## Shared icons used in many different locations

## Top Bar Button Spacing (Change X value)

## Click Through Blocker

## Progress Bars

## Backgrounds

# Message Background

# For Event Window

# Large Window Frame

# Small Window Frame

# Small Window Frame with Pillars (No Background)

# Checkbox Button
# Checkbox Button

# Tooltip Background

## Scroll Bar

# Event Button


template VerticalScrollAreaCutOff
{
	background = {
		using = scroll_area_icon_t
		shaderfile = "gfx/FX/pdxgui_default.shader"
		spriteborder = { 110 5 }
		spriteType = Corneredtiled
		margin_top = 4
		margin_bottom = 3
	}
}



template VerticalScrollBar
{
	scrollbar = {
		size = { 10 10 }
		wheelstep = 30
		direction = vertical
		
		track = {
			button = {
				gfxtype = buttongfx
				spriteborder = { 10 10 }
				spriteType = Corneredtiled
				effectname = "NoHighlight"
				texture = "gfx/interface/base_parts/scroll_bar_vertical_line_y20bd.dds"
			}
		}
		
		slider = {
			
			button = {
				size = { 10 40 }
				gfxtype = buttongfx
				effectname = "NoHighlight"
			
				background = {
					texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = corneredtiled
					spriteborder = { 6 6 }
					margin_left = 4
					margin_bottom = 4
					alpha = 0.5
				}
				
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = flat_background_white
					spriteType = Corneredtiled
				}
				
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					texture = "gfx/interface/base_parts/background_black_texture.dds"
					spriteType = Corneredtiled
					block "BlackVisible" { visible = no }
				}
				
				button = {		
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					alwaystransparent = yes
					size = { 10 40 }
		
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					block "On_click_slider" { }
					
					# ToDo: Add Sound. //generic click
					clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 6 6 }
					}
				}
			}					
		}
		
		dec_button = {
			button = {
				block "ScrollBar_offset"
				{				
					size = { 2 2 }
				}
			}
		}
		
		inc_button = {
			button = {
				block "ScrollBar_offset"
				{
					size = { 3 3 }
				}
			}
		}
	}
}


template NoninteractableBG
{
	background = {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
		spriteType = Corneredtiled
		block "BackAlpha" { alpha = 0.5 }
		
		block "Margins"
		{
			margin = { 10 10 }
			margin_top = 6
		}
		
		block "EdgeAlpha"
		{
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
	}
}
template NoninteractableBGWhite
{
	background = {
		name = "bg"
		texture = "gfx/interface/base_parts/white_bg_square_texture.dds"
		spriteType = Corneredtiled
		spriteborder = { 430 430 }
		shaderfile = "gfx/FX/pdxgui_default.shader"
		
		block "Margins"
		{
			margin = { 20 -10 }
		}
	}
}


# Background box
template Background_Area
{
    texture = "gfx/interface/base_parts/background_black_texture.dds"
    spriteType = Corneredtiled
    spriteborder = { 20 20 }
    color = { 0 0 0 0.2 }
    texture_density = 2
	shaderfile = "gfx/FX/pdxgui_default.shader"

}

template OpaqueNoninteractableBG
{
	background = {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
		spriteType = Corneredtiled
		alpha = 1
		
		block "Margins"
		{
			margin = { 10 10 }
			margin_top = 6
		}
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 60 60 }
		}
	}
}

template OpaqueNoninteractableBGDark
{
	background = {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
		spriteType = Corneredtiled
		alpha = 1
		
		block "Margins"
		{
			margin = { 10 10 }
			margin_top = 6
		}
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 60 60 }
		}
	}
}

template NoninteractableBGDark
{
	background = {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
		spriteType = Corneredtiled
		alpha = 0.5
		
		block "Margins"
		{
			margin = { 10 10 }
			margin_top = 6
		}
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 60 60 }
		}
	}
}

template ButtonBorderTear
{
	modify_texture = {
		name = "Trash"
		texture = "gfx/interface/base_parts/demanded_filth.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		alpha = 0.4
	}
}

template ButtonBorderDamage
{
	modify_texture = {
		name = "Decay"
		texture = "gfx/interface/base_parts/demanded_rot.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
	}
}


#### TYPES ####

types Base_GUI_Types
{
	# Basic Window Background
	type base_window = window {
		block "Layer" { layer = middle_top }
		# Size needed
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 3
			margin_bottom = 2
			block "DropShadowAlpha" { alpha = 0.5 }
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = no
			}			
		}
		
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
			block "WindowAlpha" { alpha = 0.95 }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = beige_background
			spriteType = Corneredtiled
			alpha = 0.1
			size = { 100% 100% }
			modify_texture = {
				texture = "gfx/interface/base_parts/background_pattern.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			modify_texture = {
				texture = "gfx/interface/base_parts/demanded_filth.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			name = "background_gradient"
			#shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			size = { 100% 200 }
			block "GradientAlpha" { alpha = 0.55 }
			block "BackgroundGradient" { visible = yes }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/gradient_black.dds"
				blend_mode = alphamultiply
				#spriteType = Corneredtiled
				#spriteborder = { 0 120 }
			}
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		
	}
	
	# Basic Window Background
	type base_window_black = window {
		layer = middle_top
		# Size needed
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			#texture = "gfx/interface/base_parts/background_black.dds"
			spriteType = Corneredtiled
			block "WindowAlpha" { alpha = 0.95 }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha4.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
	}

	# Message Window Background 
	type message_window = window {
		using = FadeStates
		# Size needed
		layer = middle_top
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "gfx/interface/base_parts/message_background_texture.dds"
			spriteType = Corneredtiled
			color = { 0.486  0.09  0.09 1 }
			alpha = 0.9
			margin_right = 22
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/message_background_x60y60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 30 30 }
			}
		}
		
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			#using = flat_background_white
			texture = "gfx/interface/base_parts/message_background_texture.dds"
			spriteType = Corneredtiled
			alpha = 0.95
			margin_top = -24
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		
		widget = {
			position = { 0 -2 }
			size = { 100% 32 }
			
			hbox = {
				ignoreinvisible = yes
				widget = {
					name = "left side pattern"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
				
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						spriteType = Corneredtiled
						spriteborder = { 0 32 }
						using = header_secondary_pattern

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/message_background_x60y60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 30 30 }
						}
					}
				}

				container = {
						layoutpolicy_vertical = fixed
						layoutpolicy_horizontal = fixed					
					
					textbox = {
						name = "Title" 
						position = { 0 -4 }
						autoresize = yes
						align = center
						using = HeaderFont
						using = Highlight_FontColor
						
						block "Title_text" {
							text = "ToDo"
						}
					}
				}				
				
				widget = {
					name = "right side pattern"
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
				
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						margin_right = 22
						margin_left = -8
						spriteType = Corneredtiled
						spriteborder = { 0 32 }
						using = header_secondary_pattern

						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/message_background_x60y60bd_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 30 30 }
						}		
						
						modify_texture = {
							name = "Alpha"
							texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 30 30 }
						}
					}		
	
				}
				container = {
					block "White_buttons" {
						visible = no 
					}
				}
			}
		}
	}
	
	type base_sub_window = window {
		using = FadeStates
		# Size needed
		layer = middle_top
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "gfx/interface/base_parts/message_background_texture.dds"
			spriteType = Corneredtiled
			color = { 0.486  0.09  0.09 1 }
			alpha = 0.9
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			name = "background_gradient"
			#shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			block "GradientAlpha" { alpha = 0.45 }
			size = { 100% 200 }
			block "BackgroundGradient" { visible = yes }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/gradient_black.dds"
				blend_mode = alphamultiply
				#spriteType = Corneredtiled
				#spriteborder = { 0 120 }
			}
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		#secondary_header = {
		#	size = { 100% 0 }
		#	position = { 0 0 }
		#	background = {
		#		shaderfile = "gfx/FX/pdxgui_default.shader"
		#		texture = "gfx/interface/base_parts/message_background_texture.dds"
		#		spriteType = Corneredtiled
		#		color = { 0.486  0.09  0.09 1 }
		#		alpha = 0.9
		#		margin = { -2 -3 }
		#	}
		#}
		secondary_header = {
			size = { 100% 0 }
			position = { 0 0 }	
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
			alpha = 1
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
	}

	####################
	### HEADERS 
	####################

	# Main Header for Windows
	type top_window_header = widget {
		position = { 0 8 }
		size = { 100% 40 }
		
		hbox = {
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = header_l

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 0 }
				}			
			}
			
			widget = {
				name = "Spacing_Widget_1"
				size = { 12 12 }
			}		
			
			textbox = {
				name = "Title" 
				autoresize = yes
				using = HeaderFont
				using = Highlight_FontColor
				layoutpolicy_vertical = fixed
				margin_bottom = 4
		
				block "Title_text"
				{
					text = "Test Title"		
				}
					
				block "Max_text_width" 
				{
					max_width = 400
				}		

			}
			
			icon = {
				name = "Ornament"
				using = header_l_pattern

				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
			
			hbox = {
				name = "Buttons"
				spacing = 4
				
				block "White_buttons"
				{
					button_close = { }					
				}
			}
			
			widget = {
				name = "Spacing_Widget_2"
				size = { 14 14 }
			}
		}
		icon = {
			name = "Line"
			position = { 0 40 }
			using = flat_background
			spriteType = Corneredtiled
			size = { 100% 6 }
			block "LineVisibility" {}
			modify_texture = { 
				name = "Alpha"
				texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 10 6 }
			}
		}	
	}

	# Secondary main header (Small windows like minimap and popups)

	type secondary_header = widget {
		# Add a size and position when placing this type. Y size is always 32. 
		minimumsize = { 0 32 }
		hbox = {
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = header_l

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 2 }
				}			
			}
			
			widget = {
				name = "Spacing_Widget_1"
				size = { 8 8 }
			}		
			
			block "AdditionalIcons"
			{
			
			}
			
			widget = {
				size = { 40 32 }
				layoutpolicy_horizontal = fixed
				
				block "Icon_visible"
				{
					visible = no
				}
				
				icon = {
					position = { 0 -4 }
					framesize = { 50 50 }
					size = { 38 38 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
					}
				}			
			}
			
			block "TextTitle"
			{
				textbox = {
					name = "Title" 
					autoresize = yes
					elide = right
					using = SubHeaderFont
					using = Sub_Header_FontColor
					margin_bottom = 4
				
					block "Title_text" 
					{
						text = "Test Title"
					}
					
					block "Max_text_width" 
					{
						# Set this too sub_header Size X - 52.
						# If there is an Icon set this to Size X - 92.
						max_width = 400
					}
				}
			}
			
			widget = {
				name = "Spacing_Widget_2"
				size = { 4 4 }
			}
			
			icon = {
				name = "Ornament"
				using = header_secondary_pattern
				size = { 0 32 }

				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_s_x104bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }		
				}
			}
			
			block "White_buttons" {  }
			
			widget = {
				size = { 8 8 }
			}
			
		}	
	}
	
	# Sub Header
	type sub_header = widget {
		# Add a size and position when placing this type. Y size is always 32. 
		
		hbox = {
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				block "HeaderTexture" { using = header_s }
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_s_x104bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 52 0 }
				}		
			}
			
			widget = {
				name = "Spacing_Widget_1"
				size = { 8 8 }
			}		
			
			block "AdditionalIcons"
			{
			
			}
			
			widget = {
				size = { 40 32 }
				layoutpolicy_horizontal = fixed
				
				block "Icon_visible"
				{
					visible = no
				}
				
				icon = {
					position = { 0 -4 }
					framesize = { 50 50 }
					size = { 38 38 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
					}
				}			
			}
			
			textbox = {
				name = "Title" 
				autoresize = yes
				elide = right
				using = SubHeaderFont
				using = Sub_Header_FontColor
				margin_bottom = 4
			
				block "Title_text" 
				{
					text = "Test Title"
				}
				
				block "Max_text_width" 
				{
					# Set this too sub_header Size X - 52.
					# If there is an Icon set this to Size X - 92.
					max_width = 300
				}
			}
			
			widget = {
				name = "Spacing_Widget_2"
				size = { 4 4 }
			}
			
			icon = {
				name = "Ornament"
				alpha = 0.2
				block "OrnamentTexture" { using = flat_background_white }
				size = { 0 32 }
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled
				
				modify_texture = {
					name = "Alpha"
					using = header_s_pattern
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 0 20 }
					
				}
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_s_x104bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
				}
			}
		}		
	}

	# Sub Header with Right vertical Line
	type sub_header_v = widget {
		# Add a size and position when placing this type.
		
		icon = {
			position = { 1 2 }
			size = { 100% 100% }
			parentanchor = top|right
			widgetanchor = top|right
			using = flat_background_white
			spriteType = Corneredtiled
			alpha = 0.5
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
				blend_mode = alphamultiply
			}
			modify_texture = {
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
			}			
		}
		icon = {
			position = { 1 2 }
			size = { 4 100% }
			parentanchor = top|right
			widgetanchor = top|right
			using = flat_background_black
			spriteType = Corneredtiled
			alpha = 0.7
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/vertical_line_y100bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 0 50 }
			}			
		}
		
		widget = {
			size = { 100% 32 }
			
			hbox = {
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = header_s
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_s_x20bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 52 0 }
					}			
				}
				
				widget = {
					name = "Spacing_Widget_1"
					size = { 4 4 }
				}		
				
				widget = {
					size = { 40 32 }
					layoutpolicy_horizontal = fixed
					
					block "Icon_visible"
					{
						visible = no
					}
					
					icon = {
						parentanchor = vcenter
						framesize = { 50 50 }
						size = { 38 38 }
						
						block "Icon"
						{
							texture = "gfx/interface/icons/shared_icons/leader.dds"
						}
					}			
				}
				
				textbox = {
					name = "Title" 
					autoresize = yes
					elide = right
					using = SubHeaderFont
					using = Sub_Header_FontColor
					margin_bottom = 4
				
					block "Title_text" 
					{
						text = "Test Title"
					}
					
					block "Max_text_width" 
					{
						# Set this too sub_header Size X - 10.
						# If there is an Icon set this to Size X - 50.
						max_width = 300
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 4 4 }
				}
				
				icon = {
					name = "Ornament"
					using = flat_background_white
					size = { 0 32 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					spriteType = Corneredtiled
					alpha = 0.2
					
					modify_texture = {
						name = "Alpha"
						using = header_s_pattern
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 0 20 }
						
					}
				
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_s_x104bd_right_cut_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 40 }
					}
				}
				block "Header_v_buttons" {

				}
			}
		}
	}


	type main_menu_header = widget {
		position = { 0 8 }
		size = { 100% 40 }
		
		hbox = {
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = header_l

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 0 }
				}			
			}		
			
			icon = {
				name = "Ornament"
				using = header_l_pattern

				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
			
		}
		icon = {
			name = "Line"
			position = { 0 40 }
			using = flat_background
			spriteType = Corneredtiled
			size = { 100% 6 }
			block "LineVisibility" {}
			modify_texture = { 
				name = "Alpha"
				texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 10 6 }
			}
		}	
	}


	type menu_header = widget {
		widget = {
			position = { 0 -2 }
			size = { 100% 32 }
			
			hbox = {
				ignoreinvisible = yes
				
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = header_l

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 10 0 }
					}			
				}
				
				icon = {
					name = "Ornament1"
					using = header_l_pattern

					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					spriteType = Corneredtiled
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 40 }
						#size = { 100% 100% }			
					}
				}	

				container = {
						layoutpolicy_vertical = fixed
						layoutpolicy_horizontal = fixed					
					
					textbox = {
						name = "Title" 
						position = { 0 -4 }
						autoresize = yes
						align = center
						using = HeaderFont
						using = Highlight_FontColor
						
						block "Title_text" {
							text = "ToDo"
						}
						max_width = 420
						elide = right
						fontsize_min = 14
					}
				}				
				icon = {
					name = "Ornament2"
					using = header_l_pattern

					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					spriteType = Corneredtiled
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 40 }		
					}
				}		
				block "White_buttons" {  }
			}
			
			icon = {
				name = "Line"
				position = { 0 40 }
				using = flat_background
				spriteType = Corneredtiled
				size = { 100% 6 }
				
				modify_texture = { 
					name = "Alpha"
					texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 6 }
				}
			}	
			
		}
	}
	
	type menu_footer = widget {
		widget = {
			position = { 0 -2 }
			size = { 100% 32 }
			
			hbox = {
				ignoreinvisible = yes
				
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = header_l

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 10 0 }
					}			
				}
				
				icon = {
					name = "Ornament1"
					using = header_l_pattern

					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					spriteType = Corneredtiled
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 40 }		
					}
				}		
			}
			
			icon = {
				name = "Line"
				position = { 0 -6 }
				using = flat_background
				spriteType = Corneredtiled
				size = { 100% 6 }
				
				modify_texture = { 
					name = "Alpha"
					texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 6 }
				}
			}
		}
	}
	#White banner label for dark text
	type flat_banner_white = widget {
		block = "Size" 
		{ 
			size = { 100 28 }
		}
		background = {
			name = "white_background"
			parentanchor = center
			size = { 100% 100% }
			using = flat_background_white
			shaderfile = "gfx/FX/pdxgui_default.shader"
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 36 }
			}
		}

		textbox = {
			name = "text" 
			autoresize = yes
			resizeparent = no
			parentanchor = hcenter
			align = center
			using = HeaderFont
			using = White_FontColor #### using = Black_FontColor
			
			block "Text" {
				text = "ToDo"
			}
		}
	}

	
	type country_flag_reworked = widget {
		
		block "Size"
		{
			size = { 120 120 }
		}
		
		icon = {
			name = "Shadow"
			texture = "gfx/interface/map/flag_shadow.dds"
			
			block "Size"
			{
				size = { 120 120 }
			}
		}
	
		icon = {
			block "Show_as_icon"
			{
				visible = no
			}
			
			block "Flag_contents"
			{
			}
		}
		
		button = {
			inherit_visual_state = no
			distribute_visual_state = no
			
			block "On_click"
			{
			}
			
			block "Show_as_button"
			{
				visible = yes
			}
			block "Flag_contents"
			{
			}
		}
		
		# This is a block to avoid having 2 copies of these elements. (1 for icon flag and 1 for button flag.)
		blockoverride "Flag_contents" {
			block "Size"
			{
				size = { 120 120 }
			}
			
			block "Flag"
			{
				texture = "gfx/interface/debug/placeholder_flag.dds"
				framesize = { 120 120 }
			}
			
			modify_texture = {
				name = "Area"
				texture = "gfx/interface/map/flag_area.dds"
				blend_mode = alphamultiply
			}
			
			modify_texture = {
				name = "Darker"
				texture = "gfx/interface/map/flag_overlay.dds"
				alpha = 0.8
				blend_mode = multiply
			}
			
			modify_texture = {
				name = "Brighter"
				texture = "gfx/interface/map/flag_highlight.dds"
				blend_mode = overlay
			}
		}
		
		block "Hover"
		{
			#onmousehierarchyenter = "[SetHighlightCountry( Country.Self )]"
			
			block "Hover_leave"
			{
				#onmousehierarchyleave = "[ClearHighlightColors]"
			}
		}
	}


	
	# Alert
	type alert = widget {
		size = { 42 92 }
		
		icon = {
			position = { 0 0 }
			size = { 42 100 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			frame = 3
			alpha = 0.2
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}			
		}
		
		icon = {
			name = "ColorThing"
			position = { 0 48 }
			size = { 30 52 }
			parentanchor = hcenter
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_color_alpha.dds"
				blend_mode = alphamultiply
			}			
		}
		button = {
			size = { 42 92 }
			texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
			spriteType = Corneredtiled
			framesize = { 100 100 }
			block "Color" 
			{
				# Frame 7 = Red
				# Frame 5 = Yellow
				# Frame 8 = Green
				frame = 7
			}
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
			
			modify_texture = {
				name = "Trash"
				texture = "gfx/interface/base_parts/demanded_filth.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				alpha = 0.4
			}
			
			block "On_click"
			{ 
			
			}
			
		}
		
		icon = {
			name = "Pattern"
			size = { 42 90 }
			texture = "gfx/interface/base_parts/alert_pattern.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 0 }
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
		}	

		vbox = {
			name = "Gradient_Shadow"
			alpha = 0.19
			
			icon = {
				texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
				spriteType = corneredtiled
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}
			
			icon = {
				texture = "gfx/interface/base_parts/gradient_black_short.dds"
				size = { 42 30 }	# Y Size termines the length of the Gradient.
				spriteType = corneredstretched
				spriteborder = { 0 6 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
			
			widget = {
				size = { 42 60 }	# Y Size termines the length of the bottom area.
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
		}		
		
		icon = {
			position = { 0 -5 }
			parentanchor = vcenter|hcenter
	
			block "Icon" 
			{
				# Override with the relevant Icon for the alert.
				texture = "gfx/interface/icons/temp_icon.dds"

			}
		}
	}

	#type alert = widget {
	#	size = { 54 92 }
		
	#	icon = {
	#		position = { -1 0 }
	#		size = { 56 96 }
	#		using = button_tiled_texture
	#		spriteType = Corneredtiled
	#		spriteborder = { 200 200 }
	#		framesize = { 200 200 }
	#		frame = 3
	#		alpha = 0.2
			
	#		modify_texture = {
	#			name = "Alpha"
	#			texture = "gfx/interface/base_parts/alert/alertA.png"
	#			framesize = { 44 52 }
	#			blend_mode = alphamultiply
	#			block "Color" { frame = 7 }
	#		}			
	#	}
		
	#	icon = {
	#		visible = no
	#		name = "ColorThing"
	#		position = { 0 40 }
	#		size = { 54 52 }
	#		parentanchor = hcenter
	#		using = button_tiled_texture
	#		spriteType = Corneredtiled
	#		spriteborder = { 200 200 }
	#		framesize = { 200 200 }
	#		alpha = 0.50
	#		modify_texture = {
	#			name = "Alpha"
	#			texture = "gfx/interface/base_parts/alert/alertA.png"
	#			framesize = { 44 52 }
	#			blend_mode = alphamultiply
	#			block "Color" { frame = 7 }
	#		}			
	#	}
	#	button = {
	#		size = { 54 92 }
	#		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
	#		spriteType = Corneredtiled
	#		framesize = { 100 100 }
	#		block "Color" 
	#		{
	#			# Frame 7 = Red
	#			# Frame 5 = Yellow
	#			# Frame 8 = Green
	#			frame = 7
	#		}
			
	#		modify_texture = {
	#			name = "Alpha"
	#			texture = "gfx/interface/base_parts/alert/alertA.png"
	#			framesize = { 44 52 }
	#			blend_mode = alphamultiply
	#			block "Color" { frame = 7 }
	#		}
			
	#		modify_texture = {
	#			name = "Trash"
	#			texture = "gfx/interface/base_parts/demanded_filth.dds"
	#			blend_mode = alphamultiply
	#			spriteType = Corneredtiled
	#			alpha = 0.4
	#		}
	#		modify_texture = {
	#			texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
	#			blend_mode = alphamultiply
	#			spriteType = Corneredtiled
	#			spriteborder = { 4 4 }
	#		}
	#		block "On_click"
	#		{ 
			
	#		}
			
	#	}
		
	#	icon = {
	#		name = "Pattern"
	#		size = { 54 90 }
	#		texture = "gfx/interface/base_parts/alert_pattern.dds"
	#		spriteType = Corneredtiled
	#		spriteborder = { 12 0 }
			
	#		modify_texture = {
	#			name = "Alpha"
	#			texture = "gfx/interface/base_parts/alert/alertA.png"
	#			framesize = { 44 52 }
	#			blend_mode = alphamultiply
	#			block "Color" { frame = 7 }
	#		}
	#	}	

	#	vbox = {
	#		name = "Gradient_Shadow"
	#		alpha = 0.12
			
	#		icon = {
	#			texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
	#			spriteType = corneredtiled
	#			layoutpolicy_horizontal = expanding
	#			layoutpolicy_vertical = expanding
	#		}
			
	#		icon = {
	#			texture = "gfx/interface/base_parts/gradient_black_short.dds"
	#			size = { 54 30 }	# Y Size termines the length of the Gradient.
	#			spriteType = corneredstretched
	#			spriteborder = { 0 6 }
	#			layoutpolicy_horizontal = expanding
	#			layoutpolicy_vertical = fixed
	#		}
			
	#		widget = {
	#			size = { 54 60 }	# Y Size termines the length of the bottom area.
	#			layoutpolicy_horizontal = expanding
	#			layoutpolicy_vertical = fixed
	#		}
	#	}		
		
	#	icon = {
	#		position = { 0 -10 }
	#		parentanchor = vcenter|hcenter
	
	#		block "Icon" 
	#		{
	#			# Override with the relevant Icon for the alert.
	#			texture = "gfx/interface/icons/temp_icon.dds"

	#		}
	#	}
	#}

	# Diplomatic Alert
    
	type alert_diplomatic = widget {
		size = { 42 92 }
		
		icon = {
			position = { 0 6 }
			size = { 42 92 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			frame = 2
			alpha = 1
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}           
		}

		button = {
			size = { 42 92 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			gfxtype = framedbuttongfx
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "Alert_click" {}
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
			
			icon = { 
				size = { 42 88 }
				texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
				spriteType = Corneredtiled
				framesize = { 100 100 }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
					blend_mode = alphamultiply
				}
				
				modify_texture = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/diplo_alert_cutoff_alpha.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		icon = {
			name = "Pattern"
			size = { 38 88 } 
			parentanchor = top|hcenter
			widgetanchor = top|hcenter
			texture = "gfx/interface/base_parts/diplo_alert_pattern.dds"
			spriteType = Corneredtiled
			spriteborder = { 12 0 }
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/alert_button_short_alpha.dds"
				blend_mode = alphamultiply
			}
		}   
		vbox = {
			name = "Gradient_Shadow"
			alpha = 0.2
			
			icon = {
				texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
				spriteType = corneredtiled
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
			}
			
			icon = {
				texture = "gfx/interface/base_parts/gradient_black.dds"
				size = { 42 40 }    # Y Size termines the length of the Gradient.
				spriteType = corneredstretched
				spriteborder = { 0 6 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
			
			widget = {
				size = { 42 50 }    # Y Size termines the length of the bottom area.
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
			}
		}       
		
		country_flag_reworked = {
			position = { 0 5 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			
			block "Show_as_button"
			{
				visible = no
			}
			
			block "Show_as_icon"
			{
				visible = yes
			}
			
			blockoverride "Flag"
			{
				block "Flag_data"
				{
					
				}

				framesize = { 56 56 }
			}
			
			blockoverride "Size"
			{
				size = { 36 36 }
			}
		}       
		
		icon = {
			position = { -5 38 }
			size = { 40 40 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			
			block "Icon" 
			{
				# Override with the relevant Icon for the alert.
				texture = "gfx/interface/icons/temp_icon.dds"
			}
		}
	}



	# Icon and Value/Text
	type icon_and_text = widget {
		# Size needed
		minimumsize = { 0 32 }
		icon = {
			position = { 0 @Minimum_button_size }
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			block "LineVisibility"
			{
				
			}
		}
		
		hbox = {
			
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			icon = {
				#position = { 0 0 }
				framesize = { 50 50 }
				size = { 34 34 }
				layoutpolicy_horizontal = fixed
				
				block "Icon"
				{
					texture = "gfx/interface/icons/shared_icons/leader.dds"
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 24 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 1 }
					size = { 100% 24 }					
					align = right|nobaseline
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					fontsize_min = 14
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type icon_and_text_with_change = widget {
		# Size needed
		minimumsize = { 0 32 }
		
		icon = {
			position = { 0 0 }
			size = { 65% 6 }
			parentanchor = bottom
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			block "LineVisibility"
			{
				
			}
		}
		
		hbox = {
			
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			icon = {
				#position = { 0 0 }
				framesize = { 50 50 }
				size = { 34 34 }
				layoutpolicy_horizontal = fixed
				
				block "Icon"
				{
					texture = "gfx/interface/icons/shared_icons/leader.dds"
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 30 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 -1 }
					size = { 100% 24 }					
					align = right|nobaseline
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					fontsize_min = 14
					block "Text"
					{
						
						text = "888.88%"
					}
				}
				
				textbox = {
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					block "Change" { text = "999.99" }
					fontsize = 14
					parentanchor = bottom|right
					align = right|nobaseline
					position = { 1 6 }
					fontcolor = { 0.4 0.4 0.4 1 }
					#using = NoninteractableBG
					#blockoverride "Margins"
					#{
					#	margin = { 8 5 }
					#}
					autoresize = yes
				}
				
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type tag = textbox {
		#Don't use in layoutboxes
		minimumsize = { 0 29 }
		
		icon = {
			position = { 0 0 }
			parentanchor = bottom
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			block "LineVisibility"
			{
				
			}
		}
		
		name = "Text"
		size = { 100% 24 }					
		block "Align"
		{ 
			align = center|nobaseline
		}
		elide = right
		using = BaseFontM
		using = White_FontColor #### using = Black_FontColor
		fontsize_min = 14
		autoresize = yes
	}
	
	# Icon and Value/Text
	type icon_and_text_dark = widget {
		# Size needed
		minimumsize = { 0 32 }
		icon = {
			position = { 0 @Minimum_button_size }
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			color = { 0.5 0.3 0.1 0.6 }
			block "LineVisibility"
			{
				
			}
		}
		
		hbox = {
			
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			icon = {
				#position = { 0 0 }
				framesize = { 50 50 }
				size = { 34 34 }
				layoutpolicy_horizontal = fixed
				
				block "Icon"
				{
					texture = "gfx/interface/icons/shared_icons/leader.dds"
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 24 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 1 }
					size = { 100% 24 }					
					align = right|nobaseline
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					fontsize_min = 14
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type icon_and_text_dark_inverted = widget {
		# Size needed
		minimumsize = { 0 32 }
		icon = {
			position = { 0 @Minimum_button_size }
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			color = { 0.5 0.3 0.1 0.6 }
			block "LineVisibility"
			{
				
			}
		}
		
		hbox = {
			widget = {
				size = { 0 24 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 1 }
					size = { 100% 24 }					
					align = right|nobaseline
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					fontsize_min = 14
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			widget = {
				size = { 8 4 }
				layoutpolicy_horizontal = fixed
			}
			icon = {
				#position = { 0 0 }
				framesize = { 50 50 }
				size = { 36 36 }
				layoutpolicy_horizontal = fixed
				
				block "Icon"
				{
					texture = "gfx/interface/icons/shared_icons/leader.dds"
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type tag_dark = textbox {
		# Size needed
		minimumsize = { 0 32 }

		name = "Text"
		size = { 0 24 }					
		block "Align" { align = center|nobaseline }
		using = BaseFontM
		using = White_FontColor #### using = Black_FontColor
		fontsize_min = 14
		autoresize = yes
		
		icon = {
			position = { 0 0 }
			parentanchor = bottom
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			color = { 0.5 0.3 0.1 0.6 }
			size = { 100% 6 }
			block "LineVisibility"
			{
				
			}
		}
	}
	
	type badge = widget {
		
		icon = {
			size = { 42 42 }
			position = { 0 -9 }
			block "Icon" {}
			
		}
		
		flowcontainer = {
			spacing = 8
			resizeparent = yes
			position = { 0 2 }
			ignoreinvisible = yes
			widget = {
				size = { 32 26 }
				block "IconSpace" {}
			}
			
			textbox = {
				name = "Text"
				size = { 100% 24 }					
				align = center|nobaseline
				elide = right
				using = BaseFontM
				using = White_FontColor #### using = Black_FontColor
				minimumsize = { 24 25 }
				fontsize_min = 14
				autoresize = yes
				block "Text" {}
				margin_right = 12
				margin_left = 10
			}
		}
		
		background = {
			parentanchor = center
			using = flat_background_white
			shaderfile = "gfx/FX/pdxgui_default.shader"
			alpha = 0.65
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/brown_single_backline_sharp_x39bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 20 0 }
			}
			
		}
	}
	
	# Value and price icon with beige underline
	# ALways use this when something has a cost
	type text_and_icon_price = widget {
		# Size needed
		minimumsize = { 0 32 }
		icon = {
			position = { 0 @Minimum_button_size }
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			block "LineVisibility"
			{
				
			}
		}
		
		hbox = {
			
			widget = {
				size = { 0 24 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					text = "[MacroBuilderProvinceBuildable.GetPrice]"
					position = { 0 -3 }
					size = { 100% 24 }					
					align = right
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
	
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}


	# Icon Button
	type icon_button_square = widget {
		size = { @Icon_button_size_M @Icon_button_size_M }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			name = "button teal border"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			
			# ToDo: Add Sound. //?
			#clicksound = ""
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			using = ButtonBorderTear
			
			modify_texture = {
					name = "Decay"
					texture = "gfx/interface/base_parts/demanded_rot.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					alpha = 0.5
			}
			
			icon = {
				widgetanchor = center
				parentanchor = center
				
				block "IconSize" { size = { 38 38 } }
				block "Icon" 
				{
					# Override with the relevant Icon.
					texture = "gfx/interface/icons/temp_icon.dds"
				}	
			}
			
		}
	}
	
	type tab_button_square = widget {
		size = { 38 38 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			name = "button teal border"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			
			# ToDo: Add Sound. //?
			#clicksound = ""
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			using = ButtonBorderTear
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				alpha = 0.5
			}
			
			icon = {
				widgetanchor = center
				parentanchor = center
				
				block "IconSize" { size = { 38 38 } }
				block "Icon" 
				{
					# Override with the relevant Icon.
					texture = "gfx/interface/icons/temp_icon.dds"
				}	
			}
			
		}
	}
	
	type icon_button_province = widget {
		size = { 144 66 }
		tooltip_offset = { -40 0 }
		button = {
			name = "button teal border"
			texture = "gfx/interface/base_parts/button_color_400fs.dds"
			size = { 100% 100% }
			framesize = { 200 200 }
			alpha = 0.95
			# ToDo: Add Sound. //?
			#clicksound = ""
			# oversound = " ToDo "
			inherit_visual_state = yes
			alwaystransparent = no 
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/province_Icon_frame_big.dds"
				blend_mode = alphamultiply
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
			}
			button = {
				widgetanchor = center
				parentanchor = center
				
				block "IconSize" { size = { 48 48 } }
				block "Icon" 
				{
					# Override with the relevant Icon.
					texture = "gfx/interface/icons/temp_icon.dds"
				}	
				block "On_click" { }
				distribute_visual_state = yes
				alwaystransparent = no
			}
			background = {
				name = "Base"
				using = flat_background_white
				framesize = { 200 200 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
				position = { 0 0 }
				alpha = 0.6
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/province_Icon_frame_background.dds"
					blend_mode = alphamultiply
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
				}
			}
		}
	}

	# Flat Icon Button  
	type flat_icon_button_square = widget { 
		size = { @Icon_button_size_S @Icon_button_size_S }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }

			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}
			
			using = ButtonBorderDamage
			
			button = {
				size = { 40 40 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				block "On_click" { }
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4				
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
					
					block "Icon" 
					{
						using = temp_icon
					}					
				}
			}
		}
	}
	
	###### (PREVIOUS VERSION OF PRIMARY BUTTON WITH MANY OVERRIDE OPTIONS)
	type diplomacy_action_button_0 = widget {
		
		block "MinimumSize" { minimumsize = { 0 @Minimum_button_size } }
		
		using = DropShadow
		
		button = {
			name = "Button_Outline"
			using = button_tiled_texture

			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
		
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			
			# ToDo: Add Sound.// primary or increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
			# oversound = " ToDo "

			hbox = {	
				widget = {
					name = "Spacing_Widget_1"
					size = { 2 2 }
				}
				widget = {
					block "Left_size_and_visibility"
					{
						size = { 28 @Minimum_button_size }
						visible = no
					}				
					textbox = {
						name = "LeftValue"
						using = BaseFontS
						using = Button_FontColor
						autoresize = yes
						position = { 0 -2 }
						align = center
						parentanchor = center	
						block "Left_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					} 
				}
				button = {
					alwaystransparent = yes
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					block "ButtonMinSizeOverride" { size = { 100 22 } }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					gfxtype = framedbuttongfx
					framesize = { 200 200 }
					block "Upframe"
					{
						upframe = 1
					}
					overframe = 2
					downframe = 3
					disableframe = 4
					modify_texture = {
						name = "LightenCond"
						using = flat_background_white
						blend_mode = colordodge
						spriteType = Corneredtiled
						spriteborder = { 25 0 } 
						#size = { 100% 100% }		
						alpha = 0
					}
					state = {
						name = "lighten_condition"
						modify_texture = {
							name = LightenCond
							alpha = 0.4
						}
						duration = 0.15
						block "LightenCondition"
						{
						}
					}
					state = {
						name = "darken_condition"
						modify_texture = {
							name = LightenCond
							alpha = 0
						}
						duration = 0.15
						block "DarkenCondition"
						{
						}
					}

					icon = {
						name = "side_pattern"
						texture = "gfx/interface/base_parts/button_pattern.dds"
						spriteType = Corneredtiled
						spriteborder = { 22 0 }
						size = { 100% 100% }
					}
					
					# Button with an Icon on the left and left aligned text after it.
					hbox = {
						name = "Left_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Left_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
	
						container = {
							icon = {
								position = { 0 2 }
								framesize = { 50 50 }
								size = { 34 34 }
								
								block "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/leader.dds"
								}
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 2 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							using = Button_FontColor
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
							align = left
							block "Button_text"
							{
								text = "Button Text"
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text and an icon to the left of the text.
					hbox = {
						name = "Center_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Center_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
	
						icon = {
							framesize = { 50 50 }
							size = { 34 34 }
							
							block "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/leader.dds"
								visible = yes
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							using = Button_FontColor
							autoresize = yes
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
							align = left
							block "Button_text"
							{
								text = "Button Text"
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
					}
	
					# Button with left aligned text.
					hbox = {
						name = "Left_Text"
						widgetanchor = center
						parentanchor = center 
						
						position = { 0 -2 }
						
						block "Left_text"
						{
							visible = no
						}
							
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							using = Button_FontColor
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
							autoresize = yes
							block "Button_text"
							{
								text = "Button Text"
							}
						}
						
						widget = {
							name = "Spacing_Widget_2"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text.
					textbox = {
						name = "Text"
						position = { 0 -2 }
						using = BaseFontS
						using = Button_FontColor
						widgetanchor = center
						parentanchor = center
						align = center
						autoresize = yes
						block "Button_text"
						{
							text = "Button Text"
						}
						
						block "Center_text" 
						{
							visible = no
							
						}
					}
				}
	
				widget = {
					block "Right_size_and_visibility"
					{
						size = { 28 @Minimum_button_size }
						visible = no
					}
					background = {
						texture = "gfx/interface/base_parts/background_texture_x60bd.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
					}
	
					textbox = {
						name = "RightValue"
						using = BaseFontS
						using = Button_FontColor
						autoresize = yes
						position = { 1 -2 }
						align = center
						parentanchor = center	
						
						block "Right_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 1 2 }
				}
			}
		}
	}	

	#### NEW DIPLO BUTTON

	type diplomacy_action_button = button {
		name = "diplomacy_button_type"
		minimumsize = { 0 @Minimum_button_size }
		spriteType = Corneredtiled
		spriteborder = { 200 200 }
		block "On_click" { }
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"	
		background = {
			name = "shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
		}
		background = {
			name = "white_marble"
			using = flat_background_white
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
		}
		background = {
			name = "side_pattern"
			texture = "gfx/interface/base_parts/pattern_brown.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = Corneredtiled
			spriteborder = { 22 0 }
		}		
		hbox = {
			button = {
				using = button_tiled_texture
				size = { 0 @Minimum_button_size }
				gfxtype = framedbuttongfx
				#size = { 100% 100% }
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = fixed
				block "On_click" { }
				widget = {
					name = "decorations"
					size = { 100% 100% }
					background = {
						spriteType = Corneredtiled
						texture = "gfx/interface/base_parts/button_lines_brown.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
						alpha = 0.5
						spriteborder = { 22 0 }
						modify_texture = {
							name = "Decay"
							texture = "gfx/interface/base_parts/button_lines_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							alpha = 0.4
						}					
					}
					background = {
						name = "side_pattern"
						texture = "gfx/interface/base_parts/button_pattern.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
						spriteType = Corneredtiled
						spriteborder = { 22 0 }
					}				
				}
				textbox = {
					name = "Text"
					position = { 4 -1 }
					parentanchor = left|vcenter				
					using = BaseFontS
					using = Button_FontColor
					autoresize = yes
					align = left
					block "Left_text"
					{
						text = "Button Text"
					}
				}				
			}
			widget = {
				block "White_width"
				{
					#The X Size here determines the extent of the white area.
					size = { 80 @Minimum_button_size }
				}
				layoutpolicy_horizontal = fixed
				layoutpolicy_vertical = fixed
				hbox = {
					name = "line_decoration"
					widget = {
						size = { 2 28 }
						layoutpolicy_horizontal = fixed
						layoutpolicy_vertical = fixed
					}
					icon = {
						spriteType = Corneredtiled
						texture = "gfx/interface/base_parts/button_lines_brown.dds"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = fixed
						alpha = 0.9
						modify_texture = {
							texture = "gfx/interface/base_parts/button_lines_alpha.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							alpha = 0.5
						}					
					}					
					widget = {
						size = { 17 28 }
						layoutpolicy_horizontal = fixed
						layoutpolicy_vertical = fixed						
					}
				}
				flowcontainer = {
					direction = horizontal
					parentanchor = center	
					ignoreinvisible = yes	
					textbox = {
						name = "value"
						#parentanchor = left
						using = BaseFontS
						margin_bottom = 4
						using = White_FontColor #### using = Black_FontColor
						autoresize = yes
						align = center
						block "Right_text"
						{
							text = "8888"
						}
					}
					icon = {
						size = { 30 30 }
						block "Icon"
						{
							texture = "gfx/interface/icons/temp_icon.dds"
						}
					}
				}				
			}
		}
	}






	####### PRIMARY BUTTON 

	type text_button_square = widget {
		block "MinimumSize" { minimumsize = { 0 @Minimum_button_size } }
		using = DropShadow
	
		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			#alpha = 0.9
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			block "On_click" { }
			block "Shortcut" { }

			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
			widget = {
				name = "Decorations"
				size = { 100% 100% }
				background = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/button_lines_brown.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					alpha = 0.5
					spriteborder = { 22 0 }

					modify_texture = {
						name = "Decay"
						texture = "gfx/interface/base_parts/button_lines_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						alpha = 0.4
					}					
				}
				background = {
					name = "side_pattern"
					texture = "gfx/interface/base_parts/button_pattern.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = Corneredtiled
					spriteborder = { 22 0 }
				}				
			}
			textbox = {
				name = "Text"
				position = { 0 -1 }
				widgetanchor = center
				parentanchor = center				
				using = BaseFontS
				using = Button_FontColor
				autoresize = yes
				align = center
				block "Center_text"
				{
					text = "Button Text"
				}
			}
		}
	}

	### TAB BUTTON (CLOSED, DEFAULT)
	type tab_button = widget {
		minimumsize = { 0 26 }
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
		}

		icon = {
			name = "LineLeft"
			position = { -2 30 }
			using = beige_medium_background
			spriteType = Corneredtiled
			size = { 2 2 }
		}
		icon = {
			name = "LineCenter"
			position = { 0 30 }
			using = beige_medium_background
			spriteType = Corneredtiled
			size = { 100% 2 }
			modify_texture = {
				name = "portrait_alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 32 32 }
				alpha = 0.5
			}

		}
		icon = {
			name = "LineRight"
			position = { 2 30 }
			using = beige_medium_background
			spriteType = Corneredtiled
			size = { 2 2 }
			parentanchor = right
		}

		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			block "On_click" { }
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
			widget = {
				name = "Decorations"
				size = { 100% 100% }
				background = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/button_lines_brown.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					alpha = 0.5
					spriteborder = { 22 0 }

					modify_texture = {
						name = "Decay"
						texture = "gfx/interface/base_parts/button_lines_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						alpha = 0.4
					}					
				}
				background = {
					name = "side_pattern"
					texture = "gfx/interface/base_parts/button_dotted_pattern.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = Corneredtiled
					spriteborder = { 16 0 }
					margin = { 0 -2 }
					alpha = 0.8
				}				
			}

			# Button with centered text and an icon to the left of the text.
			hbox = {
				name = "Center_text_and_icon"
				widgetanchor = center
				parentanchor = center
				position = { 0 -2 }
				
				block "Center_text_and_icon"
				{
					visible = no
				}

				widget = {
					name = "Spacing_Widget_1"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}

				icon = {
					framesize = { 50 50 }
					size = { 34 34 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
						visible = yes
					}
				}

				widget = {
					name = "Spacing_Widget_2"
					size = { 2 5 }
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
				}
				
				textbox = {
					name = "Text"
					using = BaseFontS
					using = Button_FontColor
					autoresize = yes
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
					align = left
					block "Button_text"
					{
						text = "Button Text"
					}
				}
				
				widget = {
					name = "Spacing_Widget_3"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}
			}

			textbox = {
				name = "Text"
				position = { 0 -1}
				widgetanchor = center
				parentanchor = center				
				using = BaseFontS
				using = Button_FontColor
				autoresize = yes
				align = center
				block "Center_text"
				{
					text = "Button Text"
				}
			}
		}
	}

	# Category Button
	type category_button_square = widget {
		minimumsize = { @Minimum_button_size @Minimum_button_size }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
	
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }
			
			block "On_click" { }
			
			# ToDo: Add Sound.//accordion list button?
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
			# oversound = " ToDo "

			framesize = { 200 200 }

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				alpha = 0.6
			}
			
			hbox = {
		
				widget = {
					name = "Spacing_Widget_1"
					size = { 3 3 }
				}
		
				widget = {
					visible = yes
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					
					icon = {
						name = "Pattern"
						texture = "gfx/interface/base_parts/category_button_pattern_x65bd.dds"
						spriteType = Corneredtiled
						widgetanchor = center
						parentanchor = center
						spriteborder = { 27 0 }
						size = { 100% 20 }
					}
		
					
					textbox = {
						name = "Button_Text"
						using = BaseFontM
						autoresize = yes
						position = { 34 -3 }
						align = left
						parentanchor = vcenter	
						using = Blue_FontColor
						
						block "Button_text"
						{
							text = "ToDo_TEXT"
							fontcolor = { 0.96 0.96 0.96 1 }
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 1 1 }
				}			
				
				button = {
					alwaystransparent = yes
		
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 20 20 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = fixed
					gfxtype = framedbuttongfx
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					block "ArrowVisible" { visible = yes }
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 6 6 }
						#size = { 100% 100% }			
					}
					
					icon = {
						framesize = { 50 50 }
						size = { 14 10 }
						widgetanchor = center
						parentanchor = center
						
						# ToDo ART: Fix the size of this texture. Animate it.
						texture = "gfx/interface/base_parts/arrow.dds"
						block "DownArrowVisible"
						{
							visible = yes
						}
					}
					
					icon = {
						framesize = { 50 50 }
						size = { 10 14 }
						widgetanchor = center
						parentanchor = center
						
						# ToDo ART: Fix the size of this texture. Animate it.
						texture = "gfx/interface/base_parts/arrow_right.dds"
						block "RightArrowVisible"
						{
							visible = no
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_3"
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = fixed
					size = { 3 3 }
				}				
			}
		}
	}
	
	# Outliner Category Button
	type outliner_category_button_square = widget {
		minimumsize = { 0 48 }
		
		button = {
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }
			
			block "On_click" { }
			
			# ToDo: Add Sound. //generic
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
			# oversound = " ToDo "

			framesize = { 200 200 }
			
			textbox = {
				using = SubHeaderFont
				using = Sub_Header_FontColor
				fontsize = 16
				block "Text" { text = "lol" }
				autoresize = yes
				parentanchor = left
				position = { 6 1 }
			}
			
			icon = {
				using = button_tiled_texture
				spriteborder = { 200 200 }
				framesize = { 200 200 }
				size = { 100% 14 }
				parentanchor = hcenter|vcenter
				
				block "Down" {}
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/outliner_category_button_fs60x28y_bd28x_alpha.dds"
					blend_mode = alphamultiply
					framesize = { 30 14 }
					spriteType = Corneredtiled
					spriteborder = { 12 14 }
				}
			}
			
			icon = {
				using = button_tiled_texture
				spriteborder = { 200 200 }
				framesize = { 200 200 }
				size = { 100% 14 }
				parentanchor = hcenter|vcenter
				
				block "Up" { visible = no }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/outliner_category_button_fs60x28y_bd28x_alpha.dds"
					blend_mode = alphamultiply
					framesize = { 30 14 }
					frame = 2
					spriteType = Corneredtiled
					spriteborder = { 12 14 }
				}
			}
			
		}
	}
	
	type text_button_square_highlighted = widget {
		block "MinimumSize" { minimumsize = { 0 @Minimum_button_size } }
		using = DropShadow
		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			#alpha = 0.9
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"			
			block "On_click" { }
			background = {
				texture = "gfx/interface/base_parts/background_texture_x60bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = Corneredtiled
			}
			modify_texture = {
				texture = "gfx/interface/base_parts/special_button_frame_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 30 0 }
			}	
			modify_texture = {
				name = "portrait_alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 32 32 }
				alpha = 0.75
			}
			textbox = {
				name = "Text"
				position = { 0 -2}
				widgetanchor = center
				parentanchor = center				
				using = BaseFontS
				fontcolor = { 1 0.84 0.42 0.85 }
				autoresize = yes
				align = center
				elide = right
				fontsize_min = 12
				block "Center_text"
				{
					text = "Button Text"
				}
				
			}
		}
	}

	# Header Close Button
	type button_close = button {		
		
		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
		spriteType = Corneredtiled
		spriteborder = { 100 100 }
		gfxtype = framedbuttongfx
		size = { 22 22 }
		shortcut = "close_window"
		
		# ToDo: Add Sound. //Close
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_close"
		# oversound = " ToDo "
		
		framesize = { 100 100 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button_alpha_close.dds"
			blend_mode = alphamultiply			
		}
	}
	
	type button_settings = button {		
		
		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
		spriteType = Corneredtiled
		spriteborder = { 100 100 }
		gfxtype = framedbuttongfx
		size = { 22 22 }
		
		# ToDo: Add Sound. //Primary
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
		# oversound = " ToDo "
		
		framesize = { 100 100 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button_alpha_settings.dds"
			blend_mode = alphamultiply			
		}
	}

	# Header Back Button
	type button_back = button {
		
		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
		spriteType = Corneredtiled
		spriteborder = { 100 100 }
		gfxtype = framedbuttongfx
		size = { 22 22 }
		shortcut = "previous_window"
		# ToDo: Add Sound. //cancel sfx
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_cancel"
		# oversound = " ToDo "
		
		framesize = { 100 100 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button_alpha_back.dds"
			blend_mode = alphamultiply			
		}
	}

	# Header Out button
	type button_slide_out = button {		
		
		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
		spriteType = Corneredtiled
		spriteborder = { 100 100 }
		gfxtype = framedbuttongfx
		size = { 22 22 }
		
		# ToDo: Add Sound. //generic or increment
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
		# oversound = " ToDo "
		
		framesize = { 100 100 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button_round_out_alpha.dds"
			blend_mode = alphamultiply		
		}
		
	}
	
	type button_slide_in = button {		
		
		texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
		spriteType = Corneredtiled
		spriteborder = { 100 100 }
		gfxtype = framedbuttongfx
		size = { 22 22 }
		
		# ToDo: Add Sound. //generic or decrement
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
		# oversound = " ToDo "
		
		framesize = { 100 100 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button_round_in_alpha.dds"
			blend_mode = alphamultiply		
		}
		
	}

	type check_box_buttonA = checkbutton {
		#gfxtype = checkbuttongfx
		shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
		#using = tooltip_es
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_checkbox"
		#oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		#checked = "[AchievementWindow.ShouldShowNotPossible]"
		#onclick = "[AchievementWindow.ToggleFilterNotPossible]"
		
		size = { 28 28 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		
		using = button_tiled_texture
		spriteType = Corneredtiled
		spriteborder = { 200 200 }
		gfxtype = framedbuttongfx
		#size = { 100% 100% }

		framesize = { 200 200 }
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		block "On_click" { }
		
		# ToDo: Add Sound. //?
		# clicksound = " ToDo "
		# oversound = " ToDo "
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 6 6 }
		}			
		
		icon = {
			widgetanchor = center
			parentanchor = center					
			using = button_tiled_texture
			spriteType = Corneredtiled
			framesize = { 200 200 }
			alwaystransparent = yes
			size = { 20 20 }

			block "Check_mark" 
			{
				
			}

			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/check_mark.dds"
				blend_mode = alphamultiply
				framesize = { 50 50 }

				block "Frame" 
				{
					
				}					
			}
		}
	}

	type check_box_button = widget {

		size = { @Minimum_button_size @Minimum_button_size }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			
			# ToDo: Add Sound. //?
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_checkbox"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}
			
			block "Icon" 
			{
				icon = {
					widgetanchor = center
					parentanchor = center					
					using = button_tiled_texture
					spriteType = Corneredtiled
					#spriteborder = { 200 200 }
					framesize = { 200 200 }
					frame = 1
					
					#gfxtype = framedbuttongfx
					
					#upframe = 1
					#overframe = 2
					#downframe = 3
					#disableframe = 4
					
					size = { 20 20 }

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/check_mark.dds"
						blend_mode = alphamultiply
						framesize = { 50 50 }
						#size = { 38 38 }
						
						block "Frame" 
						{
							
						}					
					}
				}
			}
		}
	}

	type goto_button = button_round_inverted { 
		size = { 32 32 }
		# Todo Add Sound. //goto
		blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_goto" }
		### oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		blockoverride "Icon"
		{
			texture = "gfx/interface/base_parts/eye.dds"
		}
	}
	
	type cancel_construction_button = icon_button_square {
		size = { 40 40 }
		#Todo Add Sound. //Cancel
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_cancel"
		### oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		blockoverride "Icon"
		{
			texture = "gfx/interface/icons/temp_icon.dds"
		}
		blockoverride "IconSize"
		{
			size = { 30 30 }
		}
	}
	
	# Idea
	type idea_tile = widget {
		size = { 68 102 }
		
		idea_button = {
			position = { 0 34 }
		}		
		
		icon = {
			name = "Negative_Icon_BG"
			position = { 0 2 }
			size = { 68 26 }
			texture = "gfx/interface/base_parts/background_red.dds"
			spriteType = Corneredtiled
			
			block "Negative_icon_bg_visible" 
			{
				visible = no
			}
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/brown_single_backline_sharp_x39bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 20 0 }
			}
		}
		
		icon = {
			name = "Positive_Icon_BG"
			position = { 0 2 }
			size = { 68 26 }
			texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
			spriteType = Corneredtiled
			framesize = { 100 100 }
			frame = 8
			alpha = 0.8
			
			block "Positive_icon_bg_visible" 
			{
				visible = no
			}			
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/brown_single_backline_sharp_x39bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 20 0 }
			}
		}	

		icon = {
			name = "Neutral_Icon_BG"
			position = { 0 2 }
			size = { 68 26 }
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			# alpha = 0.8
			
			block "Neutral_icon_bg_visible" 
			{
				visible = no
			}				
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/brown_single_backline_sharp_x39bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 20 0 }
			}
		}
		
		icon = {
			position = { 0 -4 }
			parentanchor = top|hcenter
			widgetanchor = top|hcenter
			framesize = { 50 50 }
			size = { 38 38 }
			
			block "Icon"
			{
				using = temp_icon
			}
		}
	}
	
	# Idea Button
	type idea_button = widget {
		size = { 68 68 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5

			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
	
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			
			block "Button" 
			{
				# ToDo: Set on click functionality in the instantiation.
				# ToDo: Disable this when it is not a clickable button, and make sure that it uses the disableframe.
			}
			
			# ToDo: Add Sound. //?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			using = tooltip_es
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			button = {
				name = "current_idea_icon"
				size = { 60 60 }
				widgetanchor = center
				parentanchor = center
				gfxtype = buttongfx
				
				block "Current_idea"
				{
					# ToDo: Set this texture to be the one of the current idea.
					# ToDo ART: Change ALL idea textures to just be an image without any effects.
					using = flat_background_white
					color = { 1 0 0.78431 1 }
				}
			}

			button = {
				name = "No Idea Button"
				alwaystransparent = yes
				using = button_tiled_texture
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				size = { 60 60 }
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center	
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4
				
				block "No_idea"
				{
					# ToDo: If there IS an idea set in this slot, set this visible to no.
					visible = yes
				}
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
				}
				
				icon = {
					name = "Pattern"
					texture = "gfx/interface/base_parts/square_button_corner_pattern_x22y22bd.dds"
					spriteType = Corneredtiled
					spriteborder = { 11 11 }
					size = { 100% 100% }
				}
				
				icon = {
					name = "Idea Mark"
					widgetanchor = center
					parentanchor = center	
					texture = "gfx/interface/base_parts/idea_mark.dds"
				}
			}
		}
	}	
	
	
	
	

	
	#CURRENTLY NOT USED
	type text_button_rounded = button {
		
		using = button_tiled_texture
		spriteType = Corneredtiled
		spriteborder = { 200 200 }
		framesize = { 200 200 }
		gfxtype = framedbuttongfx
		upframe = 1
		overframe = 2
		downframe = 3
		disableframe = 4
		
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/button1_alpha_clean_x28bd.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 14 0 }
			size = { 100% 100% }			
		}
		
		icon = {
			name = "Mosaic"
			texture = "gfx/interface/base_parts/button1_mosaic_x28bd_x8inc.dds"
			spriteType = Corneredtiled
			spriteborder = { 14 0 }
			size = { 100% 100% }
			#color = { 0.106  0.627  0.663 1 }
		}			
		
		textbox = {
			name = "Title" 
			autoresize = yes
			using = BaseFontS
			layoutpolicy_vertical = fixed
			position = { 0 -2 }
			align = center
			widgetanchor = center
			parentanchor = center	
			
			#ToDo
			text = "Test Title"				
		}
	}
	
	type button_plus = widget {
		size = { 26 26 }
		
		icon = {
			name = "Shadow"
			position = { -1 1 }
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			widgetanchor = center
			parentanchor = center
			alpha = 0.3
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		icon = {
			name = "Base"
			size = { 26 26 }
			using = flat_background_white
			spriteType = Corneredtiled
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/round_back_52.dds"
				blend_mode = alphamultiply
			}           
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			# ToDo: Add Sound.//increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/roung_outline_52.dds"
				blend_mode = alphamultiply
			}
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				block "On_click" { }
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/plus.dds"
					blend_mode = alphamultiply                  
				}
				
			}
		}
	}   
	
	type button_minus = widget {
		size = { 26 26 }
		
		icon = {
			name = "Shadow"
			position = { -1 1 }
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			widgetanchor = center
			parentanchor = center
			alpha = 0.3
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		icon = {
			name = "Base"
			size = { 26 26 }
			using = flat_background_white
			spriteType = Corneredtiled
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/round_back_52.dds"
				blend_mode = alphamultiply
			}           
		}
		
		#modify_texture = {
		#	name = "Decay"
		#	texture = "gfx/interface/base_parts/demanded_rot.dds"
		#	blend_mode = alphamultiply
		#	spriteType = Corneredtiled
		#}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			
			# ToDo: Add Sound. Decrement
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_decrement"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/roung_outline_52.dds"
				blend_mode = alphamultiply
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				block "On_click" { }
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_decrement"
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/minus.dds"
					blend_mode = alphamultiply                  
				}
			}
		}
	}   
	type button_radial = widget {
		size = { 26 26 }
		
		icon = {
			name = "Shadow"
			position = { -1 1 }
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			widgetanchor = center
			parentanchor = center
			alpha = 0.3
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		icon = {
			name = "Base"
			size = { 26 26 }
			using = flat_background_white
			spriteType = Corneredtiled
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/round_back_52.dds"
				blend_mode = alphamultiply
			}           
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			
			# ToDo: Add Sound.//? radial?
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/roung_outline_52.dds"
				blend_mode = alphamultiply
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				block "On_click" { }
				state = {
					name = DotInvisible
					
					animation = {
						alpha = 0
					}
					
					block "HideDot"
					{
					
					}
					
				} 
				
				state = {
					name = DotVisible
					
					animation = {
						alpha = 1
					}
					
					duration = 0.15
					
					block "ShowDot"
					{
					
					}
					
				}
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/dot.dds"
					blend_mode = alphamultiply                  
				}
			}
		}
	}   

	type radial_button_entry = flowcontainer {	
		spacing = 8
		button_radial = {
			block "EnabledState" {}
		} 
		textbox = {
			autoresize = yes
			block "Text" { text = "TODO" }
			using = BaseFontM
			using = White_FontColor #### using = Black_FontColor
		}
	}

	type score_button = widget {
		size = { 28 28 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}

			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
				
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				block "On_click" { }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/score.dds"
					blend_mode = alphamultiply                  
				}

				using = ButtonBorderTear

			}
		}
	}
	
	type log_button = widget {
		size = { 28 28 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				block "On_click" { }
				#Clicksound Message Log? 
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/log.dds"
					blend_mode = alphamultiply                  
				}
				
				using = ButtonBorderTear
				
			}
		}
	}
	type ledger_button = widget {
		size = { 28 28 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4   
				
				block "On_click" { }
				
				#clicksound ledger?
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/ledger.dds"
					blend_mode = alphamultiply                  
				}
				
				using = ButtonBorderTear
				
			}
		}
	}

	type ingame_menu_button = widget {
		size = { 38 36 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			# ToDo: Add Sound.// Main menu button?
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_secondary"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				block "On_click" { }
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4                
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/menu.dds"
					blend_mode = alphamultiply                  
				}
				
				using = ButtonBorderTear
			}
		}
	}

	type unit_type_card = widget {
		
		icon = {
			name = "unti_type_card"
			texture = "gfx/interface/unit_view/unit_card_square.dds"
			size = { 100% 100% }
			
			block "Details" { }
			
			vbox = {
				position = { 1 1 }
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding
				spacing = -4
				margin_bottom = 6
				margin_top = 2
				
				icon = {
					name = "type_icon"
					
					size = { 32 32 }
					block "Icon" { texture = "gfx/interface/icons/_default.dds" }
				}
				
				textbox = {
					autoresize = yes
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					block "AmountDetails"
					{
						text = "10,000"
						tooltip = "TOOLTIP"
					}
					align = center|nobaseline
					alwaystransparent = yes
					multiline = no
				}
				
				textbox = {
					block "TotalDetails"
					{
						#visible = "[SubUnitTypeGlue.IsCohort]"
						text = "999"
						tooltip = "TEXT"
					}
					autoresize = yes
					using = BaseFontS
					fontsize = 12
					using = White_FontColor #### using = Black_FontColor
					align = center|nobaseline
					alwaystransparent = yes
					multiline = no
				}
			}
			
		}
	
	}
	
	type cpt_button = margin_widget {
		block "Size" { size = { 100 150 } }
		
		background = { 
			name = "Shadow" 
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			size = { 100% 100% }
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = { 
			name = "HighlightShadow" 
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin = { 5 5 }
			alpha = 0.5
			size = { 100% 100% }
			color = { 1 1 0 1 }
			block "HighlightShadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = no
			}			
		}
		
		icon = {
			name= "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled	
			size = { 100% 100% }
		}
		
		icon = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			size = { 100% 100% }
			framesize = { 200 200 }
		}
		
		block "Context" {} #this is inherited, you don't need to use the blockoverride
		
		margin_widget = {
			size = { 100% 100% }
			block "Margin" { margin = { 3 3 } }
			visible = "[Character.IsValid]"
			portrait_button = {
				using = pt_button
				parentanchor = top
				position = { 0 0 }
				using = tooltip_es_portrait
				pop_out = no
				block "Background" { background_texture = "[GetCharacterBackgroundIcon( Character.Self, Character.GetLocation.GetTerrain )]" }
				block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" }
				block "PortraitTexture" { portrait_texture = "[Character.GetPortrait('default', 'default')]" }							
			}
		}
		
		margin_widget = {
			size = { 100% 100% }
			visible = "[Not( Character.IsValid )]" 
			#margin = { 3 3 }
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				spriteType = Corneredtiled

				#modify_texture = {
				#	name = "Alpha"
				#	texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				#	blend_mode = alphamultiply
				#	spriteType = Corneredtiled
				#	spriteborder = { 60 60 }
				#}
			}
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = flat_background_white
					spriteType = Corneredtiled
					alpha = 0.7

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 60 60 }
					}
				}
				icon = {
					name = "beige_not_clickable_portrait"
					size = { 80% 50% }
					using = beige_background
					parentanchor = center
					maximumsize = { 50 50 }
					
					modify_texture = {
							texture = "gfx/interface/base_parts/idea_mark.dds"
							blend_mode = alphamultiply
					} 
				}
			}		
		}
		
		icon = { #family color
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 45% 32% }
			position = { -2 2 }
			color = "[Character.GetFamily.GetBackgroundColor]"	
			visible = "[And( And( Character.IsValid, Not( Character.GetFamily.IsMinor )), Not( Character.IsHeadOfFamily ) )]"
			alpha = 0.8
			parentanchor = top|right
			datacontext = "[Character]"
			tooltip = "MEMBER_OF_FAMILY_PORTRAIT_TOOLTIP"  
			alwaystransparent = yes
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_stripe_top_corner.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradient.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		icon = { #head of family
			texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
			size = { 95% 32% }
			position = { 0 3 }
			color = "[Character.GetFamily.GetBackgroundColor]"	
			visible = "[And( Character.IsValid, Character.IsHeadOfFamily )]"
			alpha = 0.83
			parentanchor = top|hcenter
			datacontext = "[Character]"
			tooltip = "HEAD_OF_FAMILY_PORTRAIT_TOOLTIP"  
			alwaystransparent = yes
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/solid_family_stripe.dds"
				blend_mode = alphamultiply
			}
			icon = {
				size = { 100% 100% }
				texture = "gfx/interface/base_parts/button_allframes.dds"
				framesize = { 100 100 }
				frame = 3
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/sidegradientfamilythicker.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		widget = {
			name = "party_icon_widget"
			size = { 39% 26% }
			parentanchor = bottom|left
			maximumsize = { 40 40 }
			icon = {
				name = "party_icon_background"
				size = { 100% 100% }
				position = { 3 -3 }
				tooltip = "CHARACTER_FACTION"
				texture = "gfx/interface/base_parts/left_stripe_bottom_corner.dds"
				alpha = 0.75
				visible = "[Character.ShowParty]"
			}
			icon = {
				name = "party_icon"
				size = { 100% 100% }
				position = { 1 -1 }
				tooltip = "CHARACTER_FACTION"
				texture = "[GetPartyIcon(Character.GetParty)]"
				visible = "[Character.ShowParty]"
			}
			block "ShowIcons" {}
		}
				
		widget = {
			name = "player_overlay_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|hcenter
			icon = {
				size = { 100% 100% }
				name = "player_overlay"
				alwaystransparent = yes
				texture = gfx/portraits/portrait_player_glow.dds
				visible = "[Character.IsOtherPlayerRuler]"
			}
			block "ShowIcons" {}
		}
				
		widget = {
			name = "ruler_icon_widget"
			size = { 39% 26% }
			maximumsize = { 40 40 }
			parentanchor = bottom|right
			icon = {
				name = "ruler_icon"
				size = { 100% 100% }
				using = icon_leader
				datacontext = "[Character]"
				tooltip = OUR_RULER_AS_PLAYER
				visible = "[Character.IsLocalPlayerRuler]"
			}
			block "ShowIcons" {}
		}
	}
	
	type cpt_button_large = margin_widget {
		block "Size" { size = { 604 256 } }
		
		#icon = {
		#	name= "Base"
		#	shaderfile = "gfx/FX/pdxgui_default.shader"
		#	using = flat_background_white
		#	spriteType = Corneredtiled	
		#	size = { 100% 100% }
		#}
		
		block "Context" {} #this is inherited, you don't need to use the blockoverride
		
		icon = {
			name = "background"
			texture = "[GetCharacterBackgroundIconHuge( Character.Self, Character.GetLocation.GetTerrain )]"
			spriteType = Corneredtiled
			#parentanchor = bottom
			size = { 100% 100% }
			modify_texture = {
				name = "Alpha"
				block "AlphaTexture" { texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds" }
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
			}
		}
		scissor = yes
		
		margin_widget = {
			block "BottomPortraitSize" { size = { 200 300 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, GreaterThan_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" { position = { -10 24 } }
			portrait_button = {
				using = pt_button_large
				pop_out = yes
			}
		}
		
		margin_widget = {
			block "BottomPortraitSize" { size = { 150 225 } }
			block "Margin" { margin = { 3 3 } }
			visible = "[And( Character.IsValid, LessThanOrEqualTo_int32( Character.GetAge, '(int32)4' ))]"
			parentanchor = bottom
			block "BottomPortraitPosition" {  }
			position = { 36 18 }
			portrait_button = {
				using = pt_button_baby
			}
		}
		
		icon = {
			block "BackgroundTint" { texture = "[GetCharacterBackgroundIconTint( Character.Self, Character.GetLocation.GetTerrain )]" } 
			size = { 100% 100% }
		}
		
		margin_widget = { 
			block "BottomPortraitSize" { size = { 100% 100% } }
			margin = { 3 3 }
			visible = "[Not( Character.IsValid )]" 
			
			icon = {
				texture = "gfx/interface/portrait/background_imprisoned_normal_tint.dds"
				size = { 100% 100% }
				icon = {
					texture = "gfx/interface/base_parts/idea_mark.dds"
					parentanchor = center
				}
			} 
			
		}
		
		widget = {
			parentanchor = bottom|hcenter
			size = { 100% 24 }
			block "ShowIcons" {}
			hbox = {
				position = { -1 -2 }
				alwaystransparent = no
				ignoreinvisible = no
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "CHARACTER_FACTION"
						texture = "[GetPartyIcon(Character.GetParty)]"
					}
					visible = "[Character.ShowParty]"
				}
				widget = {
					size = { 24 26 }
					
					icon = {
						name = "player_overlay"
						size = { 26 26 }
						alwaystransparent = yes
						texture = gfx/portraits/portrait_player_glow.dds
						position = { 3 0 }
						parentanchor = vcenter
						visible = "[Character.IsOtherPlayerRuler]"
					}
					
				}
				widget = {
					size = { 24 26 }
					icon = {
						size = { 30 30 }
						using = icon_leader
						datacontext = "[Character]"
						tooltip = OUR_RULER_AS_PLAYER
						visible = "[Character.IsLocalPlayerRuler]"
						parentanchor = vcenter
					}
				}
			}
		}
	}
	
	type cpt_button_large_with_data = cpt_button_large { #cpt_button_large is directly above this
		cpt_button_large = {
			margin_widget = {
				size = { 100% 100% }
				block "ContentMargins" {}
				country_flag_reworked = { 
					position = { -1 -1 }
					blockoverride "Size"
					{
						size = { 62 62 }
					}
					blockoverride "Flag"
					{ 
						texture = "[Character.GetEmployer.AccessCoatOfArms.GetTexture('(int32)120', '(int32)120')]"
						frame = "[Character.GetEmployer.AccessCoatOfArms.GetFrame('(int32)120', '(int32)120'))]"
						framesize = { 120 120 }
					}
					blockoverride "On_click"
					{
						onclick = "[OpenDiplomacy(CharacterWindow.GetCharacter.GetEmployer)]"
					}
					tooltip = "[Character.GetEmployer.GetDescriptiveName]"
				}

				icon = {
					texture = "gfx/interface/icons/shared_icons/leader_pretender.dds"
					size = { 50 50 } 
					position = { 74 3 }
					visible = "[And( Character.GetEmployer.GetGovernment.IsMonarchy, Character.IsPretender )]"
					tooltip = "PRETENDER_TOOLTIP"
				}			

				flowcontainer = {
					parentanchor = top|right
					widgetanchor = right
					spacing = 11
					position = { -2 2 }
					margin_top = 2
					margin_right = 2
					@character_stats_bg_alpha = 0.65
					
					flowcontainer = {
						spacing = 2
						direction = vertical
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = flat_background_white
							using = border3
							alpha = @character_stats_bg_alpha
							margin = { 8 8 }
							margin_bottom = 12
						}
						ignoreinvisible = yes
						#using = NoninteractableBG
						#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
						minimumsize = { 136 0 } 
						flowcontainer = {
							spacing = 4
							ignoreinvisible = yes
							icon = {
								texture = "gfx/interface/icons/icon_alpha/male_female_frame.dds"
								framesize = { 36 36 }
								size = { 30 30 }
								frame = "[Character.GetGenderFrame]"
								parentanchor = left|vcenter
							}
							tag_dark = {
								minimumsize = { 220 34 }
								text = "[Character.GetNameWithNoTooltip]"
								fontsize_min = 10
								max_width = 188
								elide = right
							}
							icon = {
								texture = "gfx/interface/base_parts/plus.dds"
								size = { 30 30 }
								visible = "[Not( StringIsEmpty( Character.GetRelevantDescription ) )]"
								tooltip = "[Character.GetRelevantDescription]"
							}
						}
						tag_dark = {
							minimumsize = { 0 34 }
							visible = "[Character.HasTitle]"
							text = "[Character.GetTitleNameShort]"
							fontsize_min = 10
							max_width = 248
							elide = right
							parentanchor = hcenter
							tooltip = "[Character.GetTitle.GetTooltip]"
						} 
						flowcontainer = {
							spacing = 8
							ignoreinvisible = no
							visible = "[Not( Character.HasTitle )]"
							widget = {
								size = { 40 30 }
								parentanchor = left|vcenter
								icon = {
									texture = "gfx/interface/icons/shared_icons/age.dds"
									size = { 30 30 }
									parentanchor = right
									position = { -4 0 }
								}
							}
							tag_dark = {
								minimumsize = { 0 34 }
								text = "[Character.GetAgeInfo]"
								max_width = 180
								elide = right
								fontsize_min = 12
							}
							tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
						}
					}
					
					flowcontainer = {
						spacing = 8
						direction = vertical
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = flat_background_white
							using = border3
							alpha = @character_stats_bg_alpha
							margin = { 8 8 }
							margin_bottom = 12
						}
						#using = NoninteractableBG
						#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
						icon_and_text_dark = {
							name = "Culture"
							size = { 184 0 }
							
							blockoverride "Icon" { using = icon_culture }
							blockoverride "Text" { text = "[Character.GetCulture.GetName]" }
						}
						
						icon_and_text_dark = {
							name = "Religion"
							size = { 184 0 }
							
							blockoverride "Icon" { using = icon_religious }
							blockoverride "Text" { text = "[Character.GetReligion.GetName]" }
						}
						
					}
					
				}

				icon_card = {
					size = { 44 44 }
					position = { 26 0 }
					parentanchor = bottom
					blockoverride "Icon"
					{
						texture = "[GetPartyIcon( Character.GetParty )]"
					}
					block "PartyIconVisibility" 
					{
						visible = "[Character.ShowParty]"
					}
					tooltip = "[Character.GetPartyTooltip]"
				}

				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border3
						alpha = @character_stats_bg_alpha
						margin = { 8 8 }
						margin_bottom = 14
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = bottom|right
					direction = vertical
					spacing = 8
					position = { -2 -8 }
					margin_right = 2 
					
					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Martial"
							size = { 88 0 }
							tooltip = "[Character.GetMartialToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/military.dds" }
							blockoverride "Text" { text = "[Character.GetMartial]" }
						}
						
						icon_and_text_dark = {
							name = "Finesse"
							size = { 88 0 }
							tooltip = "[Character.GetFinesseToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/civic.dds" }
							blockoverride "Text" { text = "[Character.GetFinesse]" }
						}
						
					}
					
					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Oratory"
							size = { 88 0 }
							tooltip = "[Character.GetCharismaToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/oratory.dds" }
							blockoverride "Text" { text = "[Character.GetCharisma]" }
						}
						
						icon_and_text_dark = {
							name = "Zeal"
							size = { 88 0 }
							tooltip = "[Character.GetZealToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/religious.dds" }
							blockoverride "Text" { text = "[Character.GetZeal]" }
						}
					}
				}
				
				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border3
						alpha = @character_stats_bg_alpha
						margin = { 8 7 }
						margin_bottom = 11
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = vcenter|right
					direction = vertical
					spacing = 8
					position = { -2 -2 }
					margin_right = 2
					
					flowcontainer = {
						spacing = 8
						icon_and_text_dark = {
							name = "Loyalty"
							size = { 88 0 }

							tooltip = "[Character.GetLoyaltyToolTip]"

							blockoverride "Icon" {
								texture = "gfx/interface/icons/shared_icons/loyalty.dds" 
							}
							blockoverride "Text" {
								text = "[Character.GetLoyalty|0]" 
							}
						}
						
						icon_and_text_dark = {
							name = "Popularity"
							size = { 88 0 }
							tooltip = "[Character.GetPopularityToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/popularity.dds" }
							blockoverride "Text" { text = "[Character.GetPopularity|0]" }
						}
						
					}
					
					flowcontainer = {
						spacing = 8
						ignoreinvisible = yes
						icon_and_text_dark = {
							name = "Prominence"
							size = { 88 0 }
							tooltip = "[Character.GetProminenceToolTip]"
							visible = "[Not( Character.GetEmployer.GetGovernment.IsRepublic )]"
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/prominence.dds" }
							blockoverride "Text" { text = "[Character.GetProminence|0]" }
						}
						
						icon_and_text_dark = {
							name = "Statesmanship"
							size = { 88 0 }
							tooltip = "[Character.GetExperienceInformation]"
							visible = "[Character.GetEmployer.GetGovernment.IsRepublic]"
							blockoverride "Icon" { using = icon_statesmanship }
							blockoverride "Text" { text = "[Character.GetExperience|0]" }
						}
						
						icon_and_text_dark = {
							name = "Corruption"
							size = { 88 0 }
							tooltip = "[Character.GetCorruptionToolTip]"
							
							blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/corruption.dds" }
							blockoverride "Text" { text = "[Character.GetCorruption|0]" }
						}
					}
				}
				
				#flowcontainer = {
				#	spacing = 2
				#	direction = vertical
				#	parentanchor = vcenter|right
				#	position = { -323 -2 }
				#	background = {
				#		shaderfile = "gfx/FX/pdxgui_default.shader"
				#		using = flat_background_white
				#		using = border3
				#		alpha = @character_stats_bg_alpha
				#		margin = { 8 7 }
				#		margin_bottom = 11
				#	}

				#	#using = NoninteractableBG
				#	#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
				#	minimumsize = { 132 0 } 
				#	visible = "[Character.HasTitle]"
				#	flowcontainer = {
				#		spacing = 8
				#		ignoreinvisible = no
						
				#		widget = {
				#			size = { 40 30 }
				#			parentanchor = left|vcenter
				#			icon = {
				#				texture = "gfx/interface/icons/shared_icons/age.dds"
				#				size = { 30 30 }
				#				parentanchor = right
				#				position = { -4 0 }
				#			}
				#		}
				#		tag_dark = {
				#			minimumsize = { 0 34 }
				#			text = "[Character.GetAgeInfo]"
				#			max_width = 70
				#			elide = right
				#			fontsize_min = 12
				#		}
				#		tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
				#	}
				#	widget = { size = { 0 1 } }
				#	icon_and_text_dark = {
				#		size = { 120 0 }
				#		blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/land_combat.dds" }
				#		blockoverride "Text" { text = "[Character.GetNumberOfLoyalCohorts]" }
				#		tooltip = "LOYAL_VETS_TOOLTIP"
				#	}
				#}
				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border4
						alpha = @character_stats_bg_alpha
						margin = { 14 8 }
						margin_bottom = 9
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = vcenter|right
					direction = vertical
					spacing = 3
					position = { -329 0 } ###
					visible = "[Character.HasTitle]"
					flowcontainer = {
						spacing = 8
						ignoreinvisible = no
						
						widget = {
							size = { 40 30 }
							parentanchor = left|vcenter
							icon = {
								texture = "gfx/interface/icons/shared_icons/age.dds"
								size = { 30 30 }
								parentanchor = right
								position = { -4 0 }
							}
						}
						tag_dark = {
							minimumsize = { 0 34 }
							text = "[Character.GetAgeInfo]"
							max_width = 70
							elide = right
							fontsize_min = 12
						}
						tooltip = "[Character.GetAgeOnDeathOrBirthDate]"
					}
					widget = { size = { 0 1 } }
					icon_and_text_dark = {
						size = { 120 0 }
						blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/land_combat.dds" }
						blockoverride "Text" { text = "[Character.GetNumberOfLoyalCohorts]" }
						tooltip = "LOYAL_VETS_TOOLTIP"
					}
				}			
				flowcontainer = {
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = flat_background_white
						using = border3
						alpha = @character_stats_bg_alpha
						margin = { 7 7 }
						margin_bottom = 11
					}
					#using = NoninteractableBG
					#blockoverride "BackAlpha" { alpha = @character_stats_bg_alpha }
					parentanchor = vcenter|right
					direction = vertical
					spacing = 8
					position = { -197 -2 } ###
					icon_and_text_dark = {
						name = "Loyalty"
						size = { 116 0 }

						tooltip = "[Character.GetPowerBaseInfo]"

						blockoverride "Icon" {
							texture = "gfx/interface/icons/shared_icons/power_base.dds" 
						}
						blockoverride "Text" {
							text = "[Character.GetPowerBase|0]" 
						}
					}
					icon_and_text_dark = {
						name = "Prominence"
						size = { 116 0 }
						tooltip = "[Character.GetWealthInformation]"
						
						blockoverride "Icon" { using = icon_treasury }
						blockoverride "Text" { text = "[Character.GetWealth|0]" }
					}
				}
				icon = {
					size = { 20 20 }
					texture = "gfx/interface/tooltip/lock_icon_alpha_s.dds"
					parentanchor = bottom|left
					position = { 4 -4 }
					visible = "[PdxGuiWidget.IsTooltipLocked]"
					background = {
						texture = "gfx/interface/tooltip/lock_icon_alpha_s.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
						margin = { 3 3 }
						parentanchor = center
						color = { 0 0 0 1 }
					}
				}
			}
		}
	}

	type list_entry = margin_widget {
		alpha = 1
		alwaystransparent = yes

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spritetype = corneredtiled
			block "ListAlpha" { alpha = 0.6 }
			size = { 100% 100% }
			shaderfile = "gfx/FX/pdxgui_default.shader"
			margin = { 3 3 }
			modify_texture = {
				spriteType = Corneredtiled
				spriteborder = { 40 26 }
				block "texture" {#1
					texture = "gfx/interface/base_parts/entry_background_x80y52bd_alpha.dds"
				}
				blend_mode = alphamultiply
			}
			using = border_medium_torn_alpha

			#modify_texture = {
			#	texture = "gfx/interface/base_parts/pattern_a_l.dds"
			#	spriteborder { 0 0 }
			#	spriteType = Corneredtiled
			#	blend_mode = alphamultiply
			#	alpha = 0.33
			#}

			modify_texture = {
				name = "Alpha"
				block "ListAlphaTexture" { texture = "gfx/interface/tooltip/tooltip_section_alpha_gradient_stretch.dds" }
				blend_mode = alphamultiply
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				alpha = 0.8
			}
		}

	}
	type list_button = button {
		# Todo Add Sound. //accordion list button
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
		name = "teal_list_but"
		texture = "gfx/interface/base_parts/button_color_red_imp19c_darker.dds"
		framesize = { 100 100 }
		spritetype = corneredtiled
		spriteborder = { 2 0 }
		block "ListAlpha" { }#check
		size = { 100% 100% }

		gfxtype = togglepushbuttongfx

		upframe = 3
		uphoverframe = 4
		uppressedframe = 5
		downframe = 9
		downhoverframe = 10
		downpressedframe = 9
		disableframe = 8

		modify_texture = {
			spriteType = Corneredtiled
			spriteborder = { 40 26 }
			texture = "gfx/interface/base_parts/entry_background_x80y52bd_alpha.dds"
			blend_mode = alphamultiply
		}

		#using = border_medium_torn_alpha

		modify_texture = {
			name = "Alpha"
			block "ListAlphaTexture" { texture = "gfx/interface/tooltip/tooltip_section_alpha_gradient_stretch.dds" }
			blend_mode = alphamultiply
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			alpha = 0.25
		}

		state = {
			name = "highlightit"

			animation = {
				frame = 8
			}

			block "HighlightTrigger" { }

		}

	}

	type list_button_army = button {
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
		name = "list_button_army"
		texture = "gfx/interface/base_parts/button_allframes.dds"
		framesize = { 100 100 }
		spritetype = corneredtiled
		spriteborder = { 100 100 }
		size = { 32 32 }
		gfxtype = togglepushbuttongfx

		upframe = 3
		uphoverframe = 4
		uppressedframe = 5
		downframe = 9
		downhoverframe = 10
		downpressedframe = 9
		disableframe = 8
		
		modify_texture = {
			texture = "gfx/interface/icons/icon_alpha/legions_army.dds"
			blend_mode = alphamultiply
		}
		
		state = {
			name = "highlightit"
			
			animation = {
				frame = 8
			}
			
			block "HighlightTrigger" { }
			
		}

	}
	
	type unit_card = widget {
		block "Size" { minimumsize = { 64 98 } }

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
		
		background = {
			texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spritetype = corneredstretched
			color = { 0.365 0.227  0.127 0.4 }

			modify_texture = {
				name = "Alpha" 
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
			
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			
			icon = {
				size = { 100% 100% }
				using = flat_background_white
				
				modify_texture = {
					name = "Alpha" 
					spriteType = Corneredtiled
					spriteborder = { 16 16 }
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
				
				glow = {
					glow_radius = 2
					color = { 0.365  0.027  0.027 0.5 }
				}
				
				icon = {
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
					spritetype = corneredstretched
					color = { 0.55  0.86275  1.0 0.1 }
					size = { 100% 100% }
					
					using = border_slightly_torn_alpha
					
				}
				
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					
					icon = {
						name = "type_icon"
						size = { 44 44 }
						block "Icon" { texture = "[GetSubUnitIcon(SubUnitCounts.GetType)]" }
						block "IconTooltip" { tooltip = "[SubUnitCounts.GetTooltip]"	}
					}
					
					textbox = {
						visible = "[And(SubUnitCounts.IsCohort, GreaterThan_int32(SubUnitCounts.GetTotalNumber,'(int32)0') )]"
						size = { 64 18 }
						using = BaseFontM
						using = White_FontColor #### using = Black_FontColor
						block "TotalText" { text = "[SubUnitCounts.GetTotal]" }
						align = center|nobaseline
						alwaystransparent = yes
						block "TotalTextTooltip" { tooltip = "[SubUnitCounts.GetTotalTooltip]" }
						multiline = no
					}
					
					widget = {
						visible = "[Not( SubUnitCounts.IsCohort )]"
						size = { 60 18 }
					}
					
					icon = {
						texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
						spritetype = corneredtiled
						spriteborder = { 30 0 }
						size = { 0 6 }
						layoutpolicy_horizontal = expanding
					}
					
					textbox = {
						size = { 64 18 }
						using = BaseFontM
						using = White_FontColor #### using = Black_FontColor
						block "CountText" { text = "[SubUnitCounts.GetCount]" }
						align = center|nobaseline
						block "CountTextTooltip" { tooltip = "[SubUnitCounts.GetAmountTooltip]" }
						alwaystransparent = yes
						multiline = no
					}
					
				}
				
			}
			alpha = 0.95
		}	
	}
	
	type unit_legion_card = widget {
		block "Size" { minimumsize = { 74 110 } }

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
		
		background = {
			texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spritetype = corneredstretched
			color = { 0.365 0.227  0.127 0.4 }

			modify_texture = {
				name = "Alpha" 
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
			
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			
			icon = {
				size = { 100% 100% }
				using = flat_background_white
				
				modify_texture = {
					name = "Alpha" 
					spriteType = Corneredtiled
					spriteborder = { 16 16 }
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
				
				glow = {
					glow_radius = 2
					color = { 0.365  0.027  0.027 0.5 }
				}
				
				icon = {
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
					spritetype = corneredstretched
					color = { 0.55  0.86275  1.0 0.1 }
					size = { 100% 100% }
					
					modify_texture = {
						name = "Alpha" 
						spriteType = Corneredtiled
						spriteborder = { 16 16 }
						texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
						blend_mode = alphamultiply
					}
					
				}
				
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					
					icon = {
						name = "type_icon"
						size = { 50 50 }
						texture = "[GetSubUnitIcon( SubUnitTypeGlue.GetType )]"
					}
					
					textbox = {
						visible = "[SubUnitTypeGlue.IsCohort]"
						size = { 64 18 }
						using = BaseFontM
						using = White_FontColor #### using = Black_FontColor
						block "CountText" { text = "[SubUnitTypeGlue.GetTotal]" }
						align = center|nobaseline
						alwaystransparent = yes
						tooltip = "[SubUnitTypeGlue.GetTotalTooltip]"
						multiline = no
					}
					
					widget = {
						visible = "[Not( SubUnitTypeGlue.IsCohort )]"
						size = { 64 18 }
					}
					
					icon = {
						texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
						spritetype = corneredtiled
						spriteborder = { 30 0 }
						size = { 0 6 }
						layoutpolicy_horizontal = expanding
					}
					
					textbox = {
						size = { 64 18 }
						using = BaseFontM
						using = White_FontColor #### using = Black_FontColor
						block "CountText" { text = "[SubUnitTypeGlue.GetCount]" }
						align = center|nobaseline
						tooltip = "[SubUnitTypeGlue.GetAmountTooltip]"
						alwaystransparent = yes
						multiline = no
					}
					
				}
				
			}
			alpha = 0.95
		}	
	}
	
	type unit_combat_card = widget { #Because reasons
		block "Size" { minimumsize = { 74 110 } }

		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
		}
		
		background = {
			texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spritetype = corneredstretched
			color = { 0.365 0.227  0.127 0.4 }

			modify_texture = {
				name = "Alpha" 
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
			
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			
			icon = {
				size = { 100% 100% }
				using = flat_background_white
				
				modify_texture = {
					name = "Alpha" 
					spriteType = Corneredtiled
					spriteborder = { 16 16 }
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
				
				glow = {
					glow_radius = 2
					color = { 0.365  0.027  0.027 0.5 }
				}
				
				icon = {
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
					spritetype = corneredstretched
					color = { 0.55  0.86275  1.0 0.1 }
					size = { 100% 100% }
					
					modify_texture = {
						name = "Alpha" 
						spriteType = Corneredtiled
						spriteborder = { 16 16 }
						texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
						blend_mode = alphamultiply
					}
					
				}
				
				vbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding
					icon = {
						name = "type_icon"
						size = { 42 42 }
						texture = "[GetSubUnitIcon(SubUnitCombatCounts.GetType)]"	
					}
					
					textbox = {
						visible = "[SubUnitCombatCounts.IsCohort]"
						size = { 0 18 }
						layoutpolicy_horizontal = expanding
						using = BaseFontS
						using = White_FontColor #### using = Black_FontColor
						block "CountText" { text = "[SubUnitCombatCounts.GetTotal]" }
						align = center|nobaseline
						alwaystransparent = yes
						tooltip = "[SubUnitCombatCounts.GetTotalTooltip]"
						multiline = no
					}
					
					textbox = {
						visible = "[Not( SubUnitCombatCounts.IsCohort )]"
						size = { 0 18 }
						layoutpolicy_horizontal = expanding
						using = BaseFontS
						using = White_FontColor #### using = Black_FontColor
						block "CountText" { text = "[SubUnitCombatCounts.GetCount]" }
						align = center|nobaseline
						alwaystransparent = yes
						tooltip = "[SubUnitCombatCounts.GetTotalTooltip]"
						multiline = no
					}
					
					#widget = {
					#	visible = "[Not( SubUnitCombatCounts.IsCohort )]"
					#	size = { 64 18 }
					#}
				}
				
			}
			alpha = 0.95
		}	
	}

	type icon_card = margin_widget {
		block "Size" { size = { 46 46 } }
		
		icon = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			spriteborder = { 19 19 }
			size = { 100% 100% }
			position = { 0 0 }
			alpha = 0.75
			modify_texture = {
				name = "Alpha" 
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
			
			background = {
				texture = "gfx/interface/base_parts/horizontal_gradient_stretch.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spritetype = corneredstretched
				alpha = 0.5
				color = { 0  0  0 1 }
				
				modify_texture = {
					name = "Alpha" 
					spriteType = Corneredtiled
					spriteborder = { 16 16 }
					texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
					blend_mode = alphamultiply
				}
			}
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 1 1 }

			margin_widget = {
				size = { 100% 100% }
				icon = {
					size = { 100% 100% }
					texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
					spriteType = Corneredtiled
					spriteborder = { 100 100 }
					framesize = { 100 100 }
					
					margin_widget = {
						block "BorderMargin" { margin = { 2 2 } }
						size = { 100% 100% }
						
						margin_widget = {
							size = { 100% 100% }
							
							background = {
								using = flat_background_white
								shaderfile = "gfx/FX/pdxgui_default.shader"
								spriteType = corneredtiled		
								
								modify_texture = {
									name = "Alpha" 
									spriteborder = { 16 16 }
									spriteType = Corneredtiled
									texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
									blend_mode = alphamultiply
								}
							}
						}
						
						icon = {
							parentanchor = center
							size = { 36 36 }
							block "Icon" { texture = "gfx/interface/icons/_default.dds" }
						}
					}
				}
			}
		}
	}

	type icon_badge_round = widget { 
		size = { 48 48 }

		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				block "Border_color"
				{
					using = beige_background
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					framesize = { 200 200 }
				}
				size = { 100% 100% }
				parentanchor = center
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
				}
			}
			
			margin_widget = {
				margin = { 3 3 }
				size = { 100% 100% }
				icon = {
					using = flat_background_white
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 100% 100% }
					framesize = { 200 200 }
					parentanchor = center
					using = ButtonBorderTear
					#using = ButtonBorderDamage
					using = border_slightly_torn_alpha

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply

					}
				}
			}
		}
	}

	type icon_pie = piechart {
		minimumsize = { 44 44 }	
		#icon = {
		#	texture = "gfx/interface/pie_charts/pie_chart_alpha_80.dds"
		#	size = { 97% 97% }
		#	parentanchor = center
		#	color = { 0 0 0 0.25 }
		#}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/pie_charts/pie_chart_alpha_80_shadow.dds"
			alpha = 0.85
		}
		item = {
			pieslice = {
				texture = "gfx/interface/pie_charts/pie_chart_alpha_80.dds"
				block "SliceTooltip" { tooltip = "SliceTooltip" }
				block "SliceValue" { value = "" }
				block "SliceColor" { color = { 1 1 1 1 } }
				alpha = 0.85
			}
		}
		
		icon = {
			block "Icon" { texture = "gfx/interface/icons/_default.dds" }
			size = { 50% 50% }
			parentanchor = center
		}
		
	}
	
	type building_item_button = margin_widget {
		size = { 53 78 }
		
		background = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			shaderfile = "gfx/FX/pdxgui_default.shader"
			
			modify_texture = {
				name = "Alpha" 
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
		}
		
		icon = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			spriteborder = { 19 19 }
			size = { 90% 22 }
			position = { 0 -4 }
			alpha = 0.75
			modify_texture = {
				name = "Alpha" 
				spriteborder = { 16 16 }
				spriteType = Corneredtiled
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
			}
			
			flowcontainer = {
				parentanchor = center
				position = { 0 1 }
				ignoreinvisible = yes
				spacing = 3
				textbox = {
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					block "Text" { text = "888"  }
					autoresize = yes
					align = center|nobaseline
					
				}
				textbox = {
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					block "ExtraText"
					{ 
						visible = no
						text = "888"  
					}
					autoresize = yes
					align = center|nobaseline
					
				}
			}
			
			parentanchor = bottom|hcenter
			
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 4 4 }
			using = tooltip_es
			margin_widget = {
				size = { 100% 100% }
				margin_bottom = 24
				button = {
					size = { 46 46 }
					#using = button_tiled_texture_3
					texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					framesize = { 1 1 }
					frame = 1
					modify_texture = {
						spriteborder = { 16 16 }
						spriteType = Corneredtiled
						texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
						blend_mode = alphamultiply
					}
					#spriteType = Corneredtiled
					#spriteborder = { 100 100 }
					gfxtype = framedbuttongfx
					
					# ToDo: Add Sound.//?
					#clicksound = " ToDo "
					# oversound = " ToDo "
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					block "On_click" {}
					
					margin_widget = {
						margin = { 2 2 }
						size = { 46 46 }
						margin_widget = {
							size = { 100% 100% }
							datacontext = "[BuildingItem]"
							using = tooltip_es
							tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
							#tooltip = "[BuildingItem.GetBuildInfo]"
							background = {
								using = flat_background_white
								shaderfile = "gfx/FX/pdxgui_default.shader"
								spriteType = corneredtiled		
								modify_texture = {
									name = "Alpha" 
									spriteborder = { 16 16 }
									spriteType = Corneredtiled
									texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
									blend_mode = alphamultiply
								}
							}
							
							progressbar = {
								name = "progress_value"
								direction = vertical
								position = { 0 0 }
								size = { 100% 100% }
								progresstexture = "gfx/interface/base_parts/progressbar_green_tile.dds"
								block "Value"
								{
									value = "[BuildingItem.GetBuildProgress]"
								}
							}
							
						}
						
						icon = {
							enabled = "[Or( BuildingItem.CanBuild, BuildingItem.HasQueue )]"
							texture = "[GetBuildingIcon( BuildingItem.GetBuilding )]"
							size = { 40 40 }
							parentanchor = center
							alpha = "[Select_float(Or( BuildingItem.CanBuild, BuildingItem.HasQueue ),'(float)1.0','(float)0.5')]"
							modify_texture = {
								spriteborder = { 16 16 }
								spriteType = Corneredtiled
								texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
								blend_mode = alphamultiply
							}
						}
					}
				}
				button = {
					using = tooltip_es
					size = { 100% 100% }
					onrightclick = "[BuildingItem.CancelOrDestroy]"
					#enabled = "[Not( BuildingItem.CanBuild )]"
					visible = "[Not( BuildingItem.CanBuild )]"
					datacontext = "[BuildingItem]"
					tooltip = "BUILDING_ITEM_WITH_INSTRUCTIONS"
				}
				icon = {
					size = { 28 28 }
					parentanchor = top|right
					position = { 5 -8 }
					texture = "gfx/interface/icons/shared_icons/completed_task.dds"
					visible = "[BuildingItem.IsAtMaxAmount]"				
				}
			}
		}
	}
	
	#Filterbutton
	
	type check_filter = flowcontainer {
		spacing = 4
		widget = {
		
			size = { @Minimum_button_size @Minimum_button_size }
			
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin_left = 4
				margin_bottom = 4
				alpha = 0.5
				
				block "Drop_shadow" 
				{
					# If this is not a button/unclickable, set this visible to no.
					visible = yes
				}			
			}
			
			background = {
				name = "Base"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = flat_background_white
				spriteType = Corneredtiled
			}
			
			button = {
				using = button_tiled_texture
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				gfxtype = framedbuttongfx
				size = { 100% 100% }

				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4
				
				block "On_click" { }
				
				# ToDo: Add Sound.//?
				#clicksound = " ToDo "
				# oversound = " ToDo "
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
				}
				
				icon = {
					widgetanchor = center
					parentanchor = center					
					using = button_tiled_texture
					spriteType = Corneredtiled
					#spriteborder = { 200 200 }
					framesize = { 200 200}
					frame = 1
					
					#gfxtype = framedbuttongfx
					
					#upframe = 1
					#overframe = 2
					#downframe = 3
					#disableframe = 4
					
					size = { 20 20 }

					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/check_mark.dds"
						blend_mode = alphamultiply
						framesize = { 50 50 }
						#size = { 38 38 }
						
						block "Frame" 
						{
							
						}					
					}
				}
			}
		}
		tag = {
			block "TagText" { text = "MERCENARY_VIEW_FILTER_BY_HOSTILE" }
		}
	}
	
	#CheckCrossFilter
	
	type check_cross_filter = flowcontainer {
		spacing = 4
		widget = {
		
			size = { @Minimum_button_size @Minimum_button_size }
			
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin_left = 4
				margin_bottom = 4
				alpha = 0.5
				
				block "Drop_shadow" 
				{
					# If this is not a button/unclickable, set this visible to no.
					visible = yes
				}			
			}
			
			background = {
				name = "Base"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = flat_background_white
				spriteType = Corneredtiled
			}
			button = {
				using = button_tiled_texture
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				gfxtype = togglepushbuttongfx
				size = { 100% 100% }

				framesize = { 200 200 }
				upframe = 1
				uphoverframe = 2
				uppressedframe = 3
				downframe = 4
				downhoverframe = 5
				downpressedframe = 6
				
				block "On_click" { }
				
				# ToDo: Add Sound.//?
				#clicksound = " ToDo "
				# oversound = " ToDo "
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
				}
				
				icon = {
					widgetanchor = center
					parentanchor = center					
					using = button_tiled_texture
					spriteType = Corneredtiled
					framesize = { 200 200}
					frame = 1
					
					size = { 20 20 }
					
					modify_texture = {
						name = "Alpha"
						block "YesFrame"
						{
							texture = "gfx/interface/base_parts/check_mark.dds"
							framesize = { 50 50 }
							frame = 2
						}
						blend_mode = alphamultiply	
						block "FilterYes" { visible = no }
					}
					
					modify_texture = {
						name = "Alpha"
						block "NoFrame"
						{
							texture = "gfx/interface/base_parts/ex_mark.dds"
							framesize = { 50 50 }
							frame = 2
						}
						blend_mode = alphamultiply
						block "FilterNo" { visible = no }
					}
					
				}
			}
		}
		tag = {
			block "TagText" { text = "MERCENARY_VIEW_FILTER_BY_HOSTILE" }
		}
	}
	
	type top_window_header_for_layout = widget {
		size = { 0 40 }
		
		block "LineVisibility"
		{
			icon = {
				name = "Line"
				position = { 0 40 }
				using = flat_background

				spriteType = Corneredtiled
				size = { 100% 6 }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 6 }
				}
			}	
		}
		
		hbox = {
			spacing = 2
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = header_l
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_main.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 30 0 }
				}	
			}
			
			widget = {
				name = "Spacing_Widget_1"
				size = { 12 12 }
			}		
			
			container = {
				block "FlagOrIcon"
				{
				
				}
			}
			
			textbox = {
				name = "Title" 
				autoresize = yes
				using = HeaderFont
				using = Highlight_FontColor
				layoutpolicy_vertical = fixed
				margin_bottom = 4
				margin_left = 2
		
				block "Title_text" 
				{
					text = "Test Title"				
				}
				
			}

			block "TextOrIcon" 
			{
			
			}


			
			icon = {
				name = "Ornament"
				using = header_l_pattern
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled

				block "Max_header_pattern_width" #For small windows like barbarian province window.
				{

				}

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
			
			hbox = {
				name = "Buttons"
				spacing = 4
				
				block "White_buttons"
				{
					button_close = { 
						clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_close"
					}					
				}
			}
			
			widget = {
				name = "Spacing_Widget_2"
				size = { 14 14 }
				block "RightEdgeSpacer" {}
			}
		}	
	}
	
	type top_window_header_for_layout_state = widget {
		size = { 0 40 }
		
		block "LineVisibility"
		{
			icon = {
				name = "Line"
				position = { 0 40 }
				using = flat_background

				spriteType = Corneredtiled
				size = { 100% 6 }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 6 }
				}
			}	
		}
		button = {
			size = { 100% 100% }
			using = header_l
			name = "headershowbutton"
			visible = no
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 10 0 }
			}
			block "ShowButton" {}			
		}
		button = {
			size = { 100% 100% }
			using = header_l
			name = "headerhidebutton"
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 10 0 }
			}
			block "HideButton" {}		
			
		}
		hbox = {
			spacing = 2
			widget = {
				name = "Spacing_Widget_1"
				size = { 12 12 }
			}		
			
			container = {
				block "FlagOrIcon"
				{
				
				}
			}
			
			textbox = {
				name = "Title" 
				autoresize = yes
				using = HeaderFont
				using = Highlight_FontColor
				layoutpolicy_vertical = fixed
				margin_bottom = 4
				margin_left = 2
		
				block "Title_text" 
				{
					text = "Test Title"				
				}
				
			}

			block "TextOrIcon" 
			{
			
			}


			
			icon = {
				name = "Ornament"
				using = header_l_pattern
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = expanding
				spriteType = Corneredtiled
				
				block "Max_header_pattern_width" #For small windows like barbarian province window.
				{

				}

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
			
			hbox = {
				name = "Buttons"
				spacing = 4
				
				block "White_buttons"
				{
					button_close = { 
						clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_close"
					}					
				}
			}
			
			widget = {
				name = "Spacing_Widget_2"
				size = { 14 14 }
				block "RightEdgeSpacer" {}
			}
		}	
		block "Extras" {}
	}
	
	type top_window_header_for_layout_centered = widget { 
		size = { 0 40 }
		
		block "LineVisibility"
		{
			icon = {
				name = "Line"
				position = { 0 40 }
				using = flat_background

				spriteType = Corneredtiled
				size = { 100% 6 }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/thin_red_line_x20bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 6 }
				}
			}	
		}
		
		hbox = {
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = header_l
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 10 0 }
				}			
			}
			
			icon = {
				name = "Ornament1"
				using = header_l_pattern
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = shrinking
				spriteType = Corneredtiled

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
			
			textbox = {
				name = "Title" 
				autoresize = yes
				layoutpolicy_horizontal = fixed
				using = HeaderFont
				using = Highlight_FontColor
				layoutpolicy_vertical = fixed
				margin_bottom = 4
		
				block "Title_text" {
					text = "Test Title"				
				}
			}
			
			icon = {
				name = "Ornament2"
				using = header_l_pattern
				layoutpolicy_vertical = fixed
				layoutpolicy_horizontal = shrinking
				spriteType = Corneredtiled

				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 40 }
					#size = { 100% 100% }			
				}
			}
		}	
	}
	
	type icon_and_text_for_layout = widget {
		
		icon = {
			position = { 0 10 } 
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			parentanchor = vcenter
		}
		
		hbox = {
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			icon = {
				#position = { 0 0 }
				framesize = { 50 50 }
				size = { 36 36 }
				layoutpolicy_horizontal = fixed
				
				block "Icon"
				{
					texture = "gfx/interface/icons/shared_icons/leader.dds"
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 24}
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 -3 }
					size = { 100% 24 }					
					align = right
					elide = right
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					margin_right = 6
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type flag_and_text_for_layout = widget {
		
		icon = {
			position = { 0 10 } 
			texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
			spriteType = Corneredtiled
			spriteborder = { 30 0 }
			size = { 100% 6 }
			parentanchor = vcenter
		}
		
		hbox = {
			
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			country_flag_reworked = { 
				#blockoverride "Flag_contents"
				#{
				#}
				blockoverride "Size"
				{
					size = { 36 36 }
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 24}
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 -3 }
					size = { 100% 24 }					
					align = right
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					margin_right = 6
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type text_button_sort = widget { #TODO temp
		
		maximumsize = { 999 24 }
		minimumsize = { 0 24 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}			
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = {
			name = "Button_Outline_Inner"
			texture = "gfx/interface/base_parts/button_color_400fs.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }

			framesize = { 100 100 }
			upframe = 1
			uphoverframe = 4
			uppressedframe = 5
			downframe = 10
			downhoverframe = 9
			downpressedframe = 9
			
			block "DownState" {  }
			
		}
		
		button = {
			name = "Button_Outline"
			texture = "gfx/interface/base_parts/button_color_red_imp19c_darker.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = togglepushbuttongfx
			size = { 100% 100% }

			framesize = { 100 100 }
			upframe = 3
			uphoverframe = 4
			downhoverframe = 4
			downpressedframe = 5
			downframe = 3
			disableframe = 6
			
			block "DownState" {  }
			block "On_click" { } 
			
			# ToDo: Add Sound.//Primary button or increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			using = ButtonBorderTear
			
			modify_texture = {
				name = "Decay"
				texture = "gfx/interface/base_parts/demanded_rot.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
			}
			
			hbox = {
				name = "Center_text_and_icon"
				widgetanchor = center
				parentanchor = center
				position = { 0 -2 }
				
				visible = yes

				widget = {
					name = "Spacing_Widget_1"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}

				icon = {
					framesize = { 50 50 }
					size = { 34 34 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
						visible = yes
					}
				}

				widget = {
					name = "Spacing_Widget_2"
					size = { 2 5 }
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
				}
				
				textbox = {
					name = "Text"
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					autoresize = yes
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
					
					block "Button_text"
					{
						text = "Button Text"
						fontcolor = { 0.96 0.96 0.96 1 }
					}
				}
				
				widget = {
					name = "Spacing_Widget_3"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}
			}
		}
	}
	
	# Text Button
	type text_button_square_hollow = widget {
		block "MinimumSize" { minimumsize = { 0 @Minimum_button_size } }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5		
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled	
		}
		
		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			
			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			widget = {
				name = "Decorations"
				size = { 100% 100% }

				background = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/button_lines_brown.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					alpha = 0.5
					spriteborder = { 22 0 }

					modify_texture = {
						name = "Decay"
						texture = "gfx/interface/base_parts/button_lines_brown.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						alpha = 0.4
					}					
				}

				background = {
					name = "side_pattern_dotted"
					texture = "gfx/interface/base_parts/button_dotted_pattern.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = Corneredtiled
					spriteborder = { 22 0 }
					using = pattern_decay_alpha
				}				
			}
			
			# Torn edges
			#modify_texture = {
			#	name = "Decay"
			#	texture = "gfx/interface/base_parts/demanded_rot.dds"
			#	blend_mode = alphamultiply
			#	spriteType = Corneredtiled
			#}
			
			hbox = {	
	
				widget = {
					name = "Spacing_Widget_1"
					size = { 3 3 }
				}
	
				widget = {
					
					block "Left_size_and_visibility"
					{
						size = { 26 @Minimum_button_size }
						visible = no
					}				
	
					textbox = {
						name = "LeftValue"
						using = BaseFontS
						autoresize = yes
						position = { 0 -2 }
						align = center
						parentanchor = center	
						
						block "Left_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					} 
				}
				
				button = {
					alwaystransparent = yes
					
					#using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 100 20 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					gfxtype = framedbuttongfx
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					modify_texture = {
						name = "LightenCond"
						using = flat_background_white
						blend_mode = colordodge
						spriteType = Corneredtiled
						spriteborder = { 25 0 } 
						#size = { 100% 100% }		
						alpha = 0
					}
					
					
					state = {
						name = "lighten_condition"
						
						modify_texture = {
							name = LightenCond
							alpha = 0.4
						}
						
						duration = 0.15
						
						block "LightenCondition"
						{
							
						}
					}
					
					state = {
						name = "darken_condition"
						
						modify_texture = {
							name = LightenCond
							alpha = 0
						}
						
						duration = 0.15
						
						block "DarkenCondition"
						{
							
						}
					}
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 6 6 }
						#size = { 100% 100% }			
					}
					
					# Button with an Icon on the left and left aligned text after it.
					hbox = {
						name = "Left_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Left_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
	
						container = {
							icon = {
								position = { 0 2 }
								framesize = { 50 50 }
								size = { 34 34 }
								
								block "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/leader.dds"
								}
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 2 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
				
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text and an icon to the left of the text.
					hbox = {
						name = "Center_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Center_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
	
						icon = {
							framesize = { 50 50 }
							size = { 34 34 }
							
							block "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/leader.dds"
								visible = yes
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							autoresize = yes
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
							
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
					}
	
					# Button with left aligned text.
					hbox = {
						name = "Left_Text"
						widgetanchor = center
						parentanchor = center
						
						position = { 0 -2 }
						
						block "Left_text"
						{
							visible = no
						}
							
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
				
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_2"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text.
					textbox = {
						name = "Text"
						position = { 0 -2 }
						using = BaseFontS
						widgetanchor = center
						parentanchor = center
						align = center
		
						block "Button_text"
						{
							text = "Button Text"
							fontcolor = { 0.96 0.96 0.96 1 }
						}
						
						block "Center_text" 
						{
							visible = no
						}
					}
				}
	
				widget = {
					block "Right_size_and_visibility"
					{
						size = { 26 @Minimum_button_size }
						visible = no
					}
	
					textbox = {
						name = "RightValue"
						using = BaseFontS
						autoresize = yes
						position = { 1 -2 }
						align = center
						parentanchor = center	
						
						block "Right_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 3 3 }
				}
			}
		}
	}	
	
	type invention_tree_button = widget {
		block "MinimumSize" { minimumsize = { 0 @Minimum_button_size } }
		
		using = DropShadow
		
		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			block "On_click" { }
			glow = {
				glow_radius = 5
				color = { 0.95  0.72  0.44 1 }
				block "Glow" { visible = no }
			}
			
			state = {
				trigger_on_create = yes
			
				name = expand
				next = squeeze
				duration = 0.45
				glow_radius = 9
			}
			
			state = {
				name = squeeze
				next = expand
				duration = 0.45
				glow_radius = 4
			}
			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "

			using = ButtonBorderTear
			#using = ButtonBorderDamage
			using = border_slightly_torn_alpha
			
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				icon = {
					name = "Base"
					using = flat_background_white
					spriteType = Corneredtiled	
					size = { 100% 100% }
					using = border_slightly_torn_alpha
					
				}
				widget = {
					name = "Decorations"
					size = { 100% 100% }
				
					#background = {
					#	spriteType = Corneredtiled
					#	texture = "gfx/interface/base_parts/button_lines_brown.dds"
					#	shaderfile = "gfx/FX/pdxgui_default.shader"
					#	alpha = 0.5
					#	spriteborder = { 22 0 }
				
					#	modify_texture = {
					#		name = "Decay"
					#		texture = "gfx/interface/base_parts/button_lines_brown.dds"
					#		blend_mode = alphamultiply
					#		spriteType = Corneredtiled
					#		alpha = 0.4
					#	}					
					#}
					background = {
						name = "side_pattern_dotted"
						texture = "gfx/interface/base_parts/button_dotted_pattern.dds"
						shaderfile = "gfx/FX/pdxgui_default.shader"
						spriteType = Corneredtiled
						spriteborder = { 22 0 }
						using = pattern_decay_alpha
					}		

				}
			}
			
			hbox = {	
	
				widget = {
					name = "Spacing_Widget_1"
					size = { 3 3 }
				}
	
				widget = {
					
					block "Left_size_and_visibility"
					{
						size = { 26 @Minimum_button_size }
						visible = no
					}				
	
					textbox = {
						name = "LeftValue"
						using = BaseFontS
						autoresize = yes
						position = { 0 -2 }
						align = center
						parentanchor = center	
						
						block "Left_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					} 
				}
				
				button = {
					alwaystransparent = yes
					
					#using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 100 20 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					gfxtype = framedbuttongfx
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					modify_texture = {
						name = "LightenCond"
						using = flat_background_white
						blend_mode = colordodge
						spriteType = Corneredtiled
						spriteborder = { 25 0 } 
						#size = { 100% 100% }		
						alpha = 0
					}
					
					
					state = {
						name = "lighten_condition"
						
						modify_texture = {
							name = LightenCond
							alpha = 0.4
						}
						
						duration = 0.15
						
						block "LightenCondition"
						{
							
						}
					}
					
					state = {
						name = "darken_condition"
						
						modify_texture = {
							name = LightenCond
							alpha = 0
						}
						
						duration = 0.15
						
						block "DarkenCondition"
						{
							
						}
					}
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 6 6 }
						#size = { 100% 100% }			
					}
					
					# Button with an Icon on the left and left aligned text after it.
					hbox = {
						name = "Left_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Left_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
	
						container = {
							icon = {
								position = { 0 2 }
								framesize = { 50 50 }
								size = { 34 34 }
								
								block "Icon"
								{
									texture = "gfx/interface/icons/shared_icons/leader.dds"
								}
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 2 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
				
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text and an icon to the left of the text.
					hbox = {
						name = "Center_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Center_text_and_icon"
						{
							visible = no
						}
	
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
	
						icon = {
							framesize = { 50 50 }
							size = { 34 34 }
							
							block "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/leader.dds"
								visible = yes
							}
						}
	
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							autoresize = yes
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
							
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 5 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
					}
	
					# Button with left aligned text.
					hbox = {
						name = "Left_Text"
						widgetanchor = center
						parentanchor = center
						
						position = { 0 -2 }
						
						block "Left_text"
						{
							visible = no
						}
							
						widget = {
							name = "Spacing_Widget_1"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
				
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
						}
						
						widget = {
							name = "Spacing_Widget_2"
							size = { 5 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text.
					textbox = {
						name = "Text"
						position = { 0 -2 }
						using = BaseFontS
						widgetanchor = center
						parentanchor = center
						align = center
		
						block "Button_text"
						{
							text = "Button Text"
							fontcolor = { 0.96 0.96 0.96 1 }
						}
						
						block "Center_text" 
						{
							visible = no
						}
					}
				}
	
				widget = {
					block "Right_size_and_visibility"
					{
						size = { 26 @Minimum_button_size }
						visible = no
					}
	
					textbox = {
						name = "RightValue"
						using = BaseFontS
						autoresize = yes
						position = { 1 -2 }
						align = center
						parentanchor = center	
						
						block "Right_text_and_color"
						{
							text = "88"
							using = Negative_FontColor
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 3 3 }
				}
			}
		}
	}	
	
	type flat_icon_button_small = widget {  
		size = { 26 26 }
		
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
			
			block "Drop_shadow" 
			{
				# If this is not a button/unclickable, set this visible to no.
				visible = yes
			}
		}
		
		background = {
			name = "Base"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = flat_background_white
			spriteType = Corneredtiled
		}
		
		button = { 
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4

			# ToDo: Add Sound.//?
			#clicksound = " ToDo "
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = corneredtiled
				spriteborder = { 6 6 }
			}
			
			button = {
				size = { 26 26 }
				using = button_tiled_texture
				spriteType = corneredtiled
				gfxtype = framedbuttongfx
				widgetanchor = center
				parentanchor = center
				
				framesize = { 200 200 }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4				
				
				block "On_click" {  }
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 6 6 }
					
					block "Icon" 
					{
						using = flat_background
						size = { 22 22 }
					}					
				}
			}
		}
	}
	
	type category_button_open = widget {
		#background = {
		#	name = "Shadow"
		#	texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
		#	shaderfile = "gfx/FX/pdxgui_default.shader"
		#	spriteType = corneredtiled
		#	spriteborder = { 8 8 }
		#	margin_left = 4
		#	margin_bottom = 4
		#	alpha = 0.5
			
		#	block "Drop_shadow" 
		#	{
				# If this is not a button/unclickable, set this visible to no.
		#		visible = no
		#	}			
		#}
		
		button = {
			name = "Button_Outline"
			using = beige_medium_background
			#using = beige_dark_background
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }

			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			using = border_slightly_torn_alpha
			
			block "On_click" { }
			
			# ToDo: Add Sound.//primary button or increment
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_increment"
			# oversound = " ToDo "
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/button2_outer_nobottom_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 6 6 }
			}

			background = {
				name = "side_pattern"
				using = beige_medium_background
				shaderfile = "gfx/FX/pdxgui_default.shader"
				margin = { -2 -3 }
				modify_texture = {
					texture = "gfx/interface/base_parts/button_dotted_pattern.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 0 }
					blend_mode = alphamultiply
				}
			}
			
			hbox = {	
				name = "button_content_box"
				
				widget = {
					name = "Spacing_Widget_1"
					size = { 3 3 }
				}
				
				button = {
					alwaystransparent = yes
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					size = { 100 20 }
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					gfxtype = framedbuttongfx
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4

					#widget = {
						#name = "Decorations"
						#size = { 100% 100% }

						#background = {
						#	name = "side_pattern"
						#	texture = "gfx/interface/base_parts/pattern.dds"
						#	shaderfile = "gfx/FX/pdxgui_default.shader"
						#	spriteType = Corneredtiled
						#	spriteborder = { 22 0 }
							#using = pattern_decay_alpha
						#}				
					#}
					
					#modify_texture = {
					#	name = "Alpha"
					#	texture = "gfx/interface/base_parts/button2_inner_x8y8bd_alpha.dds"
					#	blend_mode = alphamultiply
					#	spriteType = Corneredtiled
					#	spriteborder = { 6 6 }
						#size = { 100% 100% }			
					#}
					
					#icon = {
					#	name = "Pattern"
					#	texture = "gfx/interface/base_parts/button2_pattern_x50bd.dds"
					#	spriteType = Corneredtiled
					#	spriteborder = { 25 0 }
					#	size = { 100% 100% }
					#}
					
					# Button with centered text and an icon to the left of the text.
					hbox = {
						name = "Center_text_and_icon"
						widgetanchor = center
						parentanchor = center
						position = { 0 -2 }
						
						block "Center_text_and_icon"
						{
							visible = no
						}
			
						widget = {
							name = "Spacing_Widget_1"
							size = { 4 2 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
			
						icon = {
							framesize = { 50 50 }
							size = { 40 40 }
							
							block "Icon"
							{
								texture = "gfx/interface/icons/shared_icons/leader.dds"
							}
						}
			
						widget = {
							name = "Spacing_Widget_2"
							size = { 2 5 }
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
						}
						
						textbox = {
							name = "Text"
							using = BaseFontS
							using = White_FontColor #### using = Black_FontColor
							autoresize = yes
							layoutpolicy_horizontal = fixed
							layoutpolicy_vertical = fixed
							
							block "Button_text"
							{
								text = "Button Text"
								fontcolor = { 0.96 0.96 0.96 1 }
							}
							
						}
						
						widget = {
							name = "Spacing_Widget_3"
							size = { 4 5 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
						}
					}
					
					# Button with centered text.
					textbox = {
						name = "Text"
						position = { 0 -2 }
						using = BaseFontS
						using = White_FontColor #### using = Black_FontColor
						widgetanchor = center
						parentanchor = center
						align = center
			
						block "Button_text"
						{
							text = "Button Text"
							fontcolor = { 0.96 0.96 0.96 1 }
						}
						
						block "Center_text" 
						{
							visible = no
							
						}
					}
				}
				
				widget = {
					name = "Spacing_Widget_2"
					size = { 3 3 }
				}
			}
		} 
	}	
	
	type category_button_maximized = widget {
		minimumsize = { 0 1 }
		position = { 0 0 }
		name = "big"
		category_button_open = {
			size = { 100% 100% } 
			position = { 0 0 }
		}
		
		icon = {
			name = "LineLeft"
			position = { 0 1 }
			using = beige_medium_background
			spriteType = Corneredtiled
			size = { 2 2 }
			parentanchor = bottom
		}
		icon = {
			name = "LineRight"
			position = { 0 1 }
			using = beige_medium_background
			spriteType = Corneredtiled
			parentanchor = right|bottom
			size = { 2 2 }
		}
		
		state = {
			name = _show
			
			animation = {
				alpha = 1
			}
			
			duration = 0.25
			
		}
		
		state = {
			name = _show
			
			on_start = "[PdxGuiWidget.TriggerAnimation('upstate')]" 
		}
		
		state = {
			name = "upstate"
			
			animation = {
				block "MaxSize" { size = { 180 34 } }
			}
			
			animation = {
				position = { 0 0 } 
			}
			bezier = { 1 0.2 0.7 1 }
			duration = 0
		}
		
		state = {
			name = _hide
			
			animation = {
				alpha = 0
			}
			
			animation = {
				position = { 0 33 }
			}
			
			animation = {
				size = { 180 3 }
			}
			
			duration = 0
			
		}
		
	}
	type category_button_minimized = widget {
		name = "small"
		minimumsize = { 0 26 }
		#Set a size since this animates
		
		text_button_square = { 
			size = { 100% 28 }
		}
		icon = {
			name = "LineLeft"
			position = { -2 30 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			size = { 2 2 }
		}
		icon = {
			name = "LineCenter"
			position = { 0 30 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			size = { 100% 2 }
		}
		icon = {
			name = "LineRight"
			position = { 2 30 }
			using = button_tiled_texture
			spriteType = Corneredtiled
			size = { 2 2 }
			parentanchor = right
		}
		
		state = {
			name = _show
			
			animation = {
				alpha = 1
			}
			
			duration = 0.05
			
		}
		
		state = {
			name = _hide
			
			animation = {
				alpha = 0
			}
			
			duration = 0
			
		}
		
	}
	type category_tab = container {
		ignoreinvisible = yes
		tab_button = {
			block "MinSize"
			{
				size = { @mincategorybuttonwidth @mincategorybuttonheight }
			}
			visible = no
			block "MinVisible"
			{
				visible = yes
			} 
			blockoverride "On_click" 
			{
				block "ClickFunction"
				{
				}
			}
			block "SmallButtonClick"
			{
			}
		}
		category_button_maximized = { 
			block "MaxSize"
			{
				size = { @maxcategorybuttonwidth @maxcategorybuttonheight }
			}
			block "MaxVisible"
			{
				visible = no
			}
		}
	}
	
	type TopBarWindowButton = container {
		ignoreinvisible = yes
		parentanchor = center
		button = {
			block "ButtonColor"{ texture = "gfx/interface/base_parts/white_button_color_200fs.dds" }
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = framedbuttongfx
			size = { @SideBarButtonSize @SideBarButtonSize }
			parentanchor = center
			
			block "Details"
			{

			}
			
			framesize = { 100 100 }
			upframe = 1
			overframe = 5
			downframe = 3
			disableframe = 4
			using = EnlargeButton
			modify_texture = {
				name = "Alpha"
				block "Icon"
				{
					texture = "gfx/interface/icons/menu_buttons/menu_mission.dds"
				}
				blend_mode = alphamultiply			
			}
		}
		
		button = {
			texture = "gfx/interface/base_parts/white_button_color_200fs.dds"
			spriteType = Corneredtiled
			spriteborder = { 100 100 }
			gfxtype = framedbuttongfx
			size = { @SideBarButtonSizeEnlarged @SideBarButtonSizeEnlarged }
			parentanchor = center
			
			block "Details"
			{
			
			}
			block "Details_toggled"
			{
					
			}
			
			framesize = { 100 100 }
			upframe = 5
			overframe = 5
			downframe = 3
			disableframe = 4
			modify_texture = {
				name = "Alpha"
				block "Icon"
				{
					texture = "gfx/interface/icons/menu_buttons/menu_mission.dds"
				}
				blend_mode = alphamultiply			
			}
		}
		
	}
	type pop_widget = widget {
		size = { 60 114 }
		icon = {
			name = "background_image"
			size = { 120 250 }
			position = { 0 0 }
			scale = 0.5
			alpha = 1
			block "BackgroundTexture" { texture = "gfx/interface/base_parts/background_x60bd_alpha.dds" }
			spriteType = Corneredtiled
			parentanchor = hcenter
			
			modify_texture = { 
				name = "bottom gradient"
				texture = "gfx/interface/base_parts/gradient_black.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 30 4 }
			}
			
			modify_texture = {
				name = "edge_alpha"
				texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
			
		}
		progressbar = {
			size = { 56 114 }
			position = { 2 0 }
			noprogresstexture = "gfx/interface/base_parts/gradient_black.dds"
			alpha = 0.7
			parentanchor = vcenter
			direction = vertical
			block "HappinessBarValue"
			{
				visible = no
				value = 1
			}
			marker = {
				container = {
					name = "progress_marker"           
					alwaystransparent = yes
					alpha = 1.4
					position = { 0 -10 }
					#icon = {
					#	position = { 0 0 }
					#	alwaystransparent = yes
					#	using = flat_background_white
					#	parentanchor = vcenter
					#	size = { 62 6 }
					#	alpha = 0.8
					#}

					icon = {
						position = { 0 0 }
						alwaystransparent = yes
						using = selected_color_texture
						modify_texture = {
							blend_mode = alphamultiply
							texture = "gfx/interface/base_parts/thin_red_line_x20bd.dds"
						}
						parentanchor = vcenter
						size = { 57 4 }
						using = DropShadow
						block "MarkerVisible" {}
					}
					icon = {
						alwaystransparent = yes
						texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
						framesize = { 50 50 }
						block "Frame" { frame = 1 }
						size = { 24 24 }
						parentanchor = vcenter
						position = { -6 0 }
						block "MarkerVisible" {}
						
					}
				}
			}
		}
		widget = { 
			size = { 100% 100% }
			allow_outside = yes 
			position = { 0 18 }
			parentanchor = hcenter
			textbox = {
				name = "Text"
				size = { 100% 24 }					
				align = center
				using = BaseFontM
				using = White_FontColor #### using = Black_FontColor
				parentanchor = bottom
				block "NumPops" 
				{
					text = "88"
				} 
			}
			icon = {
				size = { 38 38 }
				position = { 0 -22 }
				parentanchor = bottom|hcenter 
				block "Icon"
				{
					texture = "gfx/interface/icons/_default.dds"
				}
				
				glow = {
					glow_radius = 4
					color = { 1 1 1 1 }
				}
			}
		}
	}
	type fixed_size_progressbar = margin_widget {
		
		block "size"
		{
			size = { 158 7 }
		}
		
		icon = {
			using = flat_background
			size = { 4 100% }
		}
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 6 0 }
			
			widget = {
				size = { 100% 100% }
				icon = {
					name = "progress_frame"
					texture = "gfx/interface/base_parts/progressbar_background_frame.dds"
					
					minimumsize = { 0 7 }
					size = { 100% 100% }
					color = { 0.7 0.7 0.7 1 }
					block "ProgressAlpha" { alpha = 0.5 }
				}
				progressbar = {
					name = "progress_value"
					position = { 0 0 }
					size = { 100% 100% }
					alpha = 1
					using = progressbar_flat_green
					block "Value"
					{
						value = 1
					}
					
					marker = {
						container = {
							name = "progress_marker2"           
							alwaystransparent = yes
							icon = {
								texture = "gfx/interface/icons/shared_icons/plus.dds"
								size = { 23 23 }
								position = { -24 0 }
								color = { 0 0 0 1 }
								block "PlusMarker" { visible = no }
							}
							icon = {
								texture = "gfx/interface/icons/shared_icons/plus.dds"
								size = { 23 23 }
								position = { -30 0 }
								color = { 0 0 0 1 }
								block "PlusMarker" { visible = no }
							}
							icon = {
								texture = "gfx/interface/icons/shared_icons/minus.dds"
								size = { 23 23 }
								position = { -24 0 }
								color = { 0.4 0 0 1 }
								block "MinusMarker" { visible = no }
							}
							icon = {
								texture = "gfx/interface/icons/shared_icons/minus.dds"
								size = { 23 23 }
								position = { -30 0 }
								color = { 0.4 0 0 1 }
								block "MinusMarker" { visible = no }
							}
						}
					}
					
				}
				#icon = {
				#	name = "progress_frame_gradient"
				#	texture = "gfx/interface/base_parts/horizontal_gradient_stretch_black.dds"
				#	mirror = horizontal
				#	minimumsize = { 0 7 }
				#	size = { 100% 100% }
				#	alpha = 0.3
				#}
			}
		}
		
		icon = {
			using = flat_background
			parentanchor = right
			size = { 4 100% }
		}
	}
	
	type icon_and_text_progress = widget { #fixed size
		# Static Size
		block "TotalSize" { size = { 182 38 } }
		minimumsize = { 102 38 }
		
		fixed_size_progressbar = {
			position = { 7 28 }
			block "BarSize" { blockoverride "size" { size = { 100% 7 } } }
			#Passes "Value" override
		}
		
		hbox = {
			
			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			container = {
				icon = {
					position = { 4 -4 }
					framesize = { 50 50 }
					size = { 32 32 }
					layoutpolicy_horizontal = fixed
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
					}
					icon = {
						texture = "gfx/interface/icons/shared_icons/plus.dds"
						block "UpIndicator" { visible = no }
						position = { -2 12 }
					}
					icon = {
						texture = "gfx/interface/icons/shared_icons/minus.dds"
						block "DownIndicator" { visible = no }
						position = { -2 12 }
					}
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 24}
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					position = { 0 -5 }
					size = { 100% 24 }					
					align = right
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
	
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	type icon_and_text_progress_S = widget { #fixed Size
		# Static Size
		size = { 98 38 } 
		
		fixed_size_progressbar = {
			position = { 2 28 }
			blockoverride "size"
			{
				size = { 98 7 }
			}
			#Passes "Value" override
		}
		
		hbox = {
			
			widget = {
				size = { 2 2 }
				layoutpolicy_horizontal = fixed
			}
			
			container = {
				icon = {
					position = { 0 -4 }
					framesize = { 50 50 }
					size = { 26 26 }
					layoutpolicy_horizontal = fixed
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
					}
					icon = {
						texture = "gfx/interface/icons/shared_icons/plus.dds"
						block "UpIndicator" { visible = no }
						position = { -11 6 }
					}
					icon = {
						texture = "gfx/interface/icons/shared_icons/minus.dds"
						block "DownIndicator" { visible = no }
						position = { -11 6 }
					}
				}
			}

			widget = {
				size = { 4 4 }
				layoutpolicy_horizontal = fixed
			}
			
			widget = {
				size = { 0 12 }
				layoutpolicy_horizontal = expanding
				
				textbox = {
					name = "Text"
					parentanchor = right
					position = { 0 -12 }
					size = { 100% 24 }					
					align = right
					elide = right
					using = BaseFontS
					using = White_FontColor #### using = Black_FontColor
					fontsize = 14
	
					block "Text"
					{
						align = right
						text = "888.88%"
					}
				}
			}			
		}
	}
	
	type button_round = widget { 
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			size = { 100% 100% }
			position = { -2 2 }
			parentanchor = center
			alpha = 0.6
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				texture = "gfx/interface/base_parts/circle_60.dds"
				size = { 100% 100% }
				parentanchor = center
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					size = { 100% 100% }
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					parentanchor = center

					# ToDo: Add Sound.//?
					#clicksound = " ToDo "
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
						#spriteType = corneredtiled
						#spriteborder = { 6 6 }
					}
					
					margin_widget = {
						block "IconMargins" { margin = { 2 2 } }
						size = { 100% 100% }
						button = {
							block "IconButtonSize" { size = { 100% 100% } }
							position = { -1 -1 }
							using = flat_background_white
							spriteType = corneredtiled
							gfxtype = framedbuttongfx
							widgetanchor = center
							parentanchor = center
							
							framesize = { 200 200 }
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 4				
							block "On_click" { }
							modify_texture = {
								name = "Alpha"
								texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
								blend_mode = alphamultiply
								#spriteType = Corneredtiled
								#spriteborder = { -2 -2 }
								
								block "Icon" 
								{
									texture = "gfx/interface/icons/_default.dds"
								}					
							}
						}
					}
				}
			}
		}
	}
	
	type white_button_round = widget { 
		size = { 48 48 }
		
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			button = {
				texture = "gfx/interface/base_parts/white_background.dds"
				gfxtype = framedbuttongfx
				alpha = 0.85
				size = { 100% 100% }
				upframe = 1
				overframe = 2
				downframe = 3
				disableframe = 4
				parentanchor = center
				name = "Base"
				
				block "On_click" {}
				block "ClickSound" {} #Todo
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/round_button_frame_24_alpha.dds"				
					blend_mode = alphamultiply
				}
				margin_widget = {
					size = { 100% 100% }
					margin = { 2 2 }
					icon = {
						texture = "gfx/interface/base_parts/white_background.dds"
						size = { 100% 100% }
						modify_texture = {
							name = "Alpha"
							blend_mode = alphamultiply
							
							block "Icon" 
							{
								texture = "gfx/interface/icons/_default.dds"
							}					
						}
					}
				}
			}
		}
	}

	type button_round_inverted = widget { 
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			size = { 100% 100% }
			position = { -2 2 }
			parentanchor = center
			alpha = 0.3
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				using = button_tiled_texture 
				framesize = { 200 200 }
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				size = { 100% 100% }
				parentanchor = center
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
				}
				
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					using = flat_background_white
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					size = { 100% 100% }
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					parentanchor = center

					block "ClickSound" {}
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
						#spriteType = corneredtiled
						#spriteborder = { 6 6 }
					}
					
					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }
						button = {
							block "IconButtonSize" { size = { 100% 100% } }
							position = { 0 0 }
							using = button_tiled_texture 
							spriteType = Corneredtiled
							spriteborder = { 200 200 }
							gfxtype = framedbuttongfx
							widgetanchor = center
							parentanchor = center
							framesize = { 200 200 }
							upframe = 1
							overframe = 2
							downframe = 3
							disableframe = 4				
							block "On_click" { }
							modify_texture = {
								name = "Alpha"
								texture = "gfx/interface/base_parts/button2_outer_x8y8bd_alpha.dds"
								blend_mode = alphamultiply
								
								block "Icon" 
								{
									texture = "gfx/interface/icons/_default.dds"
								}					
							}
							icon = {
								alwaystransparent = yes
								size = { 100% 100% }
								block "StandardIcon" { visible = no }
							}
						}
					}
				}
			}
		}
	}

	type button_delete_item = widget {
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			size = { 100% 100% }
			position = { -2 2 }
			parentanchor = center
			alpha = 0.25
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				using = flat_background 
				framesize = { 100 100 }
				#spriteType = Corneredtiled
				#spriteborder = { 200 200 }
				size = { 100% 100% }
				parentanchor = center
				modify_texture = {
					name = "Circle_shape"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
				}
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					using = flat_background_white
					spriteType = Corneredtiled
					spriteborder = { 200 200 }
					gfxtype = framedbuttongfx
					size = { 100% 100% }
					framesize = { 200 200 }
					parentanchor = center
					clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_goto"
					# oversound = " ToDo "
					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
					}

					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }
						button = {
							size = { 100% 100% }
							using = flat_background
							gfxtype = framedbuttongfx
							#framesize = { 100 100 }	
							#frame = 14		
							block "On_click" { }
							modify_texture = {
								name = "cross_shape"
								blend_mode = alphamultiply
								texture = "gfx/interface/base_parts/cross_flat.dds"				
							}
						}
					}
				}
			}
		}
	}

	#type button_delete_item = widget { 
	#	size = { 32 32 }
		# Todo Add Sound. 
	#	blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_goto" }
		### oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
	#	blockoverride "Icon"
	#	{
	#		texture = "gfx/interface/base_parts/cross_flat.dds"
	#	}
	#	blockoverride "Border_color" 
	#	{
	#		using = negative_color_texture
	#	}
	#}






	
	type gw_workpower = flowcontainer {
		spacing = 1
		icon = {
			size = {30 30}
			parentanchor = vcenter|left
			widgetanchor = vcenter|left

			texture = "gfx/interface/buttons/button_square_42.dds"
			icon = {
				parentanchor = vcenter|hcenter
				widgetanchor = vcenter|hcenter
				block "icon_template" {
					using = icon_pop_slaves
				}
				size = {25 25}
			}
		}

		icon = {	
			parentanchor = vcenter|hcenter
			widgetanchor = vcenter|hcenter
			size = {30 30}
			
			texture = "gfx/interface/tiles/list_slot_corner_tiles.dds"
			spriteType = Corneredtiled
			spriteborder = { 8 8 }

			textbox = {
				parentanchor = vcenter|hcenter
				widgetanchor = vcenter|hcenter
				align = hcenter|nobaseline
				block "workpower_text" {
					#text = "[BuildGreatWorkWindow.GetWorkersSlaves]"
					text = 1
				}

				using = MarbleButtonFontS
			}
		}
	}
	
	type button_round_inverted_toggle = widget { 
		size = { 48 48 }
		
		icon = {
			texture = "gfx/interface/base_parts/roung_shadow_52.dds"
			size = { 100% 100% }
			position = { -2 2 }
			parentanchor = center
			alpha = 0.6
		}
		margin_widget = {
			size = { 100% 100% }
			margin = { 2 2 }
			icon = {
				name = "Base"
				using = button_tiled_texture
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				framesize = { 200 200 }
				size = { 100% 100% }
				parentanchor = center
				
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/circle_60.dds"
					blend_mode = alphamultiply
					#spriteType = corneredtiled
					#spriteborder = { 6 6 }
				}
				using = border_slightly_torn_alpha
				using = ButtonBorderTear
				
			}
			
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				button = {
					texture = "gfx/interface/base_parts/button_allframes.dds"
					spriteType = Corneredtiled
					spriteborder = { 100 100 }
					gfxtype = togglepushbuttongfx
					size = { 100% 100% }
					framesize = { 100 100 }
					upframe = 1
					uphoverframe = 2
					uppressedframe = 2
					downframe = 10
					downhoverframe = 10
					downpressedframe = 10
					disableframe = 1
					parentanchor = center
					block "On_click" { }
					block "ClickSound" {}
					# oversound = " ToDo "

					using = border_slightly_torn_alpha

					
					modify_texture = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/circle_60.dds"
						blend_mode = alphamultiply
						#spriteType = corneredtiled
						#spriteborder = { 6 6 }
					}
					
					margin_widget = {
						margin = { 0 0 }
						size = { 100% 100% }
						icon = {
							alwaystransparent = yes
							size = { 100% 100% }
							block "StandardIcon" { visible = no }
						}
					}
				}
			}
		}
	}
	
	type checkbox_entry = widget {
		# Size needed
		minimumsize = { 0 32 }
		
		hbox = {
			widget = {
				size = { 4 4 }
			}
			
			check_box_button = { 
				#block "Frame"
				#{
				##	blockoverride "Frame" { frame = 1 }
				#} 
				#block "On_click"
				#{
				##	blockoverride "On_click" {  }
				#}	
			}

			widget = {
				size = { 4 4 }
			}
			
			widget = {
				size = { 0 24 }
				layoutpolicy_horizontal = expanding
				#using = NoninteractableBG
				blockoverride "Margins"
				{
					margin = { 8 6 }
					margin_left = 2
				}
				textbox = {
					name = "Text"
					
					position = { 0 1 }
					size = { 100% 24 }					
					align = right|nobaseline
					elide = right
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					fontsize_min = 14
					block "Text"
					{
						
						text = "888.88%"
					}
				}
			}
			
			widget = {
				size = { 6 6 }
				layoutpolicy_horizontal = fixed
			}			
		}
	}
	
	type category_drop = button {
		minimumsize = { 40 30 }
		using = flat_background_white
		using = DropShadow
		blockoverride "ShadowMargins"
		{
			margin_left = 4
			margin_bottom = 5
			margin_top = 8
			margin_right = 3
		}
		block "On_click" {}
		textbox = {
			using = BaseFontM
			using = White_FontColor #### using = Black_FontColor
			autoresize = yes
			elide = right
			block "TextMaxWidth" { max_width = 120 }
			fontsize_min = 12
			block "Text" {  }
			block "Text_alignment" 
			{ 
				parentanchor = center 
				align = center
				position = { 0 -2 }
			}
			#position = { 0 -2 }
		}
		icon = {
			size = { 100% 100% }
			using = button_tiled_texture
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
		}
		icon = {
			block "ArrowSize" { size = { 18 18 } }
			block "Right" { visible = no }
			parentanchor = vcenter|right
			position = { -4 0 }
			using = button_tiled_texture
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			alpha = 0.95
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
			icon = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/arrow_right.dds"
				spriteType = Corneredtiled
				spriteborder = { 0 0 }
				parentanchor = center
			}
			
		}
		icon = {
			block "ArrowSize"{ size = { 18 18 } }
			#block "Down" { visible = no }
			block "Down" {}
			parentanchor = vcenter|right
			position = { -4 0 }
			using = button_tiled_texture
			spriteborder = { 200 200 }
			framesize = { 200 200 }
			alpha = 0.95
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
			icon = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/arrow.dds"
				spriteType = Corneredtiled
				spriteborder = { 0 0 }
				parentanchor = center
				position = { 1 1 }
			}
			
		}
	}
	
	type trade_good_entry = margin_widget {
		size = { 46 52 }
		using = tooltip_es
		margin_widget = {
			size = { 100% 100% }
			margin = { 1 0 }

			margin_widget = {
				size = { 100% 100% }
				margin_bottom = 0
				button = {
					size = { 100% 100% }
					using = button_tiled_texture
					spriteType = Corneredtiled
					spriteborder = { 100 100 }
					gfxtype = framedbuttongfx
					
					# ToDo: Add Sound.//?
					#clicksound = " ToDo "
					# oversound = " ToDo "
					
					framesize = { 200 200 }
					upframe = 1
					overframe = 2
					downframe = 3
					disableframe = 4
					
					block "On_click" {}
					
					margin_widget = {
						margin = { 2 2 }
						size = { 100% 100% }
						margin_widget = {
							size = { 100% 100% }
							
							background = {
								using = flat_background_white
								shaderfile = "gfx/FX/pdxgui_default.shader"
								spriteType = corneredtiled		
								
								modify_texture = {
									name = "Alpha" 
									spriteborder = { 16 16 }
									spriteType = Corneredtiled
									texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
									blend_mode = alphamultiply
								}
							}
						}
						
						flowcontainer = {
							parentanchor = bottom|hcenter
							position = { 0 3 }
							ignoreinvisible = yes
							spacing = 3
							textbox = {
								using = BaseFontS
								using = White_FontColor #### using = Black_FontColor
								block "Text" { text = "888"  }
								autoresize = yes
								align = center|nobaseline
							}
						}
						
						icon = {
							position = { 0 -1 }
							size = { 36 36 }
							block "Icon" { texture = "gfx/interface/icons/_default.dds" }
							parentanchor = top|hcenter
						}
					}
				}
			}
		}
	}

	type horizontal_slider_plain = scrollbar {
		min = 0
		max = 100
		step = 1
		page = 10
		value = 0
		alwaystransparent = no
		
		slider = {
			button = {
				gfxtype = framedbuttongfx
				#disableframe = 20
				size = { 24 25 }
				parentanchor = vcenter
				texture = "gfx/interface/base_parts/sliders_export_slider_selection.dds"
			}
		}
		
		track = {
			button = {
				effectname = "NoHighlight"
				size = { 100% 6 }
				texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
				framesize = { 162 6 }
				spritetype = corneredstretched
				spriteborder = { 30 0 }
			}
		}
		
		dec_button = {
			button = {
				texture = "gfx/interface/base_parts/sliders_export_slider_arrows.dds"
				size = { 24 25 }
				framesize = { 24 25 }
				parentanchor = vcenter
				
			}
		}
		
		inc_button = {
			button = {
				texture = "gfx/interface/base_parts/sliders_export_slider_arrow_right.dds"
				size = { 24 25 }
				framesize = { 24 25 }
				parentanchor = vcenter
				
			}
		}
		
	}
	
	type mission_button = margin_widget {
		minimumsize = { 270 111 }
		
		using = DropShadow
		
		button = {
			#shaderfile = "gfx/FX/pdxgui_default.shader"
			gfxtype = framedbuttongfx
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 200 200 }

			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			margin = { 4 4 }
			size = { 100% 100% }
			onclick = "[MissionItem.OnSelect]"
			block "ClickSound" { clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click" }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
			
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				icon = {
					texture = "[MissionItem.GetImage]"
					tooltip = "[MissionItem.GetButtonTooltip]"
					size = { 100% 100% }
				}
			}
		}
		
		##### MISSION NAME BANNER
		icon = {
			parentanchor = hcenter|top
			maximumsize = { 999 28 }
			position = { 0 86 }
			using = flat_background_white
			alpha = 0.95
			
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				#using = flat_background_black
				using = beige_dark_background
				modify_texture = {
					name = "Alpha"
					texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
					blend_mode = alphamultiply
					spriteType = Corneredtiled
					spriteborder = { 60 -10 }
				}
				margin = { 2 2 }
				alpha = 0.3
			}
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/header_l_x60bd_right_cut_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 -10 }
			}
			
			blockoverride "Margins"
			{
				alpha = 0.95
			}
			
			textbox = {
				using = HeaderFont
				using = White_FontColor #### using = Black_FontColor
				parentanchor = hcenter
				autoresize = yes
				minimumsize = { -1 34 }
				resizeparent = yes
				align = center
				elide = right
				text = "[MissionItem.GetTitle]"
				margin_left = 28
				margin_right = 28
				margin_bottom = 10
				fontsize = 16
				max_width = 270
				fontsize_min = 12
			}
		}
	}
	
	type omen_button = margin_widget {
		minimumsize = { 100 100 }
		
		using = DropShadow
		
		button = {
			#shaderfile = "gfx/FX/pdxgui_default.shader"
			gfxtype = framedbuttongfx
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 100 100 }
			
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			
			margin = { 4 4 }
			size = { 100% 100% }
			block "On_click" { }
			block "ClickSound" { clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_click" }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
			
			margin_widget = {
				size = { 100% 100% }
				margin = { 4 4 }
				icon = {
					texture = "[GetOmenIcon(DeityItem.GetDeity)]"
					tooltip = "DEITY_DESC_TT"
					size = { 100% 100% }
					framesize = { 200 200 }
					frame = 1
				}
			}
			
		}
	}
	
	type omen_icon = margin_widget {
		minimumsize = { 20 20 }
		tooltipwidget = deity_tooltip
		
		using = DropShadow
		
		icon = {
			texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			framesize = { 100 100 }
			
			size = { 100% 100% }
			modify_texture = {
				name = "Alpha"
				texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 16 16 }
			}
			
			margin_widget = {
				size = { 100% 100% }
				margin = { 3 3 }
				icon = {
					block "Icon" { }
					size = { 100% 100% }
					framesize = { 200 200 }
					frame = 1
				}
			}
			
		}
	}
	
	type ruler_details_box = flowcontainer {
		spacing = 4
		block "Context" {  }
		textbox = {
			block "Align" { align = left|nobaseline }
			block "TitleText" { text = "TITLE TEXT HERE" }
			autoresize = yes
			using = BaseFontS
			using = White_FontColor #### using = Black_FontColor
		}
	}
	
	type frontend_button = widget {
		minimumsize = { 376 44 }
		parentanchor = bottom|hcenter
		
		state = {
			name = _mouse_hierarchy_enter
			on_start = "[PdxGuiWidget.FindChild('shiner').InterruptAnimation('pseudo_show')]"
			on_start = "[PdxGuiWidget.FindChild('shiner').InterruptAnimation('pseudo_hide')]"
			on_start = "[PdxGuiWidget.FindChild('shiner').TriggerAnimation('pseudo_show')]"
		}
		
		state = {
			name = _mouse_hierarchy_leave
			on_start = "[PdxGuiWidget.FindChild('shiner').InterruptAnimation('pseudo_hide')]"
			on_start = "[PdxGuiWidget.FindChild('shiner').InterruptAnimation('pseudo_show')]"
			on_start = "[PdxGuiWidget.FindChild('shiner').TriggerAnimation('pseudo_hide')]"
		}
		
		button = {
			name = "shiner"
			size = { 380 38 }
			texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
			modify_texture = {
				name = "Alpha"
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/start_menu_button_highlight.dds"
			}
			position = { 10 0 }
			alpha = 0
			
			state = {
				name = pseudo_show
				animation = {
					alpha = 0.7
				}
				duration = 0.15
			}
			state = {
				name = pseudo_hide
				animation = {
					alpha = 0
				}
				duration = 0.15
			}
			parentanchor = center
			block "On_click" {}
			
			#Fontend buttons?
			block "ClickSound"
			{
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
				oversound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_oversound"
			}
		}
		
		textbox = {
			size = { 100% 100% }
			name = "single_player_button"
			block "Text" { text = "BUTTON TEXT HERE" }
			using = HeaderFont
			fontsize = 28
			fontcolor = { 1 1 1 1 }
			align = center
			position = { 0 -4 }
		}
	}
	
	type outliner_highlight_button = widget {
		block "MinimumSize" { minimumsize = { 200 0 } }
		
		button = {
			name = "shiner"
			size = { 100% 100% }
			#block "ButtonTexture" { texture = "gfx/interface/base_parts/outliner_highlight.dds" }
			texture = "gfx/interface/base_parts/background_noninteractable_texture_dark.dds"
			modify_texture = {
				name = "Alpha"
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/outliner_highlight.dds"
			}
			position = { 8 0 }
			block "UpAlpha" { alpha = 0 }
			spritetype = corneredstretched
			
			state = {
				name = pseudo_show
				animation = {
					alpha = 0.7
				}
				duration = 0.1
			}
			state = {
				name = pseudo_hide
				animation = {
					block "UpAlpha" { alpha = 0 }
				}
				duration = 0.1
			}
			parentanchor = center
			block "On_click" {}
			
			#Fontend buttons?
			block "ClickSound"
			{
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
				oversound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_oversound"
			}
			state = {
				name = _mouse_hierarchy_enter
				on_start = "[PdxGuiWidget.InterruptAnimation('pseudo_show')]"
				on_start = "[PdxGuiWidget.InterruptAnimation('pseudo_hide')]"
				on_start = "[PdxGuiWidget.TriggerAnimation('pseudo_show')]"
			}
			
			state = {
				name = _mouse_hierarchy_leave 
				on_start = "[PdxGuiWidget.InterruptAnimation('pseudo_hide')]"
				on_start = "[PdxGuiWidget.InterruptAnimation('pseudo_show')]"
				on_start = "[PdxGuiWidget.TriggerAnimation('pseudo_hide')]"
			}
		}
		
		textbox = {
			size = { 100% 100% }  
			max_width = 200
			elide = right
			block "Text" { text = "BUTTON TEXT HERE" }
			using = BaseFontS
			fontcolor = { 1 1 1 1 }
			align = left
			position = { 14 -3 }
			fontsize_min = 12
		}
	}

	# Use this to space contents
	type spacer = widget {
        name = "spacer"
        layoutpolicy_horizontal = fixed
        layoutpolicy_vertical = fixed
    }

    ## Use this to expand void in a hbox/vbox
    type expand = widget {
        name = "expander"
        layoutpolicy_horizontal = growing
        layoutpolicy_vertical = growing
    }
	
	type zoom_indicator = button {
		using = button_tiled_texture
		framesize = { 200 200 }
		frame = 3
		alpha = 0.9
		modify_texture = {
			texture = "gfx/interface/icons/icon_alpha/zoom_area.dds"
			blend_mode = alphamultiply
		}
		
		tooltip = "ZOOMAREA_EXPLANATION"
		size = { 22 22 }

		block "On_Click" {
		
		}
	}

	####### Military Tradition Tree Buttons
	type military_tradition_tree_button = margin_widget {
		using = tooltip_es
		block "Size" { size = { 198 72 } }
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			name = "shadow"
			texture = "gfx/interface/icons/military_traditions/mt_button_shadow.dds"
			margin_left = 2
			margin_bottom = 3
			block "VisibleState" {  }
		}
		
		margin_widget = {
			size = { 100% 100% }
			
			margin = { 2 2 }
			
			button = {
				using = button_tiled_texture
				spriteType = Corneredtiled
				spriteborder = { 200 200 }
				size = { 100% 100% }
				framesize = { 200 200 }
				using = border_slightly_torn_alpha
				using = ButtonBorderTear
			}
			margin_widget = {
				size = { 100% 100% }
				margin = { 3 3 }
				button = { 
					size = { 100% 100% }
					
					clicksound = "event:/SFX/UI/Actions/sfx_ui_action_unlock_military_tradition"
					
					block "texture"
					{
						texture = "gfx/interface/icons/military_traditions/default_test.dds" 
						#Added to avoid error for missing texture "flag"
					}
					
					block "onclick"
					{
					
					}
					using = border_slightly_torn_alpha
					
				}
			}
		}
	}

	type military_tradition_tree_node_owned = margin_widget {
		block "Size" { size = { 198 72 } }
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			name = "shadow"
			texture = "gfx/interface/icons/military_traditions/mt_button_shadow.dds"
			margin_left = 2
			margin_bottom = 3
			block "VisibleState" {  }
		}
		using = tooltip_es
		margin_widget = {
			size = { 100% 100% }
			
			margin = { 2 2 }
			
			icon = {
				using = selected_color_texture
				spriteType = Corneredtiled
				spriteborder = { 100 100 }
				size = { 100% 100% }
				using = border_slightly_torn_alpha
				using = ButtonBorderTear
			}


			margin_widget = {
				size = { 100% 100% }
				margin = { 3 3 }
				icon = { 
					size = { 100% 100% }
					
					block "texture"
					{
						texture = "gfx/interface/icons/military_traditions/default_test.dds"
						#Added to avoid error for missing texture "flag"
					}
					using = border_slightly_torn_alpha
					
				}

			}
		}
	}
	
	type tab_button_vertical = widget {
		minimumsize = { 0 26 }
		background = {
			name = "Shadow"
			texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
			shaderfile = "gfx/FX/pdxgui_default.shader"
			spriteType = corneredtiled
			spriteborder = { 8 8 }
			margin_left = 4
			margin_bottom = 4
			alpha = 0.5
		}

		button = {
			name = "Button_Outline"
			using = button_tiled_texture
			spriteType = Corneredtiled
			spriteborder = { 200 200 }
			gfxtype = framedbuttongfx
			size = { 100% 100% }
			framesize = { 200 200 }
			upframe = 1
			overframe = 2
			downframe = 3
			disableframe = 4
			block "On_click" { }
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_primary"
			widget = {
				name = "Decorations"
				size = { 100% 100% }
				background = {
					spriteType = Corneredtiled
					texture = "gfx/interface/base_parts/button_lines_brown.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					alpha = 0.5
					spriteborder = { 22 0 }

					modify_texture = {
						name = "Decay"
						texture = "gfx/interface/base_parts/button_lines_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						alpha = 0.4
					}					
				}
				background = {
					name = "side_pattern"
					texture = "gfx/interface/base_parts/button_dotted_pattern.dds"
					shaderfile = "gfx/FX/pdxgui_default.shader"
					spriteType = Corneredtiled
					spriteborder = { 16 0 }
					margin = { 0 -2 }
					alpha = 0.8
				}				
			}

			# Button with centered text and an icon to the left of the text.
			hbox = {
				name = "Center_text_and_icon"
				widgetanchor = center
				parentanchor = center
				position = { 0 -2 }
				
				icon = {
					framesize = { 50 50 }
					size = { 34 34 }
					
					block "Icon"
					{
						texture = "gfx/interface/icons/shared_icons/leader.dds"
						visible = yes
					}
				}
				
				block "Center_text_and_icon"
				{
					visible = no
				}

				widget = {
					name = "Spacing_Widget_1"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}

				

				widget = {
					name = "Spacing_Widget_2"
					size = { 2 5 }
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
				}
				
				textbox = {
					name = "Text"
					using = BaseFontS
					using = Button_FontColor
					autoresize = yes
					layoutpolicy_horizontal = fixed
					layoutpolicy_vertical = fixed
					align = left
					block "Button_text"
					{
						text = "Button Text"
						fontcolor = { 0.96 0.96 0.96 1 }
					}
				}
				
				widget = {
					name = "Spacing_Widget_3"
					size = { 5 5 }
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = fixed
				}
			}

			textbox = {
				name = "Text"
				position = { 0 -1}
				widgetanchor = center
				parentanchor = center				
				using = BaseFontS
				using = Button_FontColor
				autoresize = yes
				align = center
				block "Center_text"
				{
					text = "Button Text"
					fontcolor = { 0.96 0.96 0.96 1 }
				}
			}
		}
	}
	
	type mini_pop_widget = widget {
		name = "noble_diamond"
		size = { 32 82 }
		tooltip = "[ProvinceWindow.GetProvince.GetPopHappyInformation('nobles')]"
		icon = {
			using = beige_background
			size = { 100% 100% }
			alpha = 0.8
		}
		
		progressbar = {
			name = "progress_value"
			direction = vertical
			position = { 0 0 }
			size = { 100% 100% }
			progresstexture = "gfx/interface/base_parts/progressbar_green_tile.dds"
			#noprogresstexture = "gfx/interface/base_parts/gradient_black_short.dds" 
			spriteType = corneredtiled
			spriteborder = { 0 4 }
			alpha = 1
			block "Value"
			{
				value = "[FixedPointToFloat( ProvinceWindow.GetProvince.GetPopTypeHappiness('citizen') )]"
			}
		}
		
		widget = {
			name = "nobleprogress"
			parentanchor = hcenter|bottom
			size = { 32 72 }
			position = { 1 0 }
			icon = {
				block "Icon" { texture = "gfx/interface/icons/pop_types/citizen.dds" }
				size = { 31 31 }
				parentanchor = center
				alpha = 1
			}
			container = {
				parentanchor = hcenter|vcenter
				position = { 0 24 }
				textbox = {
					size = { 32 20 }
					using = BaseFontM
					using = White_FontColor #### using = Black_FontColor
					align = center
					block "Text" { text = "[ProvinceWindow.GetProvince.GetPopulation('nobles')]" }
				}
			}
		}
		
	}
	type decorative_map_icontexture = widget {
		size = { 34 34 }
		icon = {
			visible = "[Not( Or( DecorativeMapIcon.GetProvince.IsHolySite, DecorativeMapIcon.GetProvince.HasGreatWork ) )]"
			size = { 34 34 }
			texture = "gfx/interface/icons/icon_alpha/star_filled_white.dds"
			block "ZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[And( DecorativeMapIcon.GetProvince.IsHolySite, Not( DecorativeMapIcon.GetProvince.HasGreatWork ) )]"
			size = { 34 34 }
			texture = "gfx/interface/icons/icon_alpha/religion_white.dds"
			block "ReligionIcon" {}
			block "ZoomDetails" {}
		}
		icon = {
			position = { 0 0 }
			visible = "[DecorativeMapIcon.GetProvince.HasGreatWork]"
			size = { 28 28 }
			texture = "gfx/interface/map/greatwork.dds"
			block "GwZoomDetails" {}
		}
	}
}

types CooltipBase
{
	# some cooltips are needed in gui base. Prefer placing them in 'cooltips.gui'
	# TOOLTIPS	
	type object_tooltip_pop_out = flowcontainer {
		name = "ObjectTooltipDefault"
		direction = vertical
		ignoreinvisible = yes
		using = GeneralTooltipSetup
		alwaystransparent = no
		filter_mouse = all
		container = {
			widget = {
				name = "background"
				using = DefaultTooltipBackground
				size = { 100% 100% }
				alwaystransparent = no
				block "TooltipBackgroundVisibility" { visible = yes }
			}
			
			block "ContentsOutsideMargins" {}
			
			container = {
				parentanchor = top|right
				position = { -20 18 }
				block "Icon"
				{
					icon = {
						size = { 64 64 }
						
						block "IconTexture" { 
							#texture = "gfx/interface/icons/_default.dds"
						}
					}	
				}
			}
			flowcontainer = {
			
				flowcontainer = {
					ignoreinvisible = yes
					direction = vertical
					block "TooltipMargins" { 
						margin = { 20 20 } 
					}

					container = {
						block "header_tt" {}
						block "header_additions" {}
						margin_widget = {
							name = "title_container"
							size = { 400 64 }
							
							flowcontainer = {
								name = "FancyHeader"
								alwaystransparent = no
								ignoreinvisible = yes
								
								direction = vertical
								spacing = 0

								normal_text = {
									autoresize = yes
									name = "title"
									margin_bottom = 4
									max_width = 600
									fontsize_min = 14
									using = BaseFontM
									align = left
									block "title_text" {}
									fonttintcolor = "[TooltipInfo.GetTintColor]"
								}
								
								flowcontainer = {
									spacing = 4
									block "ConceptLinkPreVisibility" {}
									normal_text = {
										name = "concept_link_pre"
										autoresize = yes
										text = "READ_MORE_ABOUT"
										using = TooltipConceptFont
										alwaystransparent = yes
										multiline = no
										fontsize = 14
										max_width = 600
									}
									normal_text = {
										name = "concept_link"
										autoresize = yes
										block "concept_link" {
											text = "#D TODO#!"
										}
										using = TooltipConceptFont
										alwaystransparent = yes
										multiline = no
										fontsize = 14
										max_width = 600
									}
								}
							}
							
							
						}
					}
					
					block "extra_data" {}

					textbox = {
						name = "above_description"

						using = DefaultTooltipText
						multiline = yes
						block "above_description_text" {}
						fonttintcolor = "[TooltipInfo.GetTintColor]"
						alwaystransparent = no
						max_width = 600
					}

					# NOTE: This edit box is filled by TooltipInfo.GetTintColor from code in order to set the correct size when the tooltip is created and positioned and then it uses the text property specified here in the next frames
					textbox = {
						name = "Description"
					
						using = GameConceptFlavorTooltipText
						multiline = yes
						block "description_text" {}
						fonttintcolor = "[TooltipInfo.GetTintColor]"
						alwaystransparent = no
						elide = right
						max_width = 600
					}

					# Things like "click to X", hotkeys etc
					textbox = {
						name = "input_info"
						margin_top = 10
						using = DefaultTooltipText
						multiline = yes
						block "input_info_text" { visible = no }
						fonttintcolor = "[TooltipInfo.GetTintColor]"
					}

					textbox = {
						name = "TooltipTextShortcut"
						using = DefaultTooltipText
						parentanchor = right
						margin = { 10 10 }
						block "Cull" { visible = yes }
					}
				}
				margin_widget = {
					size = { 22 100% }
					margin = { 0 6 }
					using = ProgressLockIndicator
				}
			}
		}
	}
	
	type cooltip_paragraph = textbox {

		name = "cooltip_paragraph"
		using = DefaultTooltipText
		fonttintcolor = "[TooltipInfo.GetTintColor]"
		multiline = yes
		alwaystransparent = no
	}
	
	type character_loyalty_pop_out = object_tooltip_pop_out {
		blockoverride "Icon" {
			icon = {
				size = { 64 64 }
				texture = "gfx/interface/icons/shared_icons/loyalty.dds"
			}
		}
		blockoverride "title_text" {
			datacontext = "[Character]"
			text = "GAME_LOYALTY_TOOLTIP_TITLE"
		}
		blockoverride "concept_link" {
			text = [loyalty|E]
		}
		blockoverride "description_text" { 
			text = "[Character.GetLoyaltyNonTitleToolTip]"
		}
		blockoverride "Cull" {
			visible = no
		}
	}

	type character_pop_out = object_tooltip_pop_out {
		alwaystransparent = no
		blockoverride "header_additions" {
			cpt_button_large_with_data = {
				blockoverride "Context" { datacontext = "[Character]" }
				blockoverride "ShowIcons" { visible = no }
				blockoverride "portrait_button_template_tooltip" {} # avoids recursion and crash on tooltipwidget
				blockoverride "portrait_button_template_onclick" 
				{
					# otherwise we get overridden by parent views
					onclick = "[DefaultOnCharacterClick( Character.GetID )]"
				} 
				blockoverride "portrait_button_template_onrightclick" 
				{
					# otherwise we get overridden by parent views
					onclick = "[DefaultOnCharacterRightClick( Character.GetID )]"
				} 
				blockoverride "TraitModel" { visible = no } #This is weirdly specific to the CharacterWindow
				blockoverride "BottomPortraitPosition" { position = { -10 44 } } #Overridden in governorship window otherwise..

			}
		}
		blockoverride "LockIndicatorVisibility" { visible = no }
		blockoverride "ConceptLinkPreVisibility" { visible = no }
		blockoverride "RedBorder" {}
		blockoverride "Cull" { visible = no	}
		blockoverride "TooltipMargins" { 
			margin_left = 7
			margin_bottom = 8
			margin_top = 8
			margin_right = -14
		}
		blockoverride "title_text" {
			text = ""
		}
		
		blockoverride "concept_link" {
			#text = [character|E]
			text = ""
		}
		blockoverride "description_text" {
			text = ""
		}
	}
	
	type cooltip_spacer = spacer {
		size = { 0 8 }
	}
}

template droptarget
{
	dragdropid = "quick_access"
	size = { 37 31 }
}

template droptargetbutton
{
	size = { 37 31 }
	framesize = { 37 31 }
	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_map_mode"
	onclick = "[PdxGuiTriggerAllAnimations('destroyyellow')]"
	onclick = "[PdxGuiWidget.FindChild('yellow').InterruptAnimation('destroyyellow')]"
	onclick = "[PdxGuiWidget.FindChild('yellow').TriggerAnimation('createyellow')]"
	
	using = button_tiled_texture
	
	background = {
		texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
		shaderfile = "gfx/FX/pdxgui_default.shader"
		spriteType = corneredtiled
		spriteborder = { 8 8 }
		margin_left = 4
		margin_bottom = 4
		alpha = 0.5
	}
	
	icon = {
		name = "yellow"
		texture = "gfx/interface/base_parts/yellow_button_color_200fs.dds"
		size = { 37 31 }
		framesize = { 100 100 }
		frame = 6
		alpha = 0
		state = {
			name = "createyellow"
			animation = {
				alpha = 1
			}
			duration = 0.25
		}
		state = {
			name = "destroyyellow"
			
			alpha = 0
			duration = 0.25
		}
	}
	icon = {
		block "IconTexture"{ }
		size = { 37 29 }
		position = { 0 1 }
	}
}

template inputfield
{
	icon = {
		position = { 0 6 }
		size = { 100% 28 }
		texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
		spriteborder = { 8 5 }
		spriteType = Corneredtiled
		modify_texture = {
			name = "Alpha" 
			spriteborder = { 29 0 }
			spriteType = Corneredtiled
			texture = "gfx/interface/base_parts/text_input_field_background_x58bd_alpha.dds"
			blend_mode = alphamultiply
		}
	}
	
	icon = {
		using = beige_medium_background
		spriteType = Corneredtiled
		shaderfile = "gfx/FX/pdxgui_default.shader"
		size = { 100% 2 }
		parentanchor = bottom
		position = { 0 -2 }
	}
}

template progressbar_flat_gradient
{
	progresstexture = "gfx/interface/base_parts/horizontal_gradient_stretch_black.dds" 
	#progresstexture = "gfx/interface/base_parts/button_allframes.dds"
	#progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"
	#framesize { 100 100 }
	#frame = 8
	#color = { 0.06 0.66 0.04 1 }
	
	
	block "L_bar"
	{
		spriteType = Corneredtiled
		spriteborder = { 0 1 }
	}
	
}

template progressbar_flat_green
{
	progresstexture = "gfx/interface/base_parts/progressbar_white_tile.dds" 
	#progresstexture = "gfx/interface/base_parts/button_allframes.dds"
	#progresstexture = "gfx/interface/base_parts/white_button_color_200fs.dds"
	#framesize { 100 100 }
	#frame = 8
	color = { 0.06 0.66 0.04 0.5 }

	block "L_bar"
	{
		spriteType = Corneredtiled
		spriteborder = { 0 1 }
	}
	
}

template progressbar_flat_green_vertical_pops
{
	progresstexture = "gfx/interface/tiles/progressbar_green_tile_v.dds"
	#noprogresstexture = "gfx/interface/tiles/progressbar_red_tile_v.dds"

	block "L_bar"
	{
		spriteType = Corneredtiled
		spriteborder = { 0 0 }
	}
	
	icon = {
		name = "overlay"
		texture = "gfx/interface/tiles/progressbar_overlay.dds"
		spriteType = Corneredstretched
		spriteborder = { 7 7 }
		parentanchor = center
		size = { 100% 100% }
		position = { 0 0 }
	}
}

template FadeStates
{
	#state = { #TODO EVERYONE - uncomment these before release if we want windows to fade in
	#	name = _show
	#	
	#	animation = {
	#		alpha = 0
	#	}
	#	
	#	next = fadein
	#}
	#
	#state = {
	#	name = fadein
	#	
	#	animation = {
	#		alpha = 1
	#	}
	#	duration = @fade_in_duration
	#}
	#
	#state = {
	#	name = _hide
	#	
	#	animation = {
	#		alpha = 0
	#	}
	#	
	#}
}

template Imp19cFadeStates
{
	state = {
		name = _show
		
		animation = {
			alpha = 0
		}
		
		next = fadein
	}
	
	state = {
		name = fadein
		
		animation = {
			alpha = 1
		}
		duration = 0.25
	}
	
	state = {
		name = _hide
		
		animation = {
			alpha = 0
		}
		
	}
}

template HideProvinceTabs
{
	state = {
		name = hide_province_tabs
		
		on_start = "[PdxGuiWidget.FindChild('big').Hide]"
		on_start = "[PdxGuiWidget.FindChild('small').Show]"
	}
}

template ShowLargeTab 
{
	state = { 
		name = show_large_tab
		
		on_start = "[PdxGuiWidget.FindChild('big').Show]"
		on_start = "[PdxGuiWidget.FindChild('small').Hide]"
	}
}

template EnlargeButton
{
	state = {
		name = _mouse_hierarchy_enter
		
		animation = {
			size = { 44 44 }  
		}
		
		duration = 0.05
		
		
		
	}
	
	state = {
		name = _mouse_hierarchy_leave
		
		animation = {
			size = { 36 36 }
		}
		duration = 0.05
	}
	
}

template hide_province_tab
{
	state = {
		name = "hide_province_tab"
		
		on_start = "[PdxGuiWidget.Hide]"
		
	}
}

template vbox_item_grid_button
{
	vbox = {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		scrollarea = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			scrollbarpolicy_horizontal = always_off
			using = VerticalScrollAreaCutOff
			scrollbar_vertical = {
				using = VerticalScrollBar
			}
		
			scrollwidget = {  
				vbox = {
					vbox = {
						name = "item_grid_container"
						block "DataModel"
						{
							 
						}
						spacing = 6
						margin_top = 4
						margin_bottom = 4 
						block "ContainerRight" { margin_right = 2 } #Please don't do this
						layoutpolicy_horizontal = expanding	
						layoutpolicy_vertical = fixed
						item = {
							widget = {
								name = "child_actions_category"
								size = { 0 26 }
								layoutpolicy_horizontal = expanding
								hbox = { 
									block "WidgetContentsPre" {}
									block "WidgetContents"
									{
										text_button_square = { 
											size = { 0 26 }
											layoutpolicy_horizontal = expanding
										} 
									}
									block "WidgetContentsPost" {}
									block "ItemMargin"
									{
										margin_left = 10
										margin_right = 10
									}
								}
							} 
						}
					}
					vbox = {
						layoutpolicy_vertical = expanding
					}
				} 
			}
		}
	}
	
}

template main_window_template
{
	resizable = no
	movable = no
	position = { 60 138 }
}

template MainWindowHeaderBox
{
	hbox = {
		margin_top = 8
		margin_right = -1
		layoutpolicy_horizontal = expanding 
		top_window_header_for_layout = {  
			layoutpolicy_horizontal = expanding
			
		}
	}
}

template MainWindowHeaderBoxState
{
	hbox = {
		margin_top = 8
		layoutpolicy_horizontal = expanding 
		top_window_header_for_layout_state = {  
			layoutpolicy_horizontal = expanding
			
		}
	}
}

template MainWindowHeaderBoxCentered
{
	hbox = {
		margin_top = 8
		layoutpolicy_horizontal = expanding 
		menu_header = {  
			layoutpolicy_horizontal = expanding
			
		}
	}
}

template pt_button_popout
{
	using = portrait_button_template
	using = pop_out_character_portrait
	alwaystransparent = no
	size = { 60 90 }
	clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
	oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
	
	portrait_scale = { 1.3 1.3 }
	portrait_offset = { -0.125 -0 }
	
	portrait_texture = "[Character.GetPortrait('default', 'default')]"
	background_texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
	texture = "gfx/portraits/portrait_frame_60.dds"
	framesize = { 86 129 }
	frame_tier = [Character.GetPortraitFrameFrame]
}

template DropShadow
{
	background = {
		texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
		shaderfile = "gfx/FX/pdxgui_default.shader"
		spriteType = corneredtiled
		spriteborder = { 8 8 }
		block "ShadowMargins"
		{
			margin_left = 4
			margin_bottom = 4
		}
		block "ShadowAlpha" { alpha = 0.5 }
	}
}

template vertical_moralebar
{
	progresstexture = "gfx/interface/tiles/progressbar_green_tile_v.dds"
	spriteType = Corneredtiled
	spriteborder = { 0 0 }
	direction = vertical
}

template border_very_torn_alpha
{
	modify_texture = {
		name = "torn_border"
		texture = "gfx/interface/icons/military_traditions/mt_owned_1.dds"
		blend_mode = alphamultiply
		SpriteType = corneredtiled
		spriteborder = { 12 8 }
	}
}

template border_slightly_torn_alpha
{
	modify_texture = {
		name = "portrait_alpha"
		texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 32 32 }
	}
}

template border_medium_torn_alpha
{
	modify_texture = {
		name = "medium_torn"
		texture = "gfx/interface/base_parts/background_x60bd_alpha.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 60 60 }
	}
}
template border2
{
	modify_texture = {
		name = "medium_torn"
		texture = "gfx/interface/base_parts/background_x60bd_alpha2.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 60 60 }
	}
}
template border3
{
	modify_texture = {
		name = "medium_torn"
		texture = "gfx/interface/base_parts/background_x60bd_alpha3.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 60 60 }
	}
}
template border4
{
	modify_texture = {
		name = "medium_torn"
		texture = "gfx/interface/base_parts/background_x60bd_alpha4.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 60 60 }
	}
}
template pattern_decay_alpha
{
	modify_texture = {
		name = "Decay"
		texture = "gfx/interface/base_parts/button_lines_alpha.dds"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		alpha = 0.3
	}
}

template Character_tooltip {
	character_pop_out = {}
}

template character_loyalty_tooltip {
    character_loyalty_pop_out = {}    
}

template underline_for_text {
	icon = {
		texture = "gfx/interface/base_parts/brown_underline_x60bd.dds"
		spriteType = Corneredtiled
		spriteborder = { 30 0 }
		size = { 100% 4 }
		parentanchor = bottom|hcenter
	}
}

template deity_tooltip {
	object_tooltip_pop_out = {
		blockoverride "title_text" {
			text = "[Deity.GetNameWithNoTooltip]"
		}
		blockoverride "concept_link" {
			text = "[deities|E]"
		}
		blockoverride "extra_data" {
			flowcontainer = {
				direction = vertical
				ignoreinvisible = yes
				visible = "[Deity.HasHolySite]"
				cooltip_paragraph = { text = "DEITY_HOLY_SITE_IMPACT" }
				cooltip_spacer = {}
			}
			flowcontainer = {
				direction = vertical
				ignoreinvisible = yes
				name = "Modifiers"
				flowcontainer = {
					direction = vertical 
					ignoreinvisible = yes 
					visible = "[Not( Deity.GetPassiveModifier.IsEmpty )]"
					name = "Passive"
					cooltip_paragraph = { text = "DEITY_ACTIVE_HEADER" }
					cooltip_paragraph = { text = "[Deity.GetPassiveModifier.BuildIconSummary]" }
					cooltip_spacer = {}
				}
				flowcontainer = {
					direction = vertical 
					ignoreinvisible = yes 
					visible = "[Not( Deity.GetOmenModifier.IsEmpty )]"
					name = "Active"
					cooltip_paragraph = { text = "DEITY_INVOKED_HEADER" }
					cooltip_paragraph = { text = "[Deity.GetOmenModifier.BuildIconSummary]" }
					cooltip_spacer = {}
				}
			}
		} 
		blockoverride "description_text" {
			text = "DEITY_LINK_TEXT"
		}
		blockoverride "Cull" {
			visible = no
		}
	}
}
