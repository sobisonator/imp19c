@windowwidth = 1920
@windowheight = 1080

template portrait_x32y32bd_alpha_2
{
		modify_texture = {
			spriteborder = { 16 16 }
			spriteType = Corneredtiled
			texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha_2.dds"
			blend_mode = alphamultiply
		}
}

template card_red
{
	color = { 0.686 0.09 0.09 1 }
}
template card_green
{
	color = { 0.361 0.635 0.118 1 }
}
template card_blue
{
	color = { 0.45459 0.659 0.839 1 }
}
template card_yellow
{
	color = { 0.95  0.8  0.44 1 }
}

types NEW_WINDOW {
	type mp_country_button = widget {
		size = { 398 50 }
		widget = {
			size = { 100% 100% }
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin = { 3 3 }
				alpha = 0.5
			}
		}
		button = {
			size = { 100% 100% }
			using = brighten_red_background
			alpha = 0.5
			clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
			oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
			#block "tooltip" { tooltip = "FRAINTRO" }
			onclick = "[PdxGuiTriggerAllAnimations('unselect')]"
			block "On_click" { }
			block "onmouse" { }
			modify_texture = {
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/horizontal_gradient_stretch_black.dds"
			}
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = portrait_x32y32bd_alpha
				using = beige_background
				modify_texture = {
					texture = "gfx/interface/base_parts/button_vignette.dds"
					blend_mode = alphamultiply
					spriteType = corneredtiled
					spriteborder = { 20 20 }
				}
			}
			widget = {
				size = { 100% 100% }
				alpha = 2.0
				block "visible" { }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = green_background
					modify_texture = {
						blend_mode = alphamultiply
						texture = "gfx/interface/base_parts/horizontal_gradient_stretch_black.dds"
					}
				}
			}
			margin_widget = {
				margin = { 2 2 }
				size = { 100% 100% }
				alpha = 2.0
				margin_widget = {
					size = { 100% 100% }
					parentanchor = right
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = black_background
						using = portrait_x32y32bd_alpha
					}
					icon = {
						size = { 272 100% }
						position = { 4 0 }
						parentanchor = right
						alpha = 0.75
						using = portrait_x32y32bd_alpha
						block "texture" { }
						spriteType = Corneredtiled
						modify_texture = {
							texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
							blend_mode = alphamultiply
						}
					}
				}
				country_flag = {
					block "flag" { }
					blockoverride "size" { size = { 46 46 } }
				}
				textbox = {
					position = { 50 0 }
					size = { 100% 40 }
					fontsize = 28
					font = HeaderFont
					#using = Highlight_FontColor
					using = Black_FontColor
					block "name" { }
					alwaystransparent = yes
					multiline = yes
				}
			}
		}
	}

	type mp_country_on_map = widget {
		size = { 100% 100% }
		icon = {
			size = { 100% 100% }
			using = portrait_x32y32bd_alpha_2
			alpha = 0.4
			block "texture" { }
			block "color" {  }
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/base_parts/base_color.dds"
			using = portrait_x32y32bd_alpha_2
			#shaderfile = "gfx/FX/pdxgui_glow_game.shader"
			alpha = 0.5
			block "visible" { }
			block "color" {  }
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/base_parts/base_color.dds"
			using = portrait_x32y32bd_alpha_2
			alpha = 0.2
			visible = no
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" {  }
			}
			block "animation" { }
		}
		button = {
			size = { 128 128 }
			alpha = 0.5
			block "position" { }
			block "click" { }
			block "onmouse" { }
			block "texture_coa" { } #BC2 (Линейный, DTX3) Ошибка диффузионного дизеринга
		}
		icon = {
			size = { 128 128 }
			alpha = 1
			block "visible" { }
			block "position" { }
			block "texture_coa" { }
		}
	}

	type category_drop_button = widget { 
		size = { 408 44 }
		widget = {
			size = { 100% 100% }
			background = {
				name = "Shadow"
				texture = "gfx/interface/base_parts/button_square_dropshadow_x16y16bd.dds"
				shaderfile = "gfx/FX/pdxgui_default.shader"
				spriteType = corneredtiled
				spriteborder = { 8 8 }
				margin = { 3 3 }
				alpha = 0.5
			}
		}
		button = {
			using = brighten_red_background
			size = { 100% 100% }
			alpha = 0.5
			block "On_click" {}
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = portrait_x32y32bd_alpha
				using = beige_background
				modify_texture = {
					texture = "gfx/interface/base_parts/button_vignette.dds"
					blend_mode = alphamultiply
					spriteType = corneredtiled
					spriteborder = { 20 20 }
				}
			}
			widget = {
				size = { 100% 100% }
				alpha = 2.0
				margin_widget = {
					margin = { 2 2 }
					size = { 100% 100% }
					margin_widget = {
						size = { 100% 100% }
						parentanchor = right
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = black_background
							using = portrait_x32y32bd_alpha
						}
						icon = {
							size = { 100% 100% }
							#alpha = 0.75
							using = portrait_x32y32bd_alpha
							block "texture" { }
							modify_texture = {
								texture = "gfx/interface/base_parts/horizontal_gradient_stretch_sides_black.dds"
								blend_mode = alphamultiply
							}
						}
					}
				}
				textbox = {
					size = { 100% 40 }
					align = center
					fontsize = 24
					font = HeaderFont
					using = Highlight_FontColor
					block "Text" { }
					alwaystransparent = yes
					multiline = yes
				}
				icon = {
					block "ArrowSize" { size = { 18 18 } }
					block "Right" { visible = no }
					parentanchor = vcenter|right
					position = { -6 0 }
					using = red_background
					icon = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/arrow_right.dds"
						spriteType = Corneredtiled
						spriteborder = { 0 0 }
						parentanchor = center
					}
				}
				icon = {
					block "ArrowSize"{ size = { 18 18 } }
					#block "Down" { visible = no }
					block "Down" {}
					parentanchor = vcenter|right
					position = { -6 0 }
					using = red_background
					icon = {
						name = "Alpha"
						texture = "gfx/interface/base_parts/arrow.dds"
						spriteType = Corneredtiled
						spriteborder = { 0 0 }
						parentanchor = center
						position = { 1 1 }
					}
				}
			}
		}
	}

	type mp_category_drop = margin_widget {
		size = { 408 40 }
		layoutpolicy_horizontal = expanding
		vbox = {
			layoutpolicy_horizontal = expanding
			category_drop_button = {
				layoutpolicy_horizontal = expanding
				blockoverride "Text" { block "Center_text" {  } }
				blockoverride "On_click" { block "Onclick_1" {  } }
				blockoverride "Down" { visible = yes }
				blockoverride "Right" { visible = no }
				block "Visible_1" {  }
			}
			category_drop_button = {
				layoutpolicy_horizontal = expanding
				blockoverride "Text" { block "Center_text" {  } }
				blockoverride "On_click" { block "Onclick_2"  {  } }
				blockoverride "Down" { visible = no }
				blockoverride "Right" { visible = yes }
				block "Visible_2"  {  }
			}
		}
	}

	type mp_card = button {
		size = { 60 76 }
		onmousehierarchyenter = "[PdxGuiWidget.FindChild('iconka').TriggerAnimation('up_anim')]"
		onmousehierarchyleave = "[PdxGuiWidget.FindChild('iconka').TriggerAnimation('down_anim')]"
		tooltip_offset = { -60 86 }
		flowcontainer = {
			direction = vertical
			parentanchor = bottom
			icon = {
				size = { 60 62 }
				texture = "gfx/interface/images/cards/card_shadow.dds"
				spriteType = Corneredtiled
				spriteborder = { 27 25 }
				icon = {
					size = { 100% 100% }
					texture = "gfx/interface/base_parts/base_color.dds"
					modify_texture = {
						texture = "gfx/interface/images/cards/card_alpha.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 27 27 }
					}
					icon = {
						size = { 100% 100% }
						texture = "gfx/interface/base_parts/base_color.dds"
						block "color" { }
						block "card" { }
					}
				}
			}
			icon = {
				name = "iconka"
				size = { 60 4 }
				texture = "gfx/interface/images/cards/card_shadow_ramka.dds"
				spriteType = Corneredtiled
				spriteborder = { 27 7 }
				state = {
					name = up_anim
					duration = 0.1
					size = { 60 14 }
				}
				state = {
					name = down_anim
					duration = 0.1
					size = { 60 4 }
				}
				icon = {
					size = { 100% 100% }
					texture = "gfx/interface/base_parts/base_color.dds"
					modify_texture = {
						texture = "gfx/interface/images/cards/card_alpha_ramka.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 27 27 }
					}
					widget = {
						size = { 100% 100% }
						parentanchor = bottom
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = black_background
							alpha = 0.05
							margin_top = 64
							modify_texture = {
								texture = "gfx/interface/images/cards/card_alpha.dds"
								blend_mode = alphamultiply
								spriteType = Corneredtiled
								spriteborder = { 27 27 }
							}
							modify_texture = {
								texture = "gfx/interface/base_parts/background_pattern.dds"
								blend_mode = alphamultiply
								spriteType = Corneredtiled
							}
							modify_texture = {
								texture = "gfx/interface/base_parts/demanded_filth.dds"
								blend_mode = alphamultiply
								spriteType = Corneredtiled
							}
						}
					}
					icon = {
						size = { 100% 100% }
						texture = "gfx/interface/base_parts/base_color.dds"
						block "color" { using = card_red }
						modify_texture = {
							texture = "gfx/interface/images/cards/card_ramka.dds"
							blend_mode = alphamultiply
							spriteType = Corneredtiled
							spriteborder = { 30 30 }
						}
					}
				}
				icon = {
					size = { 100% 30 }
					parentanchor = bottom
					using = black_background
					alpha = 0.25
					modify_texture = {
						texture = "gfx/interface/images/cards/card_alpha_ramka.dds"
						blend_mode = alphamultiply
						spriteType = Corneredtiled
						spriteborder = { 27 27 }
					}
					modify_texture = {
						texture = "gfx/interface/base_parts/gradient_black_invert.dds"
						blend_mode = alphamultiply
					}
				}
			}
		}
	}

	type card_easy = mp_card {
		tooltip = "card_easy"
		blockoverride "color" { using = card_green }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_easy.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_medium = mp_card {
		tooltip = "card_medium"
		blockoverride "color" { using = card_yellow }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_medium.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_hard = mp_card {
		tooltip = "card_hard"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_hard.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_the_concert_of_europe = mp_card {
		tooltip = "card_the_concert_of_europe"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_the_concert_of_europe.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_islamic_empires = mp_card {
		tooltip = "card_islamic_empires"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_islamic_empires.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_sphere_of_сhina = mp_card {
		tooltip = "card_sphere_of_сhina"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_sphere_of_сhina.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_revolutionary_states = mp_card {
		tooltip = "card_revolutionary_states"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_revolutionary_states.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type card_independence_movements = mp_card {
		tooltip = "card_independence_movements"
		blockoverride "color" { using = card_red }
		blockoverride "card" {
			modify_texture = {
				texture = "gfx/interface/images/cards/card_independence_movements.dds"
				blend_mode = alphamultiply
			} 
		}
	}

	type mp_right_panel = flowcontainer {
		direction = vertical
		textbox = {
			size = { 100% 150 }
			fontsize = 50
			align = hcenter
			#font = NewHeaderFont
			font = HeaderFont
			using = Highlight_FontColor
			block "name" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetNameWithNoTooltip]" }
			alwaystransparent = yes
			multiline = yes
		}
		flowcontainer = {
			datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				texture = "[GetCharacterBackgroundIconHuge( Character.Self, Character.GetLocation.GetTerrain )]"
				using = portrait_x32y32bd_alpha
				spriteType = Corneredtiled
				margin_top = 30
				modify_texture = {
					blend_mode = alphamultiply
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
				}
				modify_texture = {
					blend_mode = alphamultiply
					texture = "gfx/interface/base_parts/gradient_black_invert.dds"
				}
			}
			margin_widget = {
				size = { 250 195 }
				margin_top = 20
				widget = {
					size = { 150 100 }
					parentanchor = center
					europe_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = yes
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					europe_square_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					asia_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					india_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					nepal_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					islamic_special_a_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
					islamic_special_b_flag = {
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
						visible = no
						tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					}
				}
				textbox = {
					position = { 5 130 }
					align = bottom
					size = { 100% 40 }
					using = SubHeaderFont
					using = Black_FontColor
					text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetNameWithNoTooltip]"
					alwaystransparent = yes
					multiline = yes
					elide = right
				}
			}
			widget = {
				size = { 135 195 }
				datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
				portrait_button = {
					name = "monarchpic"
					size = { 154 232 }
					position = { -12 -18 }
					#parentanchor = bottom|left
					using = pt_button_large
					pop_out = yes
					#visible="[GovernmentView.GetPlayer.MakeScope.Var('monarch_character').IsSet]"
					
					portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
				}
				icon_card = {
					visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
					size = { 40 40 }
					position = { 95 1 }
					parentanchor = bottom
					blockoverride "Icon"
					{
						texture = "[GetPartyIcon( Character.GetParty )]"
					}
					block "PartyIconVisibility" 
					{
						visible = "[Character.ShowParty]"
					}
					tooltip = "[Character.GetPartyTooltip]"
				}
			}
		}
		sub_header_v = {
			size = { 100% 182 }
			blockoverride "Title_text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRulerTitle]" }
			widget = {
				size = { 100% 38 }
				tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetHeaderToolTip]"
			}
			flowcontainer = {
				margin_top = 38
				spacing = 20
				icon_and_text = {
					size = { 80 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/military.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartial]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartialToolTip]"
				}
				
				icon_and_text = {
					size = { 80 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/civic.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesse]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesseToolTip]"
				}
				icon_and_text = {
					size = { 80 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/oratory.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharisma]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharismaToolTip]"
				}
				
				icon_and_text = {
					size = { 80 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/religious.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZeal]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZealToolTip]"
				}
			}
			flowcontainer = {
				position = { 0 80 }
				margin = { 5 0 }
				block "cards" { }
			}
			widget = {
				size = { 100% 32 }
				sub_header_v = {
					size = { 100% 480 }
					position = { 0 154 }
					blockoverride "Title_text" { text = "Playing cards" }
				}
			}
		}
		textbox = {
			size = { 100% 50 }
			text = "mp_description"
			using = HeaderFont
			fontsize = 28
			fontcolor = { 1 1 1 1 }
			align = center
		}
		widget = {
			size = { 100% 413 }
			textbox = {
				size = { 100% 100% }
				using = BaseFontS
				using = Black_FontColor
				parentanchor = top|left
				autoresize = yes
				align = left|top
				multiline = yes
				minimumsize = { 375 -1 }
				maximumsize = { 375 -1 }
				block "description" { }
			}
		}
		flowcontainer = {
			direction = vertical
			spacing = 10
			parentanchor = hcenter
			widget = {
				size = { 180 6 }
				parentanchor = hcenter
				using = brown_underline
			}
			margin_widget = {
				size = { 376 48 }
				parentanchor = hcenter
				enabled = "[LobbyView.CanGoBack]"
				tooltip = "[LobbyView.GetGoBackToolTip]"
				frontend_button = {
					size = { 100% 100% }
					using = tooltip_ne
					enabled = "[LobbyView.CanStart]"
					tooltip = "[LobbyView.StartToolTip]"
					visible = "[And(PlayerIsHost, And(GameIsMultiplayer,IsPreparationLobby))]"
					blockoverride "Text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
					blockoverride "On_click" { 
						#onclick = "[LobbyView.Start]" 
						onclick = "[GetVariableSystem.Set('mp_start_screen', 'start')]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
					}
				}
				frontend_button = {
					size = { 100% 100% }
					using = tooltip_ne
					enabled = "[LobbyView.CanControlSelected]"
					tooltip = "[LobbyView.GetControlToolTip]"
					visible = "[And(PlayerIsHost,And(Or(Not(GameIsMultiplayer),Not(IsPreparationLobby)),Or(LobbyView.HasSelectedPlayable,LobbyView.IsObserver)))]"	
					blockoverride "Text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
					blockoverride "On_click" { 
						#onclick = "[GameLobby.StartGame]"
						#onclick = "[LobbyView.Ready]"
						onclick = "[GetVariableSystem.Set('mp_start_screen', 'start')]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
					}
				}
			}
		}
	}

	type mpwindow = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		alpha = 1
		state = { 
			name = _show
			duration = 0.5
			alpha = 1
		}
		state = {
			name = _hide
			duration = 0.5
			alpha = 0
		}
		state = {
			name = show_mp_window
			on_start = "[PdxGuiWidget.Show]"
		}
		state = {
			name = hide_mp_window
			on_start = "[PdxGuiWidget.Hide]"
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = black_background
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = pattern_black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/background_x60bd_alpha_two_corner.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			alpha = 0.5
			texture = "gfx/interface/images/map.dds"
			using = portrait_x32y32bd_alpha_2
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/images/maps/europe.dds"
			using = portrait_x32y32bd_alpha_2
			visible = "[Or( Or( Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU') ), Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA') ) ), Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS') ), Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR') ) ) ), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA') )]"
			state = {
				name = europe_show
				delay = 0.001
				on_start = "[PdxGuiWidget.Show]"
			}
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/images/maps/north_america.dds"
			using = portrait_x32y32bd_alpha_2
			visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]"
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/images/maps/south_america.dds"
			using = portrait_x32y32bd_alpha_2
			visible = "[Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX'))]"
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/images/maps/africa_india.dds"
			using = portrait_x32y32bd_alpha_2
			visible = "[Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL'))]"
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/images/maps/asia.dds"
			using = portrait_x32y32bd_alpha_2
			visible = "[Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG'))]"
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			texture = "gfx/interface/base_parts/background_texture.dds"
			alpha = 0.8
			modify_texture = {
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/fade_bg_ingame_menu.dds"
			}
		}
		widget = {
			name = "country_images_on_map_europe"
			visible = "[Or( Or( Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU') ), Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA') ) ), Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS') ), Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR') ) ) ), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA') )]"
			size = { @windowwidth @windowheight }
			parentanchor = center
			state = {
				name = europe_show
				delay = 0.001
				on_start = "[PdxGuiWidget.Show]"
			}
			mp_country_on_map = {
				name = "GBR"
				blockoverride "color" { color = "[GetCountry('GBR').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/GBR.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]" }
				blockoverride "position" { position = { 740 320 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('gbr_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('gbr_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('GBR')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/GBR_COA.dds" }
				blockoverride "animation" {
					state = {
						name = gbr_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = gbr_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "PRU"
				blockoverride "color" { color = "[GetCountry('PRU').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/PRU.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]" }
				blockoverride "position" { position = { 1130 330 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('pru_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('pru_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('PRU')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/PRU_COA.dds" }
				blockoverride "animation" {
					state = {
						name = pru_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = pru_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "RUS"
				blockoverride "color" { color = "[GetCountry('RUS').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/RUS.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]" }
				blockoverride "position" { position = { 1400 340 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('rus_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('rus_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('RUS')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/RUS_COA.dds" }
				blockoverride "animation" {
					state = {
						name = rus_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = rus_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "FRA"
				blockoverride "color" { color = "[GetCountry('FRA').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/FRA.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]" }
				blockoverride "position" { position = { 845 540 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('fra_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('fra_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('FRA')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/FRA_COA.dds" }
				blockoverride "animation" {
					state = {
						name = fra_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = fra_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "NED"
				blockoverride "color" { color = "[GetCountry('NED').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/NED.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]" }
				blockoverride "position" { position = { 900 370 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('ned_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('ned_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('NED')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/NED_COA.dds" }
				blockoverride "animation" {
					state = {
						name = ned_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = ned_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "AUS"
				blockoverride "color" { color = "[GetCountry('AUS').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/AUS.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS')]" }
				blockoverride "position" { position = { 1120 540 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('aus_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('aus_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('AUS')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/AUS_COA.dds" }
				blockoverride "animation" {
					state = {
						name = aus_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = aus_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "TUR"
				blockoverride "color" { color = "[GetCountry('TUR').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/TUR.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR')]" }
				blockoverride "position" { position = { 1370 755 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('tur_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('tur_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('TUR')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/TUR_COA.dds" }
				blockoverride "animation" {
					state = {
						name = tur_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = tur_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "SAR"
				blockoverride "color" { color = "[GetCountry('SAR').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/SAR.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR')]" }
				blockoverride "position" { position = { 970 640 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('sar_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('sar_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('SAR')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/SAR_COA.dds" }
				blockoverride "animation" {
					state = {
						name = sar_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = sar_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "SPA"
				blockoverride "color" { color = "[GetCountry('SPA').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/SPA.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA')]" }
				blockoverride "position" { position = { 720 820 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('spa_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('spa_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('SPA')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/SPA_COA.dds" }
				blockoverride "animation" {
					state = {
						name = spa_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = spa_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			name = "country_images_on_map_north_america"
			visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]"
			size = { @windowwidth @windowheight }
			parentanchor = center
			mp_country_on_map = {
				name = "USA"
				blockoverride "color" { color = "[GetCountry('USA').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/USA.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]" }
				blockoverride "position" { position = { 1150 400 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('usa_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('usa_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('USA')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/USA_COA.dds" }
				blockoverride "animation" {
					state = {
						name = usa_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = usa_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			name = "country_images_on_map_south_america"
			visible = "[Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX'))]"
			size = { @windowwidth @windowheight }
			parentanchor = center
			mp_country_on_map = {
				name = "VNZ"
				blockoverride "color" { color = "[GetCountry('VNZ').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/VNZ.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ')]" }
				blockoverride "position" { position = { 1350 600 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('vnz_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('vnz_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('VNZ')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/VNZ_COA.dds" }
				blockoverride "animation" {
					state = {
						name = vnz_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = vnz_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "MEX"
				blockoverride "color" { color = "[GetCountry('MEX').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/MEX.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX')]" }
				blockoverride "position" { position = { 615 325 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('mex_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('mex_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('MEX')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/MEX_COA.dds" }
				blockoverride "animation" {
					state = {
						name = mex_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = mex_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			name = "country_images_on_map_africa_india"
			visible = "[Or( Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL'))]"
			size = { @windowwidth @windowheight }
			parentanchor = center
			mp_country_on_map = {
				name = "EGY"
				blockoverride "color" { color = "[GetCountry('EGY').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/EGY.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY')]" }
				blockoverride "position" { position = { 480 130 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('egy_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('egy_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('EGY')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/TUR_COA.dds" }
				blockoverride "animation" {
					state = {
						name = egy_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = egy_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "EIC"
				blockoverride "color" { color = "[GetCountry('EIC').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/EIC.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')]" }
				blockoverride "position" { position = { 1470 720 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('eic_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('eic_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('EIC')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/EIC_COA.dds" }
				blockoverride "animation" {
					state = {
						name = eic_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = eic_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "KHL"
				blockoverride "color" { color = "[GetCountry('KHL').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/KHL.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL')]" }
				blockoverride "position" { position = { 1420 100 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('khl_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('khl_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('KHL')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/KHL_COA.dds" }
				blockoverride "animation" {
					state = {
						name = khl_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = khl_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			name = "country_images_on_map_asia"
			visible = "[Or(EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI'), EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG'))]"
			size = { @windowwidth @windowheight }
			parentanchor = center
			mp_country_on_map = {
				name = "CHI"
				blockoverride "color" { color = "[GetCountry('CHI').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/CHI.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI')]" }
				blockoverride "position" { position = { 860 450 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('chi_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('chi_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('CHI')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/CHI_COA.dds" }
				blockoverride "animation" {
					state = {
						name = chi_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = chi_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "TKG"
				blockoverride "color" { color = "[GetCountry('TKG').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/TKG.dds" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG')]" }
				blockoverride "position" { position = { 1420 330 } }
				blockoverride "onmouse" {
					onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('tkg_anim_1')]"
					onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('tkg_anim_2')]"
				}
				blockoverride "click" { onclick = "[SetLobbyCountryTag('TKG')]" }
				blockoverride "texture_coa" { texture = "gfx/interface/images/COA/TKG_COA.dds" }
				blockoverride "animation" {
					state = {
						name = tkg_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = tkg_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			size = { 400 980 }
			position = { 120 100 }
			flowcontainer = {
				parentanchor = hcenter
				position = { 0 30 }
				direction = vertical 
				spacing = 0

				icon = {
					name = "game_logo"
					parentanchor = hcenter
					texture = "gfx/frontend/game_logo.dds"
					scale = 0.8
					shaderfile = "gfx/FX/pdxgui_glow_game.shader"
				}
				flowcontainer = {
					direction = vertical
					spacing = 10
					parentanchor = hcenter
					#margin_widget = {
					#	size = { 100% 80 }
					#	parentanchor = hcenter
					#}
					flowcontainer = {
						direction = vertical
						spacing = 5
						widget = {
							size = { 435 50 }
							mp_country_button = {
								parentanchor = center
								position = { -2 0 }
								blockoverride "name" { text = "Play as any country" }
								blockoverride "visible" { visible = no }
								blockoverride "On_click" {
									onclick = "[PdxGuiTriggerAllAnimations('hide_mp_window')]"
									onclick = "[PanToCountry(GetCountry('GBR').Self)]"
								}
								blockoverride "flag"
								{
									texture = "gfx/interface/images/any_country.dds"
								}
								blockoverride "texture" { texture = "gfx/interface/images/background/GBR.dds" }
							}
						}
						textbox = {
							size = { 100% 50 }
							text = "mp_recommended_countries"
							using = HeaderFont
							fontsize = 28
							fontcolor = { 1 1 1 1 }
							align = center
						}
						scrollarea = {
							size = { 435 490 }
							scrollbarpolicy_horizontal = always_off
							#scrollbarpolicy_vertical = always_on
							#using = VerticalScrollAreaCutOff
							scrollbar_vertical = {
								using = VerticalScrollBar
							}
							
							scrollwidget = {
								flowcontainer = {
									margin_left = 10
									direction = vertical
									spacing = 5
									mp_category_drop = {
										blockoverride "Center_text" { text = "mp_region_europe" }
										blockoverride "Onclick_1" { onclick = "[GetVariableSystem.Set( 'mp_region_europe', 'no' )]" }
										blockoverride "Onclick_2" { onclick = "[GetVariableSystem.Set( 'mp_region_europe', 'yes' )]" }
										blockoverride "Visible_1" { visible = "[GetVariableSystem.HasValue( 'mp_region_europe', 'yes' )]" }
										blockoverride "Visible_2" { visible = "[Not( GetVariableSystem.HasValue( 'mp_region_europe', 'yes' ) )]" }
										blockoverride "texture" { texture = "gfx/interface/images/background/europe.dds" }
									}
									wiki_category_list = {
										visible = "[GetVariableSystem.HasValue( 'mp_region_europe', 'yes' )]"
										mp_country_button = {
											blockoverride "name" { text = "Great Britain" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('gbr_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('gbr_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('GBR')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('GBR').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('GBR').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/GBR.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Prussia" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('pru_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('pru_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('PRU')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('PRU').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('PRU').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/PRU.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Russia" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('rus_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('rus_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('RUS')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('RUS').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('RUS').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/RUS.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "France" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('fra_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('fra_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('FRA')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('FRA').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('FRA').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/FRA.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Netherlands" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('ned_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('ned_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('NED')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('NED').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('NED').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/NED.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Austria" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('aus_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('aus_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('AUS')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('AUS').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('AUS').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/AUS.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Ottoman Empire" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('tur_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('tur_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('TUR')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('TUR').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('TUR').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/TUR.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Sardinia" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('sar_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('sar_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('SAR')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('SAR').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('SAR').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/SAR.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Spain" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('spa_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('spa_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('SPA')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('SPA').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('SPA').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/SPA.dds" }
										}
									}
									mp_category_drop = {
										blockoverride "Center_text" { text = "mp_region_america" }
										blockoverride "Onclick_1" { onclick = "[GetVariableSystem.Set( 'mp_region_america', 'no' )]" }
										blockoverride "Onclick_2" { onclick = "[GetVariableSystem.Set( 'mp_region_america', 'yes' )]" }
										blockoverride "Visible_1" { visible = "[GetVariableSystem.HasValue( 'mp_region_america', 'yes' )]" }
										blockoverride "Visible_2" { visible = "[Not( GetVariableSystem.HasValue( 'mp_region_america', 'yes' ) )]" }
										blockoverride "texture" { texture = "gfx/interface/images/background/america.dds" }
									}
									wiki_category_list = {
										visible = "[GetVariableSystem.HasValue( 'mp_region_america', 'yes' )]"
										mp_country_button = {
											blockoverride "name" { text = "United States of America" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('usa_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('usa_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('USA')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('USA').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('USA').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/USA.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Venezuela" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('vnz_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('vnz_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('VNZ')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('VNZ').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('VNZ').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/VNZ.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Mexico" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('mex_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('mex_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('MEX')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('MEX').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('MEX').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/MEX.dds" }
										}
									}
									mp_category_drop = {
										blockoverride "Center_text" { text = "mp_region_africa_india" }
										blockoverride "Onclick_1" { onclick = "[GetVariableSystem.Set( 'mp_region_africa_india', 'no' )]" }
										blockoverride "Onclick_2" { onclick = "[GetVariableSystem.Set( 'mp_region_africa_india', 'yes' )]" }
										blockoverride "Visible_1" { visible = "[GetVariableSystem.HasValue( 'mp_region_africa_india', 'yes' )]" }
										blockoverride "Visible_2" { visible = "[Not( GetVariableSystem.HasValue( 'mp_region_africa_india', 'yes' ) )]" }
										blockoverride "texture" { texture = "gfx/interface/images/background/africa_india.dds" }
									}
									wiki_category_list = {
										visible = "[GetVariableSystem.HasValue( 'mp_region_africa_india', 'yes' )]"
										mp_country_button = {
											blockoverride "name" { text = "Egypt" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('egy_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('egy_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('EGY')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('EGY').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('EGY').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/EGY.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "East India Company" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('eic_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('eic_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('EIC')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('EIC').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('EIC').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/EIC.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Sikh Empire" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('khl_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('khl_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('KHL')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('KHL').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('KHL').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/KHL.dds" }
										}
									}
									mp_category_drop = {
										blockoverride "Center_text" { text = "mp_region_asia" }
										blockoverride "Onclick_1" { onclick = "[GetVariableSystem.Set( 'mp_region_asia', 'no' )]" }
										blockoverride "Onclick_2" { onclick = "[GetVariableSystem.Set( 'mp_region_asia', 'yes' )]" }
										blockoverride "Visible_1" { visible = "[GetVariableSystem.HasValue( 'mp_region_asia', 'yes' )]" }
										blockoverride "Visible_2" { visible = "[Not( GetVariableSystem.HasValue( 'mp_region_asia', 'yes' ) )]" }
										blockoverride "texture" { texture = "gfx/interface/images/background/asia.dds" }
									}
									wiki_category_list = {
										visible = "[GetVariableSystem.HasValue( 'mp_region_asia', 'yes' )]"
										mp_country_button = {
											blockoverride "name" { text = "Great Qing" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('chi_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('chi_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('CHI')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('CHI').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('CHI').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/CHI.dds" }
										}
										mp_country_button = {
											blockoverride "name" { text = "Tokugawa" }
											blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG')]" }
											blockoverride "onmouse" {
												onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('tkg_anim_1')]"
												onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('tkg_anim_2')]"
											}
											blockoverride "On_click" {
												onclick = "[SetLobbyCountryTag('TKG')]"
											}
											blockoverride "flag"
											{
												texture = "[GetCountry('TKG').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
												frame = "[GetCountry('TKG').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
											}
											blockoverride "texture" { texture = "gfx/interface/images/background/TKG.dds" }
										}
									}
								}
							}
						}
					}
					widget = {
						size = { 180 6 }
						parentanchor = hcenter
						using = brown_underline
					}
					margin_widget = {
						size = { 376 48 }
						parentanchor = hcenter
						enabled = "[LobbyView.CanGoBack]"
						tooltip = "[LobbyView.GetGoBackToolTip]"
						frontend_button = {
							size = { 100% 100% }
							blockoverride "Text" { text = "BACK" }
							blockoverride "On_click" { 
								onclick = "[SetPreparationLobby('(bool)no')]"
								onclick = "[LobbyView.GoBack]"
								shortcut = "close_window"
							}
						}
					}
					margin_widget = {
						size = { 100% 80 }
						parentanchor = hcenter
						text_button_square = {
							size = { 210 28 }
							parentanchor = vcenter|hcenter

							blockoverride "Center_text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
							using = tooltip_ne
							blockoverride "On_click" { 
								onclick = "[LobbyView.Start]" 
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
							}
							enabled = "[LobbyView.CanStart]"
							tooltip = "[LobbyView.StartToolTip]"
							visible = "[And(PlayerIsHost, And(GameIsMultiplayer,IsPreparationLobby))]"
							
						}
						text_button_square = {
							size = { 210 28 }
							parentanchor = vcenter|hcenter

							blockoverride "Center_text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
							using = tooltip_ne
							blockoverride "On_click" { 
								onclick = "[GameLobby.StartGame]"
								onclick = "[LobbyView.Ready]"
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
							}
							enabled = "[LobbyView.CanControlSelected]"
							tooltip = "[LobbyView.GetControlToolTip]"
							visible = "[And(PlayerIsHost,And(Or(Not(GameIsMultiplayer),Not(IsPreparationLobby)),Or(LobbyView.HasSelectedPlayable,LobbyView.IsObserver)))]"		
						}
					}
				}
			}
		}
		widget = {
			size = { 60% 100% }
			parentanchor = right
			icon = {
				size = { 100% 100% }
				parentanchor = center
				texture = "gfx/interface/base_parts/background_texture.dds"
				alpha = 0.8
				modify_texture = {
					blend_mode = alphamultiply
					texture = "gfx/interface/base_parts/fade_bg_ingame_menu_right.dds"
				}
			}
		}
		widget = {
			parentanchor = right|top
			size = { 394 100% }
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "GBR_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "PRU_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "RUS_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "FRA_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "NED_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "AUS_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR')]"
				blockoverride "cards" {
					card_easy = { }
					card_islamic_empires = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "TUR_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "SAR_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA')]"
				blockoverride "cards" {
					card_easy = { }
					card_the_concert_of_europe = { }
				}
				blockoverride "description" { text = "SPA_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]"
				blockoverride "cards" {
					card_easy = { }
					card_revolutionary_states = { }
				}
				blockoverride "description" { text = "USA_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ')]"
				blockoverride "cards" {
					card_easy = { }
					card_revolutionary_states = { }
				}
				blockoverride "description" { text = "VNZ_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX')]"
				blockoverride "cards" {
					card_easy = { }
					card_independence_movements = { }
				}
				blockoverride "description" { text = "MEX_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY')]"
				blockoverride "cards" {
					card_easy = { }
					card_islamic_empires = { }
				}
				blockoverride "description" { text = "EGY_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')]"
				blockoverride "cards" {
					card_easy = { }
				}
				blockoverride "description" { text = "EIC_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL')]"
				blockoverride "cards" {
					card_easy = { }
				}
				blockoverride "description" { text = "KHL_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI')]"
				blockoverride "cards" {
					card_easy = { }
					card_sphere_of_сhina = { }
				}
				blockoverride "description" { text = "CHI_DESK" }
			}
			mp_right_panel = {
				visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG')]"
				blockoverride "cards" {
					card_easy = { }
				}
				blockoverride "description" { text = "TKG_DESK" }
			}
		}
	}

	type text_area_date = textbox {
		size = { 100% 100% }
		fontsize = 70
		align = hcenter
		font = HeaderFont
		using = Highlight_FontColor
		block "text" { text = "1800" }
		state = {
			name = "hide_animation"
			alpha = 0
		}
	}

	@initial_animation = 0.5
	@numbers_animation = 0.4
	type mp_start_screen = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		visible = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
		alpha = 0
		state = { 
			name = _show
			on_start = "[PdxGuiTriggerAllAnimations('initial_animation')]"
		}
		state = {
			name = _hide
			on_start = "[PdxGuiTriggerAllAnimations('hide_animation')]"
			duration = 0.5
		}
		state = {
			name = "initial_animation"
			duration = 0.5
			alpha = 1
			next = start_game
		}
		state = {
			name = "hide_animation"
			duration = 0.5
			alpha = 0
		}
		state = {
			name = "start_game"
			delay = 2.0
			on_start = "[LobbyView.Start]" 
			on_start = "[GameLobby.StartGame]"
			on_start = "[LobbyView.Ready]"
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "[GetCurrentLoadingScreen]"
		}
		progressbar = {
			size = { 44 44 }
			gfxtype = framedprogressbargfx
			texture = "gfx/interface/loading_progress.dds"
			framesize = { 44 45 }
			loopinterval = 1.0
			max = 0
			position = { 10 10 }
		}
		textbox = {
			position = { 60 0 }
			text = "Preparing the game..."
			size = { 200 60 }
			using = BaseFontS
			using = Black_FontColor
			fontsize = 16
			align = left
		}
		icon = {
			size = { 500 280 }
			parentanchor = center
			using = black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/horizontal_gradient_black.dds"
				blend_mode = alphamultiply
			}
			state = {
				name = "initial_animation"
				duration = @initial_animation
				size = { 1500 280 }
				bezier = { 0.1 0.25 0.4 1 }
			}
			state = {
				name = "hide_animation"
				duration = @initial_animation
				size = { 500 280 }
			}
		}
		vbox = {
			widget = {
				layoutpolicy_vertical = expanding
			}
			widget = {
				layoutpolicy_vertical = fixed
				size = { 564 75 }
				icon = {
					size = { 100% 100% }
					alpha = 0
					position = { 0 15 }
					texture = "gfx/interface/base_parts/base_color.dds"
					color = { 0.95 0.8 0.44 1 }
					modify_texture = {
						texture = "gfx/interface/images/elements/top_image.dds"
						blend_mode = alphamultiply
					}
					state = {
						name = "initial_animation"
						duration = @initial_animation
						position = { 0 -15 }
						alpha = 1
						bezier = { 0.1 0.25 0.4 1 }
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						position = { 0 15 }
						alpha = 0
					}
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				spacing = 15
				widget = {
					layoutpolicy_horizontal = expanding
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 60 60 }
						alpha = 0
						parentanchor = right
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							size = { 90 90 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				textbox = {
					layoutpolicy_horizontal = fixed
					fontsize = 70
					align = hcenter
					font = HeaderFont
					using = Highlight_FontColor
					text = "[LobbyView.GetSelectedPlayable.GetCountry.GetNameWithNoTooltip]"
					autoresize = yes
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 60 60 }
						alpha = 0
						parentanchor = left
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							size = { 90 90 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { -405 0 }
						alpha = 0
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							position = { -10 0 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
							next = finish_date
						}
						state = {
							name = "finish_date"
							delay = 1.2
							duration = @numbers_animation
							position = { -20 0 }
							bezier = { 0.1 0.25 0.4 1 }
							next = real_finish_date
						}
						state = {
							name = "real_finish_date"
							duration = 0.1
							position = { -10 0 }
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { -405 0 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 150 75 }
					alpha = 0
					state = {
						name = "initial_animation"
						duration = @initial_animation
						alpha = 1
						bezier = { 1 1 0 1 }
						on_start = "[PdxGuiTriggerAllAnimations('0000')]"
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
					widget = {
						size = { 100% 100% }
						position = { 0 400 }
						state = {
							name = "initial_animation"
							duration = @initial_animation
							delay = 0.1
							alpha = 1
							position = { 0 0 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 0 200 }
							alpha = 0
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0000" }
							state = {
								name = "0000"
								alpha = 1
								delay = @initial_animation
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0001')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0001" }
							state = {
								name = "0001"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0018')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0018" }
							state = {
								name = "0018"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0181')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0181" }
							state = {
								name = "0181"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('1815')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "1815" }
							state = {
								name = "1815"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_alert"
								}
								next = show
							}
							state = {
								name = "show"
							}
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { 405 0 }
						alpha = 0
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							position = { 10 0 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
							next = finish_date
						}
						state = {
							name = "finish_date"
							delay = 1.2
							duration = @numbers_animation
							position = { 20 0 }
							bezier = { 0.1 0.25 0.4 1 }
							next = real_finish_date
						}
						state = {
							name = "real_finish_date"
							duration = 0.1
							position = { 10 0 }
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 405 0 }
							alpha = 0
						}
					}
				}
			}
			widget = {
				layoutpolicy_vertical = expanding
			}
		}
	}

	type mp_start_screen_ingame = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		alpha = 1
		visible = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
		state = { 
			name = start
			duration = 1.0
			trigger_when = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
			on_finish = "[PdxGuiTriggerAllAnimations('start_hide_animation')]"
		}
		state = {
			name = "start_hide_animation"
			delay = 0.5
			duration = 1.0
			alpha = 0
			on_start = "[PdxGuiTriggerAllAnimations('hide_animation')]"
			on_finish = "[GetVariableSystem.Set('mp_start_screen', 'select')]"
		}
		state = {
			name = "hide_animation"
			alpha = 1
		}
		#state = {
		#	name = "show_all"
		#	on_start = "[PdxGuiTriggerAllAnimations('base_animation')]"
		#	on_start = "[GetVariableSystem.Set('mp_start_screen', 'select')]"
		#	alpha = 1
		#}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "[GetCurrentLoadingScreen]"
		}
		progressbar = {
			size = { 44 44 }
			gfxtype = framedprogressbargfx
			texture = "gfx/interface/loading_progress.dds"
			framesize = { 44 45 }
			loopinterval = 1.0
			max = 0
			position = { 10 10 }
		}
		textbox = {
			position = { 60 0 }
			text = "Preparing the game..."
			size = { 200 60 }
			using = BaseFontS
			using = Black_FontColor
			fontsize = 16
			align = left
		}
		icon = {
			size = { 1500 280 }
			parentanchor = center
			using = black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/horizontal_gradient_black.dds"
				blend_mode = alphamultiply
			}
			state = {
				name = "base_animation"
				size = { 1500 280 }
			}
			state = {
				name = "hide_animation"
				duration = @initial_animation
				size = { 500 280 }
			}
		}
		vbox = {
			widget = {
				layoutpolicy_vertical = expanding
			}
			widget = {
				layoutpolicy_vertical = fixed
				size = { 564 75 }
				icon = {
					size = { 100% 100% }
					alpha = 1
					position = { 0 -15 }
					texture = "gfx/interface/base_parts/base_color.dds"
					color = { 0.95 0.8 0.44 1 }
					modify_texture = {
						texture = "gfx/interface/images/elements/top_image.dds"
						blend_mode = alphamultiply
					}
					state = {
						name = "base_animation"
						position = { 0 -15 }
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						position = { 0 15 }
						alpha = 0
					}
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				spacing = 15
				widget = {
					layoutpolicy_horizontal = expanding
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 90 90 }
						parentanchor = right
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							size = { 90 90 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				textbox = {
					layoutpolicy_horizontal = fixed
					fontsize = 70
					align = hcenter
					font = HeaderFont
					using = Highlight_FontColor
					text = "[InGameTopbar.GetPlayer.GetNameWithNoTooltip]"
					autoresize = yes
					alpha = 0
					state = {
						name = "base_animation"
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 90 90 }
						parentanchor = left
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							size = { 90 90 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { -10 0 }
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							position = { -10 0 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { -405 0 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 150 75 }
					alpha = 1
					state = {
						name = "base_animation"
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
					widget = {
						size = { 100% 100% }
						state = {
							name = "base_animation"
							alpha = 1
							position = { 0 0 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 0 200 }
							alpha = 0
						}
						textbox = {
							size = { 100% 100% }
							fontsize = 70
							align = hcenter
							font = HeaderFont
							using = Highlight_FontColor
							text = "1815"
							alpha = 1
							state = {
								name = "base_animation"
								alpha = 1
							}
							state = {
								name = "hide_animation"
								alpha = 0
							}
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { 10 0 }
						alpha = 1
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							position = { 10 0 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 405 0 }
							alpha = 0
						}
					}
				}
			}
			widget = {
				layoutpolicy_vertical = expanding
			}
		}
	}
}