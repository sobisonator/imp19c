@mincategorybuttonwidth = 161
@maxcategorybuttonwidth = 161
@mincategorybuttonheight = 42
@maxcategorybuttonheight = 42
@window_width = 940
@window_height = 920

base_window = {
	gfxtype = windowgfx
	name = "trade_view"
	size = { @window_width @window_height }
	
	using = main_window_template

	### Audio ###
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
		on_start = "[GetVariableSystem.Set('trade_tabs', 'trade_tab_open')]"
		on_start = "[ExecuteConsoleCommand('event piechart_update.2')]"
		on_start = "[ExecuteConsoleCommand('event piechart_update.1')]"
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	flowcontainer = {
		direction = vertical
		widget = {
			size = { @window_width 12 }
			using = MainWindowHeaderLine
		}
		margin_widget = {
			size = { @window_width 58 }
			layoutpolicy_horizontal = expanding
			hbox = { 
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = expanding
				spacing = -2
				margin_widget = {
					using = MainWindowHeaderContentLeft
					blockoverride "Title_text" { text = "TRADE_MENU_HEADER" }
					blockoverride "FlagOrIcon"
					{
						icon = {
							using = gold_background
							size = { 32 32 }
							modify_texture = {
								texture = "gfx/interface/icons/menu_buttons/menu_trade.dds"
								blend_mode = alphamultiply
							}
						}
					}
				}
				flowcontainer = {
					spacing = 2
					category_tab = {
						blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
						blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
						blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('trade_tabs', 'trade_tab_open'))]" }
						blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('trade_tabs', 'trade_tab_open')]" }
						######## Shared Overrides
						blockoverride "Center_text" { text = "Trade" }
						blockoverride "Icon" { visible = no }
						######## Small Button Overrides
						blockoverride "ClickFunction"
						{
							onclick = "[GetVariableSystem.Set('trade_tabs', 'trade_tab_open')]"
						}
					}
					category_tab = {
						blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
						blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
						blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('trade_tabs', 'goods_tab_open'))]" }
						blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('trade_tabs', 'goods_tab_open')]" }
						######## Shared Overrides
						blockoverride "Center_text" { text = "Trade Goods" }
						blockoverride "Icon" { visible = no }
						######## Small Button Overrides
						blockoverride "ClickFunction"
						{
							onclick = "[GetVariableSystem.Set('trade_tabs', 'goods_tab_open')]"
						}
					}
					category_tab = {
						blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
						blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
						blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('trade_tabs', 'trade_zone_view_open'))]" }
						blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('trade_tabs', 'trade_zone_view_open')]" }
						######## Shared Overrides
						blockoverride "Center_text" { text = "Trade Zones" }
						blockoverride "Icon" { visible = no }
						######## Small Button Overrides
						datacontext = "[GetScriptedGui('show_trade_zones_button')]"
						blockoverride "ClickFunction"
						{
							onclick = "[GetVariableSystem.Set('trade_tabs', 'trade_zone_view_open')]"
							onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
						}
					}
					category_tab = {
						blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
						blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
						blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('trade_tabs', 'industry_tab_open'))]" }
						blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('trade_tabs', 'industry_tab_open')]" }
						######## Shared Overrides
						blockoverride "Center_text" { text = "Industry" }
						blockoverride "Icon" { visible = no }
						######## Small Button Overrides
						blockoverride "ClickFunction"
						{
							onclick = "[GetVariableSystem.Set('trade_tabs', 'industry_tab_open')]"
						}
					}
				}
				margin_widget = {
					using = MainWindowHeaderContentRight
					blockoverride "White_buttons" 
					{
						button_back = {
							shortcut = "previous_window"
							onclick = "[TradeView.OnPrevious]"
							tooltip = "PREVIOUS_TRADE_VIEW"
						}
					
						button_close = {
							onclick = "[TradeView.OnClose]"
							tooltip = "CLOSE"
							shortcut = "close_window"
						}
					}
				}
			}
		}
		flowcontainer = {
			direction = vertical
			ignoreinvisible = yes	
			# Vanilla Trade View tab
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('trade_tabs', 'trade_tab_open')]"
				direction = vertical
				margin = { 10 10 }
				margin_widget = {
					size = { 920 83 }
					widget = {
						size = { 935 96 }
						position = { -8 -17 }
						alpha = 0.5
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = black_background
							modify_texture = {
								texture = "gfx/interface/base_parts/horizontal_gradient_stretch_sides_black.dds"
								blend_mode = alphamultiply
								spriteType = Corneredtiled
								spriteborder = { 80 20 }
							}
						}
						background = {
							shaderfile = "gfx/FX/pdxgui_default.shader"
							using = black_background
							margin_top = -75%
							modify_texture = {
								texture = "gfx/interface/base_parts/gradient_black_invert.dds"
								blend_mode = alphamultiply
							}
						}
					}
					hbox = {
						spacing = 16
						layoutpolicy_horizontal = expanding
						flowcontainer = {
							direction = vertical
							layoutpolicy_vertical = expanding
							spacing = 5
							icon_and_text = {
								size = { 124 32 }
								blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/global_import_commerce_modifier.dds" }
								blockoverride "Text" { text = "[TradeView.GetPlayer.GetModifierValue('global_import_commerce_modifier')]" }
								tooltip = "[TradeView.GetPlayer.GetModifierTooltip('global_import_commerce_modifier')]" 
							}
							icon_and_text = {
								size = { 124 32 }
								blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/global_export_commerce_modifier.dds" }
								blockoverride "Text" { text = "[TradeView.GetPlayer.GetModifierValue('global_export_commerce_modifier')]" }
								tooltip = "[TradeView.GetPlayer.GetModifierTooltip('global_export_commerce_modifier')]"
							}
						}
						flowcontainer = {
							direction = vertical
							layoutpolicy_vertical = expanding
							spacing = 5
							icon_and_text = {
								size = { 124 32 }
								blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/global_capital_trade_routes.dds" }
								blockoverride "Text" { text = "[TradeView.GetPlayer.GetCapitalState.GetMaxNumTradeRoutes]" }
								tooltip = "[TradeView.GetPlayer.GetCapitalState.GetTradeRoutesMaximumTooltip('CAPITAL_IMPORT_ROUTES_HEADER')]"
							}
							icon_and_text = {
								size = { 124 32 }
								blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/global_commerce_modifier.dds" }
								blockoverride "Text" { text = "[TradeView.GetPlayer.GetModifierValue('global_commerce_modifier')]" }
								tooltip = "[TradeView.GetPlayer.GetModifierTooltip('global_commerce_modifier')]"
							}
							#icon_and_text = {
							#	size = { 124 0 }
							#	blockoverride "Icon" { texture = "gfx/interface/icons/modifiers/global_state_trade_routes.dds" }
							#	blockoverride "Text" { text = "[TradeView.GetPlayer.GetModifierValue('global_state_trade_routes')]" }
							#	tooltip = "[TradeView.GetPlayer.GetModifierTooltip('global_state_trade_routes')]"
							#}
						}
						vbox = {
							layoutpolicy_horizontal = expanding
						}
						flowcontainer = {
							direction = vertical
							layoutpolicy_vertical = expanding
							spacing = 5
							checkbox_entry = {
								size = { 240 32}
								tooltip = "[SelectLocalization(TradeView.GetPlayer.AutoAcceptTrade,'AUTO_TRADE_ACCEPTED','AUTO_TRADE_DECLINED')]"
								blockoverride "Frame" { frame = "[TradeView.GetAutoFrame]" }
								blockoverride "On_click" { onclick = "[TradeView.ToggleAutoAcceptTrade]" }
								blockoverride "Text" { text = "ACCEPT_ALL_TRADES" }
							}
							checkbox_entry = {
								size = { 240 32 }
								tooltip = "[SelectLocalization(TradeView.GetPlayer.NeverGiveUpTradeSurplus,'BLOCK_TRADE_SURPLUS','ALLOW_TRADE_SURPLUS')]"
								blockoverride "Frame" { frame = "[TradeView.GetSurplusFrame]" }
								blockoverride "On_click" { onclick = "[TradeView.ToggleCapitalSurplus]" }
								blockoverride "Text" { text = "BLOCKED_SURPLUS" }
							}
						}
					}
				}
				margin_widget = {
					size = { 920 230 }
					icon = {
						size = { 935 220 }
						using = black_background
						position = { -8 -2 }
						alpha = 0.5
						modify_texture = {
							texture = "gfx/interface/base_parts/gradient_black.dds"
							blend_mode = alphamultiply
						}
					}
					icon = {
						position = { -8 -4 }
						using = brighten_red_background
						spriteType = Corneredtiled
						size = { 935 2 }
					}
					margin_widget = {
						margin = { 5 5 }
						size = { 935 32 }
						sub_header_v = {
							size = { 100% 0 }
							position = { -8 -4 }
							blockoverride "Title_text" { text = "National trade statistics" }
							tooltipwidget = wiki_trade_tooltip
						}
					}
					hbox = {
						spacing = 16
						layoutpolicy_horizontal = expanding
						margin_top = 32
						vbox = {
							spacing = 5
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "National trade balance:" }
								blockoverride "TextValue" { text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_national_balance')|+=3]" }
							}
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "All exports value:" }
								blockoverride "TextValue" { text = "#G + £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_national_income')|3]" }
							}
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "All imports value:" }
								blockoverride "TextValue" { text = "#R - £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_national_expenditure')|3]" }
							}
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "Income from shipping:" }
								blockoverride "TextValue" { text = "#G + £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('SHIPPING_earned_all_TZs')|3]" }
							}
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "Expenses on shipping:" }
								blockoverride "TextValue" { text = "#R - £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('SHIPPING_national_expenses')|3]" }
							}
						}
						vbox = {
							layoutpolicy_horizontal = expanding
						}
						vbox = {
							layoutpolicy_vertical = expanding
							spacing = 5
							vbox = { }
							panelka_trade = {
								size = { 370 32 }
								#blockoverride "Icon" { texture = "gfx/interface/icons/powers/religious.dds" }
								blockoverride "TextBox" { text = "Export value in colonies:" }
								blockoverride "TextValue" { text = "#G + £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_all_colony_export_income')|3]" }
							}
							vbox = {
								layoutpolicy_vertical = expanding
							}
						}
					}
				}
				margin_widget = {
					size = { 920 200 }
					#margin_widget = {
					#	margin = { 5 5 }
					#	size = { 935 32 }
					#	sub_header_v = {
					#		size = { 100% 0 }
					#		position = { -8 -4 }
					#		blockoverride "Title_text" { text = "National trade statistics" }
					#		tooltipwidget = wiki_trade_tooltip
					#	}
					#}
				}
				margin_widget = {
					size = { 920 280 }
					layoutpolicy_horizontal = expanding
					sub_header_v = {
						blockoverride "Title_text" { text = "TRADE_VIEW_REQUEST_DENY" }
						size = { 49% 100% }
						
						dynamicgridbox = {
							name = "capital_surplus_grid"
							position = { 26 36 }
							size = { 100% 100% }
							maxhorizontalslots = 12
							datamodel_wrap = 6
							
							datamodel = "[TradeView.GetAvailableTradeGoods]"
							
							item = {
								trade_good_entry = {
									blockoverride "Icon" { 
										texture = "[GetTradeGoodsIcon(TradeGoodsGlue.GetTradeGood)]" 
										size = { 33 33 }
									}
									blockoverride "Text" { visible = no }
									blockoverride "On_click" { onclick = "[TradeGoodsGlue.ToggleDenyTradeGood]" }
									tooltip = "TRADEGOOD_DENY_INFO"
									size = { 40 40 }
									margin_bottom = 3
								}
							}
						}
						
					}
					
					sub_header_v = {
						blockoverride "Title_text" { text = "TRADE_VIEW_REQUEST_DENIED" }
						size = { 49% 100% }
						position = { 51% 0 }
						
						dynamicgridbox = {
							name = "capital_surplus_grid"
							position = { 20 40 }
							size = { 100% 100% }
							maxhorizontalslots = 12
							datamodel_wrap = 6
							
							datamodel = "[TradeView.GetDeniedTradeGoods]"
							
							item = {
								trade_good_entry = {
									blockoverride "Icon" { 
										texture = "[GetTradeGoodsIcon(TradeGoodsGlue.GetTradeGood)]" 
										size = { 36 36 }
									}
									blockoverride "Text" { visible = no }
									blockoverride "On_click" { onclick = "[TradeGoodsGlue.ToggleDenyTradeGood]" }
									tooltip = "TRADEGOOD_DENY_INFO"
									size = { 42 40 }
									margin_bottom = 3
								}
							}
						}
						
					}	
				}
			}
			# Trade Goods tab
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('trade_tabs', 'goods_tab_open')]"
				direction = vertical
				margin = { 10 10 }
				# Category tags
				margin_widget = {
					size = { 920 25 }
					layoutpolicy_horizontal = expanding
					flowcontainer = {
						spacing = 6
						position = { 25 0 }
						text_button_sort = {
							tooltip = "Trade Goods"
							size = { 120 32 }
							
							blockoverride "Button_text"
							{
								text = "Goods"
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
						text_button_sort = {
							tooltip = "Total produced nationally each quarter"
							size = { 120 32 }
							
							blockoverride "Button_text"
							{
								text = "Produced"
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
						text_button_sort = {
							tooltip = "Total sold nationally this quarter"
							size = { 120 32 }
							
							blockoverride "Button_text"
							{
								text = "Demand" # Remove this row, add a new one on the end for top global producers
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
						text_button_sort = {
							tooltip = "Nationwide total demand"
							size = { 130 32 }
							
							blockoverride "Button_text"
							{
								text = "National balance"
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
						text_button_sort = {
							tooltip = "The average amount of unfulfilled demand across the country"
							size = { 140 32 }
							
							blockoverride "Button_text"
							{
								text = "Our import price" # Tradegood income plus tradegood expense for every governorship
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
						text_button_sort = {
							tooltip = ""
							size = { 210 32 }
							
							blockoverride "Button_text"
							{
								text = "Top producers"
							}
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Drop_shadow" 
							{
								visible = no
							}
						}
					}
				}
				margin_widget = {
					size = { 920 795 }
					scrollarea = {
						size = { 100% 100% }
						scrollbarpolicy_horizontal = always_off
						using = VerticalScrollAreaCutOff
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						scrollwidget = {
							flowcontainer = {
								direction = vertical
								spacing = 5
								margin_top = 10
								margin_left = 20
								margin_bottom = 10
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip" {
			                        	tooltip = "grainDESC"
			                        	texture = "gfx/interface/icons/tradegoods/grain.dds"
			                        }
			                        blockoverride "name" {
			                        	text = "grain"
			                        }
			                        blockoverride "produced_text"  {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_grain')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"  {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_grain')]"
			                        }
			                        blockoverride "top_producers_tooltip"  {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_grain')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"  {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_grain')]"
			                        }
			                        blockoverride "top_consumers_tooltip" {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_grain')|0] units"
			                        }
			                        blockoverride "demand_text" {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_grain_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"  {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_grain')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_grain')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_grain')|+=3]"
			                        }
			                        blockoverride "global_price_text" {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_grain').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip" {
			                        	tooltip = "fishDESC"
			                        	texture = "gfx/interface/icons/tradegoods/fish.dds"
			                        }
			                        blockoverride "name" {
			                        	text = "fish"
			                        }
			                        blockoverride "produced_text" {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_fish')|1]"
			                        }
			                        blockoverride "top_producers_datamodel" {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_fish')]"
			                        }
			                        blockoverride "top_producers_tooltip" {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_fish')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel" {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_fish')]"
			                        }
			                        blockoverride "top_consumers_tooltip" {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_fish')|0] units"
			                        }
			                        blockoverride "demand_text" {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_fish_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip" {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_fish')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_fish')|+=3]"
			                          text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_fish')|+=3]"
			                        }
			                        blockoverride "global_price_text" {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_fish').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "livestockDESC"
			                        	texture = "gfx/interface/icons/tradegoods/livestock.dds"
			                        }
			                        blockoverride "name" {
			                        	text = "livestock"
			                        }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_livestock')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_livestock')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_livestock')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_livestock')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_livestock')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_livestock_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_livestock')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_livestock')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_livestock')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_livestock').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "vegetablesDESC"
			                        	texture = "gfx/interface/icons/tradegoods/vegetables.dds"
			                        }
			                        blockoverride "name" {
			                        	text = "vegetables"
			                        }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_vegetables')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_vegetables')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                   		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_vegetables')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_vegetables')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_vegetables')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_vegetables_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_vegetables')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_vegetables')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_vegetables')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_vegetables').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "temperate_fruitDESC"
			                        	texture = "gfx/interface/icons/tradegoods/temperate_fruit.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "temperate_fruit"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_temperate_fruit')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_temperate_fruit')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_temperate_fruit')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_temperate_fruit')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_temperate_fruit')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_temperate_fruit_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_temperate_fruit')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_temperate_fruit')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_temperate_fruit')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_temperate_fruit').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "processed_foodsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/processed_foods.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "processed_foods"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_processed_foods')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_processed_foods')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_processed_foods')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_processed_foods')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_processed_foods')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_processed_foods_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_processed_foods')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_processed_foods')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_processed_foods')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_processed_foods').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "clothingDESC"
			                        	texture = "gfx/interface/icons/tradegoods/clothing.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "clothing"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_clothing')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_clothing')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_clothing')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_clothing')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_clothing')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_clothing_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_clothing')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_clothing')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_clothing')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_clothing').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "furnitureDESC"
			                        	texture = "gfx/interface/icons/tradegoods/furniture.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "furniture"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_furniture')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
				                    	datamodel = "[Player.MakeScope.GetList('top_producers_furniture')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_furniture')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_furniture')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_furniture')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_furniture_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_furniture')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_furniture')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_furniture')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_furniture').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "pharmaceuticalsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/pharmaceuticals.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "pharmaceuticals"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_pharmaceuticals')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_pharmaceuticals')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_pharmaceuticals')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_pharmaceuticals')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_pharmaceuticals')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_pharmaceuticals_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_pharmaceuticals')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_pharmaceuticals')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_pharmaceuticals')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_pharmaceuticals').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "coalDESC"
			                        	texture = "gfx/interface/icons/tradegoods/coal.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "coal"
				                    }
			                        blockoverride "produced_text"
			                        {
			                          	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_coal')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                          	datamodel = "[Player.MakeScope.GetList('top_producers_coal')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_coal')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_coal')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_coal')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_coal_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_coal')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_coal')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_coal')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_coal').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "alcoholDESC"
			                        	texture = "gfx/interface/icons/tradegoods/alcohol.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "alcohol"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_alcohol')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_alcohol')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_alcohol')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_alcohol')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_alcohol')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_alcohol_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_alcohol')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_alcohol')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_alcohol')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_alcohol').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "gemsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/gems.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "gems"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_gems')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_gems')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_gems')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_gems')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_gems')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_gems_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_gems')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_gems')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_gems')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_gems').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "opiumDESC"
			                        	texture = "gfx/interface/icons/tradegoods/opium.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "opium"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_opium')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_opium')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_opium')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_opium')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_opium')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_opium_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_opium')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_opium')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_opium')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_opium').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "tobaccoDESC"
			                        	texture = "gfx/interface/icons/tradegoods/tobacco.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "tobacco"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_tobacco')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_tobacco')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_tobacco')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_tobacco')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_tobacco')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_tobacco_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_tobacco')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_tobacco')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_tobacco')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_tobacco').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "coffeeDESC"
			                        	texture = "gfx/interface/icons/tradegoods/coffee.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "coffee"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_coffee')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_coffee')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_coffee')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_coffee')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_coffee')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_coffee_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_coffee')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_coffee')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_coffee')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_coffee').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "teaDESC"
			                        	texture = "gfx/interface/icons/tradegoods/tea.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "tea"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_tea')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_tea')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_tea')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_tea')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_tea')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_tea_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_tea')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_tea')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_tea')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_tea').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "spicesDESC"
			                        	texture = "gfx/interface/icons/tradegoods/spices.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "spices"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_spices')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_spices')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_spices')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_spices')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_spices')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_spices_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_spices')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_spices')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_spices')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_spices').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "sugarDESC"
			                        	texture = "gfx/interface/icons/tradegoods/sugar.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "sugar"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_sugar')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_sugar')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_sugar')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_sugar')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_sugar')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_sugar_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_sugar')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_sugar')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_sugar')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_sugar').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "luxury_clothingDESC"
			                        	texture = "gfx/interface/icons/tradegoods/luxury_clothing.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "luxury_clothing"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_luxury_clothing')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_luxury_clothing')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_luxury_clothing')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_luxury_clothing')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_luxury_clothing')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_luxury_clothing_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_luxury_clothing')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_luxury_clothing')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_luxury_clothing')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_luxury_clothing').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "luxury_furnitureDESC"
			                        	texture = "gfx/interface/icons/tradegoods/luxury_furniture.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "luxury_furniture"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_luxury_furniture')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_luxury_furniture')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_luxury_furniture')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_luxury_furniture')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_luxury_furniture')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_luxury_furniture_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_luxury_furniture')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_luxury_furniture')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_luxury_furniture')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_luxury_furniture').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "glassDESC"
			                        	texture = "gfx/interface/icons/tradegoods/glass.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "glass"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_glass')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_glass')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_glass')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_glass')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_glass')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_glass_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_glass')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_glass')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_glass')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_glass').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "motorsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/motors.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "motors"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_motors')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_motors')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_motors')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_motors')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_motors')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_motors_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_motors')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_motors')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_motors')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_motors').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "furDESC"
			                        	texture = "gfx/interface/icons/tradegoods/fur.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "fur"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_fur')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_fur')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_fur')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_fur')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_fur')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_fur_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_fur')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_fur')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_fur')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_fur').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "industrial_fibresDESC"
			                        	texture = "gfx/interface/icons/tradegoods/industrial_fibres.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "industrial_fibres"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_industrial_fibres')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_industrial_fibres')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_industrial_fibres')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_industrial_fibres')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_industrial_fibres')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_industrial_fibres_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_industrial_fibres')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_industrial_fibres')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_industrial_fibres')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_industrial_fibres').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "textile_fibresDESC"
			                        	texture = "gfx/interface/icons/tradegoods/textile_fibres.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "textile_fibres"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_textile_fibres')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_textile_fibres')]"
			                        }
				                    blockoverride "top_producers_tooltip"
				                    {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_textile_fibres')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_textile_fibres')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_textile_fibres')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_textile_fibres_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_textile_fibres')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_textile_fibres')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_textile_fibres')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_textile_fibres').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "silkDESC"
			                        	texture = "gfx/interface/icons/tradegoods/silk.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "silk"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_silk')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_silk')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_silk')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_silk')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_silk')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_silk_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_silk')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_silk')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_silk')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_silk').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "woodDESC"
			                        	texture = "gfx/interface/icons/tradegoods/wood.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "wood"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_wood')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_wood')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_wood')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_wood')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_wood')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_wood_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_wood')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_wood')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_wood')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_wood').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "stoneDESC"
			                        	texture = "gfx/interface/icons/tradegoods/stone.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "stone"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_stone')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_stone')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_stone')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_stone')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_stone')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_stone_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_stone')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_stone')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_stone')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_stone').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "sulphurDESC"
			                        	texture = "gfx/interface/icons/tradegoods/sulphur.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "sulphur"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_sulphur')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_sulphur')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_sulphur')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_sulphur')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_sulphur')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_sulphur_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_sulphur')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_sulphur')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_sulphur')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_sulphur').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "tinDESC"
			                        	texture = "gfx/interface/icons/tradegoods/tin.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "tin"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_tin')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_tin')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_tin')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_tin')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_tin')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_tin_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_tin')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_tin')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_tin')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_tin').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "copperDESC"
			                        	texture = "gfx/interface/icons/tradegoods/copper.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "copper"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_copper')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_copper')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_copper')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_copper')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_copper')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_copper_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_copper')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_copper')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_copper')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_copper').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "ironDESC"
			                        	texture = "gfx/interface/icons/tradegoods/iron.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "iron"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_iron')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_iron')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                   		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_iron')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_iron')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_iron')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_iron_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_iron')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_iron')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_iron')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_iron').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "goldDESC"
			                        	texture = "gfx/interface/icons/tradegoods/gold.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "gold"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_gold')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_gold')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_gold')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_gold')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_gold')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_gold_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_gold')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_gold')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_gold')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_gold').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "silverDESC"
			                        	texture = "gfx/interface/icons/tradegoods/silver.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "silver"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_silver')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_silver')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_silver')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_silver')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_silver')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_silver_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_silver')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_silver')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_silver')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_silver').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "dyeDESC"
			                        	texture = "gfx/interface/icons/tradegoods/dye.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "dye"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_dye')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_dye')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_dye')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_dye')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_dye')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_dye_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_dye')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_dye')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_dye')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_dye').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "leadDESC"
			                        	texture = "gfx/interface/icons/tradegoods/lead.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "lead"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_lead')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_lead')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_lead')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_lead')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_lead')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_lead_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_lead')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_lead')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_lead')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_lead').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "oilDESC"
			                        	texture = "gfx/interface/icons/tradegoods/oil.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "oil"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_oil')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_oil')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_oil')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_oil')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_oil')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_oil_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_oil')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_oil')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_oil')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_oil').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "hardwoodDESC"
			                        	texture = "gfx/interface/icons/tradegoods/hardwood.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "hardwood"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_hardwood')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_hardwood')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_hardwood')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_hardwood')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_hardwood')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_hardwood_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_hardwood')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_hardwood')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_hardwood')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_hardwood').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "rubberDESC"
			                        	texture = "gfx/interface/icons/tradegoods/rubber.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "rubber"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_rubber')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_rubber')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_rubber')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_rubber')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_rubber')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_rubber_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_rubber')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_rubber')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_rubber')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_rubber').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "saltDESC"
			                        	texture = "gfx/interface/icons/tradegoods/salt.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "salt"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_salt')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_salt')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_salt')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_salt')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_salt')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_salt_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_salt')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_salt')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_salt')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_salt').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "electronicsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/electronics.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "electronics"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_electronics')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_electronics')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_electronics')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_electronics')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_electronics')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_electronics_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_electronics')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_electronics')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_electronics')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_electronics').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "construction_materialsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/construction_materials.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "construction_materials"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_construction_materials')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_construction_materials')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_construction_materials')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_construction_materials')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_construction_materials')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_construction_materials_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_construction_materials')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_construction_materials')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_construction_materials')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_construction_materials').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "steelDESC"
			                        	texture = "gfx/interface/icons/tradegoods/steel.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "steel"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_steel')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_steel')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_steel')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_steel')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_steel')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_steel_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_steel')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_steel')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_steel')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_steel').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "bronzeDESC"
			                        	texture = "gfx/interface/icons/tradegoods/bronze.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "bronze"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_bronze')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_bronze')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                   		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_bronze')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_bronze')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_bronze')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_bronze_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_bronze')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_bronze')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_bronze')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_bronze').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "machine_partsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/machine_parts.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "machine_parts"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_machine_parts')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_machine_parts')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_machine_parts')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_machine_parts')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_machine_parts')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_machine_parts_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_machine_parts')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_machine_parts')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_machine_parts')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_machine_parts').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "chemicalsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/chemicals.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "chemicals"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_chemicals')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_chemicals')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_chemicals')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_chemicals')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_chemicals')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_chemicals_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_chemicals')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_chemicals')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_chemicals')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_chemicals').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "naval_suppliesDESC"
			                        	texture = "gfx/interface/icons/tradegoods/naval_supplies.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "naval_supplies"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_naval_supplies')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_naval_supplies')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_naval_supplies')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_naval_supplies')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_naval_supplies')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_naval_supplies_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_naval_supplies')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_naval_supplies')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_naval_supplies')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_naval_supplies').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "steel_shipsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/steel_ships.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "steel_ships"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_steel_ships')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_steel_ships')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_steel_ships')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_steel_ships')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_steel_ships')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_steel_ships_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_steel_ships')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_steel_ships')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_steel_ships')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_steel_ships').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "wooden_shipsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/wooden_ships.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "wooden_ships"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_wooden_ships')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_wooden_ships')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
				                    	tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_wooden_ships')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_wooden_ships')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_wooden_ships')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_wooden_ships_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_wooden_ships')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_wooden_ships')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_wooden_ships')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_wooden_ships').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "petrochemicalsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/petrochemicals.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "petrochemicals"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_petrochemicals')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_petrochemicals')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_petrochemicals')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_petrochemicals')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_petrochemicals')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_petrochemicals_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_petrochemicals')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_petrochemicals')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_petrochemicals')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_petrochemicals').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "early_munitionsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/early_munitions.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "early_munitions"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_early_munitions')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_early_munitions')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_early_munitions')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_early_munitions')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_early_munitions')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_early_munitions_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_early_munitions')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_early_munitions')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_early_munitions')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_early_munitions').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "late_munitionsDESC"
			                        	texture = "gfx/interface/icons/tradegoods/late_munitions.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "late_munitions"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_late_munitions')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_late_munitions')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_late_munitions')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_late_munitions')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_late_munitions')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_late_munitions_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_late_munitions')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_late_munitions')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_late_munitions')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_late_munitions').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "early_artilleryDESC"
			                        	texture = "gfx/interface/icons/tradegoods/early_artillery.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "early_artillery"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_early_artillery')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_early_artillery')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_early_artillery')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_early_artillery')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_early_artillery')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_early_artillery_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_early_artillery')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_early_artillery')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_early_artillery')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_early_artillery').GetValue|3]"
			                        }
				                }
				                TradeGoodOverviewItem = {
			                        blockoverride "image_and_tooltip"
			                        {
			                        	tooltip = "late_artilleryDESC"
			                        	texture = "gfx/interface/icons/tradegoods/late_artillery.dds"
			                        }
				                    blockoverride "name" {
				                    	text = "late_artillery"
				                    }
			                        blockoverride "produced_text"
			                        {
			                        	text = "[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('GOODS_national_production_late_artillery')|1]"
			                        }
			                        blockoverride "top_producers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_producers_late_artillery')]"
			                        }
			                        blockoverride "top_producers_tooltip"
			                        {
			                    		tooltip = "[Scope.GetCountry.GetName], producing [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('GOODS_national_production_late_artillery')|0] units"
			                        }
			                        blockoverride "top_consumers_datamodel"
			                        {
			                        	datamodel = "[Player.MakeScope.GetList('top_consumers_late_artillery')]"
			                        }
			                        blockoverride "top_consumers_tooltip"
			                        {
			                        	tooltip = "[Scope.GetCountry.GetName], consuming [GuiScope.SetRoot(Scope.GetCountry.MakeScope).ScriptValue('DEMAND_country_late_artillery')|0] units"
			                        }
			                        blockoverride "demand_text"
			                        {
			                        	text = "[TradeView.GetPlayer.MakeScope.GetVariable('DEMAND_country_late_artillery_display').GetValue|1]"
			                        }
			                        blockoverride "balance_text_and_tooltip"
			                        {
			                        	tooltip = "Income £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_revenue_late_artillery')|+=3] / Expenditure £[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_total_expenditure_late_artillery')|+=3]"
			                        	text = "£[GuiScope.SetRoot(TradeView.GetPlayer.MakeScope).ScriptValue('TRADE_cash_balance_late_artillery')|+=3]"
			                        }
			                        blockoverride "global_price_text"
			                        {
			                        	text = "£[TradeView.GetPlayer.MakeScope.GetVariable('country_unit_price_late_artillery').GetValue|3]"
			                        }
				                }
							}
						}
					}
				}
			}
			# Trade Zones Tab
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('trade_tabs', 'trade_zone_view_open')]"
				direction = vertical
				margin = { 10 10 }

				flowcontainer = {
					margin_bottom = 16
					margin_top = 16
					spacing = 10
					direction = horizontal
					position = { 10% 0 }
					datamodel = "[GetGlobalList('global_powers_list')]"
					item = {
						country_flag = {
							datacontext = "[Scope.GetCountry]"
							visible = yes
							blockoverride "flag"
							{
								texture = "[Country.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Country.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							blockoverride "size"
							{
								size = { 56 56 }
							}
							blockoverride "click"
							{
								onclick = "[OpenDiplomacy(Country)]"
							}
							tooltip = "[Country.GetName]: [GuiScope.SetRoot( Scope.Country.MakeScope ).ScriptValue('DIPLOMACY_global_power_score')|0]"
						}
					}
				}
				margin_widget = {
					size = { 920 820 }
					scrollarea = {
						size = { 100% 100% }
						layoutpolicy_horizontal = expanding
						scrollbarpolicy_horizontal = always_off
						using = VerticalScrollAreaCutOff
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						scrollwidget = {
							flowcontainer = {
								direction = vertical
								spacing = 5
								margin_top = 10
								margin_left = 20
								margin_bottom = 10
								datamodel = "[Player.MakeScope.GetList('trade_zones_list')]"
								item = {
									button = {
										size = { 880 90 }
										using = list_item
										flowcontainer = {
											datacontext = "[Scope.Province]"
											spacing = 30
											textbox = {
												size = { 330 90 }
												background = {
													shaderfile = "gfx/FX/pdxgui_default.shader"
													using = beige_background
													using = portrait_x32y32bd_alpha
													alpha = 0.15
													margin = { -3 -3 }
												}
												align = hcenter
												using = BaseFontM
												using = Black_FontColor
												text = "[Province.Custom('state_trade_zone_loc')]" #TradeZone name
											}
											flowcontainer = {
												parentanchor = vcenter
												country_flag = {
													position = { 372 50 }
													datacontext = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n1').GetCountry]"
													visible = yes
													blockoverride "flag"
													{
														
														texture = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n1').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
														frame = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n1').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
														framesize = { 56 56 }
													}
													blockoverride "size"
													{
														size = { 32 32 }
													}
													blockoverride "click"
													{
														onclick = "[OpenDiplomacy(Province.MakeScope.GetVariable('DIPLOMACY_power_n1').GetCountry)]"
													}
													tooltip = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n1').GetCountry.GetName]: Number 1 power"
												}
												country_flag = {
													position = { 372 50 }
													datacontext = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n2').GetCountry]"
													visible = yes
													blockoverride "flag"
													{
														
														texture = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n2').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
														frame = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n2').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
														framesize = { 56 56 }
													}
													blockoverride "size"
													{
														size = { 32 32 }
													}
													blockoverride "click"
													{
														onclick = "[OpenDiplomacy(Province.MakeScope.GetVariable('DIPLOMACY_power_n2').GetCountry)]"
													}
													tooltip = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n2').GetCountry.GetName]: Number 2 power"
												}
												country_flag = {
													position = { 372 50 }
													datacontext = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n3').GetCountry]"
													visible = yes
													blockoverride "flag"
													{
														
														texture = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n3').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
														frame = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n3').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
														framesize = { 56 56 }
													}
													blockoverride "size"
													{
														size = { 32 32 }
													}
													blockoverride "click"
													{
														onclick = "[OpenDiplomacy(Province.MakeScope.GetVariable('DIPLOMACY_power_n3').GetCountry)]"
													}
													tooltip = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n3').GetCountry.GetName]: Number 3 power"
												}
												country_flag = {
													position = { 372 50 }
													datacontext = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n4').GetCountry]"
													visible = yes
													blockoverride "flag"
													{
														
														texture = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n4').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
														frame = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n4').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
														framesize = { 56 56 }
													}
													blockoverride "size"
													{
														size = { 32 32 }
													}
													blockoverride "click"
													{
														onclick = "[OpenDiplomacy(Province.MakeScope.GetVariable('DIPLOMACY_power_n4').GetCountry)]"
													}
													tooltip = "[Province.MakeScope.GetVariable('DIPLOMACY_power_n4').GetCountry.GetName]: Number 4 power"
												}
											}
											widget = {
												size = { 190 90 }
												background = {
													shaderfile = "gfx/FX/pdxgui_default.shader"
													using = beige_background
													using = portrait_x32y32bd_alpha
													alpha = 0.15
													margin = { -3 -3 }
												}
												icon_and_text = {
													size = { 170 90 }
													parentanchor = hcenter
													blockoverride "Icon" { texture = "gfx/interface/icons/menu_buttons/menu_trade.dds" }
													blockoverride "Text" { 
														text = "#T [Scope.GetProvince.MakeScope.Var('TZ_shipping').GetValue|0]#!/ #Y [GuiScope.SetRoot( Scope.GetProvince.MakeScope ).ScriptValue('SHIPPING_total_in_TZ')|0]" 
													}
													tooltip = "#T Actual convoys passing through #! / #Y Capacity for convoys"
												}
											}
											widget = {
												size = { 120 90 }
												CustomPiechart = {
													blockoverride "piechart_size_and_pos" {
														size = { 80 80 }
														parentanchor = vcenter
													}
													blockoverride "datamodel" {
														datamodel = "[Scope.GetProvince.MakeScope.GetList('shipping_power_list')]"
													}
													blockoverride "slice_tooltip" {
														tooltip = "[Scope.GetProvince.MakeScope.GetVariable('tracking_TZ_shipping_for_tag').GetCountry.GetName] controls #G [GuiScope.SetRoot( Scope.GetProvince.MakeScope ).ScriptValue('SHIPPING_percentage_in_TZ')|%]#! of shipping here (capacity of #G [Scope.GetProvince.MakeScope.GetVariable('shipping_power_total').GetValue|0]#! convoys every quarter)."
													}
													blockoverride "slice_size" {
														value = "[FixedPointToFloat( Scope.GetProvince.MakeScope.GetVariable('shipping_power_total').GetValue )]"
													}
													blockoverride "slice_color" {
														color = "[Scope.GetProvince.MakeScope.GetVariable('tracking_TZ_shipping_for_tag').GetCountry.GetMapColor]"
													}
													blockoverride "alpha" {
														alpha = 1
													}
													blockoverride "tag_text" {
														text = ""
													}
												}
												tradezone_penetration_info = { 
													blockoverride "dataconext" { "[Scope.Province]" }
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			# Industry Tab
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('trade_tabs', 'industry_tab_open')]"
				direction = vertical
				margin = { 10 10 }
			}
		}
	}
}